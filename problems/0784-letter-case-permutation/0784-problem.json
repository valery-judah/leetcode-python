{
  "category": "",
  "id": "784",
  "name": "Letter Case Permutation",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/letter-case-permutation/",
  "slug": "letter-case-permutation",
  "isPaidOnly": false,
  "tags": [
    "String",
    "Backtracking",
    "Bit Manipulation"
  ],
  "similar_questions": [
    {
      "title": "Subsets",
      "difficulty": "Medium",
      "slug": "subsets"
    },
    {
      "title": "Brace Expansion",
      "difficulty": "Medium",
      "slug": "brace-expansion"
    }
  ],
  "questionId": "800",
  "questionFrontendId": "784",
  "title": "Letter Case Permutation",
  "titleSlug": "letter-case-permutation",
  "content": "<p>Given a string <code>s</code>, you&nbsp;can transform every letter individually to be lowercase or uppercase to create another string.</p>\n\n<p>Return <em>a list of all possible strings we could create</em>. Return the output in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a1b2&quot;\n<strong>Output:</strong> [&quot;a1b2&quot;,&quot;a1B2&quot;,&quot;A1b2&quot;,&quot;A1B2&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;3z4&quot;\n<strong>Output:</strong> [&quot;3z4&quot;,&quot;3Z4&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 12</code></li>\n\t<li><code>s</code> consists of lowercase English letters, uppercase English letters, and digits.</li>\n</ul>\n",
  "likes": 4790,
  "dislikes": 158,
  "stats": {
    "totalAccepted": "350.5K",
    "totalSubmission": "465.1K",
    "totalAcceptedRaw": 350514,
    "totalSubmissionRaw": 465093,
    "acRate": "75.4%"
  },
  "topicTags": [
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Backtracking",
      "slug": "backtracking"
    },
    {
      "name": "Bit Manipulation",
      "slug": "bit-manipulation"
    }
  ],
  "metaData": {
    "name": "letterCasePermutation",
    "params": [
      {
        "name": "s",
        "type": "string"
      }
    ],
    "return": {
      "type": "list<string>"
    }
  },
  "discussion_posts": [
    {
      "name": "brahmp98",
      "year": 2024,
      "content": "solved this by myself. gotta keep moving forward",
      "voteCount": 14
    },
    {
      "name": "ihsansfd",
      "year": 2023,
      "content": "easiest medium problem",
      "voteCount": 14
    },
    {
      "name": "Saket1209",
      "year": 2023,
      "content": "You told to return in any order but it isn\\'t the case.",
      "voteCount": 10
    },
    {
      "name": "cOde_Ranvir25",
      "year": 2023,
      "content": "A basic approach to generating all possible permutations of a string where each letter can be either lowercase or uppercase is to use a recursive approach that generates a search tree with two branches at each level of recursion, one for the lowercase letter and one for the uppercase letter.\\n\\nThe recursion should start with the first character of the input string, and recursively generate all possible combinations of the rest of the string by calling the function recursively with the remaining part of the string. The base case for the recursion is when there are no more characters left in the input string, at which point the current permutation can be added to a result list.\\n\\nTo avoid modifying the original input string, it is recommended to convert the input string into a character array before passing it to the recursive function. At each level of recursion, the function should create a new character array to represent the current state of the string. The current character should then be added to the new array in lowercase and uppercase form, and the recursion should be called with the remaining part of the string and the new character array.\\n\\nThe final result will be a list of all possible permutations of the input string with the desired case variations.",
      "voteCount": 8
    },
    {
      "name": "jayamrutkar",
      "year": 2023,
      "content": "Shouldnt be an hard problem?",
      "voteCount": 6
    },
    {
      "name": "singhpratapvarang",
      "year": 2025,
      "content": "i tried so hard and got so far but in the end it doesnt even matter (Due to TLE)",
      "voteCount": 5
    },
    {
      "name": "sharyu01",
      "year": 2025,
      "content": "Aditya Verma really made it easy to understand Recursion !! Wow I solved it logically ",
      "voteCount": 3
    },
    {
      "name": "frankbusinessmail",
      "year": 2024,
      "content": "the only medium question I\\'ve one shotted within 3 mins. ",
      "voteCount": 3
    },
    {
      "name": "roh9934",
      "year": 2025,
      "content": "\\u2018a\\u2019 ^ 32 returns \\u2018A\\u2019\\nand \\u2018A\\u2019 ^ 32 returns \\u2018a\\u2019.\\nWho founded this, i want to know her name.",
      "voteCount": 2
    },
    {
      "name": "Automedon",
      "year": 2024,
      "content": "it should be easy",
      "voteCount": 2
    }
  ]
}
