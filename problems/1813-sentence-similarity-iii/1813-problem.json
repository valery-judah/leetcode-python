{
  "category": "",
  "id": "1813",
  "name": "Sentence Similarity III",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/sentence-similarity-iii/",
  "slug": "sentence-similarity-iii",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Two Pointers",
    "String"
  ],
  "similar_questions": [],
  "questionId": "1923",
  "questionFrontendId": "1813",
  "title": "Sentence Similarity III",
  "titleSlug": "sentence-similarity-iii",
  "content": "<p>You are given two strings <code>sentence1</code> and <code>sentence2</code>, each representing a <strong>sentence</strong> composed of words. A sentence is a list of <strong>words</strong> that are separated by a <strong>single</strong> space with no leading or trailing spaces. Each word consists of only uppercase and lowercase English characters.</p>\n\n<p>Two sentences <code>s1</code> and <code>s2</code> are considered <strong>similar</strong> if it is possible to insert an arbitrary sentence (<em>possibly empty</em>) inside one of these sentences such that the two sentences become equal. <strong>Note</strong> that the inserted sentence must be separated from existing words by spaces.</p>\n\n<p>For example,</p>\n\n<ul>\n\t<li><code>s1 = &quot;Hello Jane&quot;</code> and <code>s2 = &quot;Hello my name is Jane&quot;</code> can be made equal by inserting <code>&quot;my name is&quot;</code> between <code>&quot;Hello&quot;</code><font face=\"monospace\"> </font>and <code>&quot;Jane&quot;</code><font face=\"monospace\"> in s1.</font></li>\n\t<li><font face=\"monospace\"><code>s1 = &quot;Frog cool&quot;</code> </font>and<font face=\"monospace\"> <code>s2 = &quot;Frogs are cool&quot;</code> </font>are <strong>not</strong> similar, since although there is a sentence <code>&quot;s are&quot;</code> inserted into <code>s1</code>, it is not separated from <code>&quot;Frog&quot;</code> by a space.</li>\n</ul>\n\n<p>Given two sentences <code>sentence1</code> and <code>sentence2</code>, return <strong>true</strong> if <code>sentence1</code> and <code>sentence2</code> are <strong>similar</strong>. Otherwise, return <strong>false</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">sentence1 = &quot;My name is Haley&quot;, sentence2 = &quot;My Haley&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><code>sentence2</code> can be turned to <code>sentence1</code> by inserting &quot;name is&quot; between &quot;My&quot; and &quot;Haley&quot;.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">sentence1 = &quot;of&quot;, sentence2 = &quot;A lot of words&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>No single sentence can be inserted inside one of the sentences to make it equal to the other.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">sentence1 = &quot;Eating right now&quot;, sentence2 = &quot;Eating&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><code>sentence2</code> can be turned to <code>sentence1</code> by inserting &quot;right now&quot; at the end of the sentence.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= sentence1.length, sentence2.length &lt;= 100</code></li>\n\t<li><code>sentence1</code> and <code>sentence2</code> consist of lowercase and uppercase English letters and spaces.</li>\n\t<li>The words in <code>sentence1</code> and <code>sentence2</code> are separated by a single space.</li>\n</ul>\n",
  "likes": 1050,
  "dislikes": 162,
  "stats": {
    "totalAccepted": "129K",
    "totalSubmission": "265.7K",
    "totalAcceptedRaw": 129032,
    "totalSubmissionRaw": 265687,
    "acRate": "48.6%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    },
    {
      "name": "String",
      "slug": "string"
    }
  ],
  "metaData": {
    "name": "areSentencesSimilar",
    "params": [
      {
        "name": "sentence1",
        "type": "string"
      },
      {
        "type": "string",
        "name": "sentence2"
      }
    ],
    "return": {
      "type": "boolean"
    }
  },
  "discussion_posts": [
    {
      "name": "Msey",
      "year": 2023,
      "content": "This problem\\'s edgecases are like a minesweeper game ",
      "voteCount": 178
    },
    {
      "name": "then00bprogrammer",
      "year": 2023,
      "content": "problem description is unclear",
      "voteCount": 115
    },
    {
      "name": "BeginnerLearnerLee",
      "year": 2024,
      "content": "Here is one of the edge case:\\n\"A\"\\n\"a A b A\"\\n\\nThis is diabolic ",
      "voteCount": 107
    },
    {
      "name": "shengyao1998",
      "year": 2024,
      "content": "Here I am to further lowered the 33.5% AC Rate.",
      "voteCount": 102
    },
    {
      "name": "hasferrr",
      "year": 2024,
      "content": "Some edge cases:\n\ns1= \"hello world python\"\ns2= \"python\"\n---> True because \"python\" is suffix of s1\nwe can insert the rest on the left\n\ns1= \"hello world python\"\ns2= \"hello\"\n---> True because \"hello\" is prefix of s1\nwe can insert the rest on the right\n\ns1= \"hello world python\"\ns2= \"hello python\"\n---> True because \"hello\" is prefix and \"python\" is suffix of s1\nwe can insert \"world\" on the middle\n\ns1= \"hello world python\"\ns2= \"world\"\n---> **False** because \"world\" is neither prefix nor suffix of s1\nwe can't insert the rest on the left AND right\n",
      "voteCount": 65
    },
    {
      "name": "adityakumar8068",
      "year": 2024,
      "content": "TESTCASES------------------->\n```\n\"A a a a A A A\"\n\"A A a a a\"\n\"A B C D B B\"\n\"A B B\"\n\"z z z z\"\n\"zz z\"\n\"A a a\"\n\"Aa a\"\n\"hello racecar\"\n\"hello racecar acecar\"\n\"A B C D B B\"\n\"A B B\"\n\"hello\"\n\"hr uyello\"\n\"DN PD\"\n\"D\"\n```\nmore in reply",
      "voteCount": 52
    },
    {
      "name": "JParks1982",
      "year": 2023,
      "content": "The acceptance rate concerned me at first, but I didn\\'t find the \"edge cases\" to be problematic with a two-pointers approach (well, technically 3 pointers). Tokenize both strings into word tokens, set a single left pointer to the start of both strings and two right pointers, one each for the right side of each string. Iterate first from left while tokens of both strings match, break when condition fails. Do the same from the right side of both strings. Afterward, if the left pointer equals at least one of the right pointers, the sentences are similar.",
      "voteCount": 44
    },
    {
      "name": "TheScarface43",
      "year": 2024,
      "content": "Wow, I hate string problems.",
      "voteCount": 41
    },
    {
      "name": "ccolombe12",
      "year": 2024,
      "content": "The dailies have been great recently. Fun problem ",
      "voteCount": 21
    },
    {
      "name": "whiff",
      "year": 2024,
      "content": "Just do the basic nothing fancy!\nThey must hold either the common prefix or common suffix.",
      "voteCount": 19
    }
  ]
}
