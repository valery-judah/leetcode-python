{
  "category": "",
  "id": "56",
  "name": "Merge Intervals",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/merge-intervals/",
  "slug": "merge-intervals",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Sorting"
  ],
  "similar_questions": [
    {
      "title": "Insert Interval",
      "difficulty": "Medium",
      "slug": "insert-interval"
    },
    {
      "title": "Meeting Rooms",
      "difficulty": "Easy",
      "slug": "meeting-rooms"
    },
    {
      "title": "Meeting Rooms II",
      "difficulty": "Medium",
      "slug": "meeting-rooms-ii"
    },
    {
      "title": "Teemo Attacking",
      "difficulty": "Easy",
      "slug": "teemo-attacking"
    },
    {
      "title": "Add Bold Tag in String",
      "difficulty": "Medium",
      "slug": "add-bold-tag-in-string"
    },
    {
      "title": "Range Module",
      "difficulty": "Hard",
      "slug": "range-module"
    },
    {
      "title": "Employee Free Time",
      "difficulty": "Hard",
      "slug": "employee-free-time"
    },
    {
      "title": "Partition Labels",
      "difficulty": "Medium",
      "slug": "partition-labels"
    },
    {
      "title": "Interval List Intersections",
      "difficulty": "Medium",
      "slug": "interval-list-intersections"
    },
    {
      "title": "Amount of New Area Painted Each Day",
      "difficulty": "Hard",
      "slug": "amount-of-new-area-painted-each-day"
    },
    {
      "title": "Longest Substring of One Repeating Character",
      "difficulty": "Hard",
      "slug": "longest-substring-of-one-repeating-character"
    },
    {
      "title": "Count Integers in Intervals",
      "difficulty": "Hard",
      "slug": "count-integers-in-intervals"
    },
    {
      "title": "Divide Intervals Into Minimum Number of Groups",
      "difficulty": "Medium",
      "slug": "divide-intervals-into-minimum-number-of-groups"
    },
    {
      "title": "Determine if Two Events Have Conflict",
      "difficulty": "Easy",
      "slug": "determine-if-two-events-have-conflict"
    },
    {
      "title": "Count Ways to Group Overlapping Ranges",
      "difficulty": "Medium",
      "slug": "count-ways-to-group-overlapping-ranges"
    },
    {
      "title": "Points That Intersect With Cars",
      "difficulty": "Easy",
      "slug": "points-that-intersect-with-cars"
    },
    {
      "title": "Count Days Without Meetings",
      "difficulty": "Medium",
      "slug": "count-days-without-meetings"
    },
    {
      "title": "Minimize Connected Groups by Inserting Interval",
      "difficulty": "Medium",
      "slug": "minimize-connected-groups-by-inserting-interval"
    }
  ],
  "questionId": "56",
  "questionFrontendId": "56",
  "title": "Merge Intervals",
  "titleSlug": "merge-intervals",
  "content": "<p>Given an array&nbsp;of <code>intervals</code>&nbsp;where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>, merge all overlapping intervals, and return <em>an array of the non-overlapping intervals that cover all the intervals in the input</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,3],[2,6],[8,10],[15,18]]\n<strong>Output:</strong> [[1,6],[8,10],[15,18]]\n<strong>Explanation:</strong> Since intervals [1,3] and [2,6] overlap, merge them into [1,6].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,4],[4,5]]\n<strong>Output:</strong> [[1,5]]\n<strong>Explanation:</strong> Intervals [1,4] and [4,5] are considered overlapping.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[4,7],[1,4]]\n<strong>Output:</strong> [[1,7]]\n<strong>Explanation:</strong> Intervals [1,4] and [4,7] are considered overlapping.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
  "likes": 23824,
  "dislikes": 874,
  "stats": {
    "totalAccepted": "3.4M",
    "totalSubmission": "6.9M",
    "totalAcceptedRaw": 3439624,
    "totalSubmissionRaw": 6895469,
    "acRate": "49.9%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Sorting",
      "slug": "sorting"
    }
  ],
  "metaData": {
    "name": "merge",
    "params": [
      {
        "name": "intervals",
        "type": "integer[][]"
      }
    ],
    "return": {
      "type": "integer[][]"
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": true,
        "name": "Meta",
        "slug": "facebook",
        "timesEncountered": 105
      },
      {
        "taggedByAdmin": false,
        "name": "Amazon",
        "slug": "amazon",
        "timesEncountered": 55
      },
      {
        "taggedByAdmin": true,
        "name": "Google",
        "slug": "google",
        "timesEncountered": 34
      },
      {
        "taggedByAdmin": true,
        "name": "Microsoft",
        "slug": "microsoft",
        "timesEncountered": 22
      },
      {
        "taggedByAdmin": true,
        "name": "Bloomberg",
        "slug": "bloomberg",
        "timesEncountered": 12
      },
      {
        "taggedByAdmin": false,
        "name": "Apple",
        "slug": "apple",
        "timesEncountered": 11
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "leet_leak",
      "year": 2023,
      "content": "The list is not sorted! Please give a clarification!",
      "voteCount": 1003
    },
    {
      "name": "JatinBedii",
      "year": 2024,
      "content": "in given examples it is giving assumption that array is sorted.Please provide better test cases leetcode team",
      "voteCount": 159
    },
    {
      "name": "adityakumar8068",
      "year": 2024,
      "content": "imp test case:-\\n[[1,3],[2,6],[8,10],[15,18]]\\n[[1,4],[4,5]]\\n [[1,4],[0,0]]\\n[[1,3], [2,6] ,[8,10] ,[8,9], [9,11],[15,18], [2,4] ,[16,17]]",
      "voteCount": 85
    },
    {
      "name": "ayush0704",
      "year": 2024,
      "content": "This question broke all my confidence ",
      "voteCount": 64
    },
    {
      "name": "janetzki",
      "year": 2020,
      "content": "The problem description does not state that all interval starts are less or equal than their ends. However, this is true for all test cases.",
      "voteCount": 64
    },
    {
      "name": "dialectrical",
      "year": 2021,
      "content": "Title.\\n\\nAm I missing something in the explination of overlap?",
      "voteCount": 61
    },
    {
      "name": "xiaoyuqian2",
      "year": 2018,
      "content": "This is a follow-up question in interviews. Does anyone have any idea?",
      "voteCount": 40
    },
    {
      "name": "MavsLee",
      "year": 2020,
      "content": "want to discuss about the FB follow up question, \"How do you add intervals and merge them for a large stream of intervals? (Facebook Follow-up Question)\" from here, https://leetcode.com/problems/merge-intervals/discuss/355318/Fully-Explained-and-Clean-Interval-Tree-for-Facebook-Follow-Up-No-Sorting \\n\\nIf this is an real world abstrcted problem, i\\'d prefer to use divide and conquer technique depends on the requirements. For example, partitioning input intervals based on interval start/end value, i.e we have 1000 buckets, inside each bucket we maintain a sorted intervals, each bucket can be in one machine or multiples buckets in one machine. then we use merge those bucket 2 by 2 until to the point each bucket contains maximum intervals. And make sure no intervals are across two buckets\\n\\nFor either endless incoming stream mentioned here or memory is too small to load all intervals, this approach should work. \\nthis BST approach is impresive but not realistic for me to write in the interview\\nhttps://leetcode.com/problems/merge-intervals/discuss/21451/Share-my-BST-interval-tree-solution-C%2B%2B-No-sorting!\\n\\nHope this can help, thanks",
      "voteCount": 23
    },
    {
      "name": "mission_2023",
      "year": 2019,
      "content": "In C# [,] represents a 2d array\\n[][] is called jagged array.\\n\\nPlease change it. Else it is getting lots of confusion.",
      "voteCount": 20
    },
    {
      "name": "YangYeh",
      "year": 2024,
      "content": "Test cases\\n```\\n[[1,3],[2,6],[8,10],[15,18]]\\n[[1,4],[4,5]]\\n[[1,1],[2,2],[0,0],[2,3],[1,3],[3,5],[2,3],[3,5]]\\n[[2,3],[2,2],[3,3],[1,3],[5,7],[2,2],[4,6]]\\n[[1,3],[2,6],[8,10],[8,9],[9,11],[15,18],[2,4],[16,17]]\\n[[1012,1136],[1137,1417],[1015,1020]]\\n[[1,3]]\\n[[1,4],[2,3]]\\n```",
      "voteCount": 19
    }
  ]
}
