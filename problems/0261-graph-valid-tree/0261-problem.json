{
  "category": "",
  "id": "261",
  "name": "Graph Valid Tree",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/graph-valid-tree/",
  "slug": "graph-valid-tree",
  "isPaidOnly": true,
  "tags": [
    "Depth-First Search",
    "Breadth-First Search",
    "Union Find",
    "Graph"
  ],
  "similar_questions": [
    {
      "title": "Course Schedule",
      "difficulty": "Medium",
      "slug": "course-schedule"
    },
    {
      "title": "Number of Connected Components in an Undirected Graph",
      "difficulty": "Medium",
      "slug": "number-of-connected-components-in-an-undirected-graph"
    },
    {
      "title": "Keys and Rooms",
      "difficulty": "Medium",
      "slug": "keys-and-rooms"
    }
  ],
  "questionId": "261",
  "questionFrontendId": "261",
  "title": "Graph Valid Tree",
  "titleSlug": "graph-valid-tree",
  "content": "<p>You have a graph of <code>n</code> nodes labeled from <code>0</code> to <code>n - 1</code>. You are given an integer n and a list of <code>edges</code> where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that there is an undirected edge between nodes <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code> in the graph.</p>\n\n<p>Return <code>true</code> <em>if the edges of the given graph make up a valid tree, and</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/12/tree1-graph.jpg\" style=\"width: 222px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> n = 5, edges = [[0,1],[0,2],[0,3],[1,4]]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/12/tree2-graph.jpg\" style=\"width: 382px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> n = 5, edges = [[0,1],[1,2],[2,3],[1,3],[1,4]]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2000</code></li>\n\t<li><code>0 &lt;= edges.length &lt;= 5000</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; n</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>There are no self-loops or repeated edges.</li>\n</ul>\n",
  "likes": 3422,
  "dislikes": 110,
  "stats": {
    "totalAccepted": "495.1K",
    "totalSubmission": "1M",
    "totalAcceptedRaw": 495103,
    "totalSubmissionRaw": 1000709,
    "acRate": "49.5%"
  },
  "topicTags": [
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Union Find",
      "slug": "union-find"
    },
    {
      "name": "Graph",
      "slug": "graph"
    }
  ],
  "metaData": {
    "name": "validTree",
    "params": [
      {
        "name": "n",
        "type": "integer"
      },
      {
        "name": "edges",
        "type": "integer[][]"
      }
    ],
    "return": {
      "type": "boolean"
    }
  },
  "discussion_posts": [
    {
      "name": "CivilCS",
      "year": 2023,
      "content": "Tips:\n- Check if there is a cycle\n- Check if there the graph is one component\n\n\n\n",
      "voteCount": 27
    },
    {
      "name": "RohitSgh",
      "year": 2022,
      "content": "**Theorem** \\n> A connected graph on $n$ nodes is a tree if and only if it has $n\\u22121$ edges. \\n\\nFor [Further Reading ](http://compalg.inf.elte.hu/~tony/Oktatas/TDK/FINAL/Chap%204.PDF). In other words\\n> Any connected graph with $n$ nodes and $n\\u22121$ edges is a tree.\\n\\nThus, we should return `true` if **both** of these are `true`.\\n- Given `n`, number of `edges` should be `n-1`\\n- All `n` nodes should be connected. In other words, there should be only 1 [Connected Component](https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/).",
      "voteCount": 19
    },
    {
      "name": "user2957XF",
      "year": 2022,
      "content": "It matters a lot that the question doesn't state whether the graph is directed or not. ",
      "voteCount": 19
    },
    {
      "name": "tin_le",
      "year": 2024,
      "content": "Is it just me or this one is just a simple Union-find problems?",
      "voteCount": 10
    },
    {
      "name": "namhlahade1",
      "year": 2023,
      "content": "Can we assume that if it is a tree, the root would be the zero node?",
      "voteCount": 8
    },
    {
      "name": "user0252t",
      "year": 2018,
      "content": "The common definition is a Directed Acyclic Graph (DAG) where each node has only 1 parent.\\n\\nBut this question talks about an undirected graph, therefore is not a DAG (therefore not a tree).\\n\\nAlso, how can you even ask \"how many parents does this node have\" if the edges are not directed?",
      "voteCount": 8
    },
    {
      "name": "Nintja",
      "year": 2019,
      "content": "Can anyone tell me why with one node and no edges the answer expected is true?\\n\\nedgeCount = 1, edges = [], expected: True",
      "voteCount": 4
    },
    {
      "name": "cfabri6",
      "year": 2019,
      "content": "the test is\\n\\n4\\n[[2,3],[1,2],[1,3]]\\n\\nThe test currently wants a False - presumably b/c the number of nodes 4 is not equal to the number of nodes visited (1,2,3).\\n\\nHowever, I see 3 valid nodes (1,2,3)...and 3 edges -  so, indeed there is a cycle since there is one too many edges and indeed the graph is connected - so per the vaguely implied criteria for \\'validity\\', this graph is valid eg true.\\n\\nthe test should return True and not False and the node count should be 3, not 4.",
      "voteCount": 3
    },
    {
      "name": "matthewjinmp",
      "year": 2025,
      "content": "very instructive problem right here. i learned a lot with minimal asphyxiation",
      "voteCount": 2
    },
    {
      "name": "mohamedlaminef",
      "year": 2025,
      "content": "daily problem and premium weekly problems are graph theory questions that deal with undirected trees. They use identical edge list formats and require validating the same core tree properties (connectivity + no cycles).",
      "voteCount": 2
    }
  ]
}
