{
  "category": "",
  "id": "200",
  "name": "Number of Islands",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/number-of-islands/",
  "slug": "number-of-islands",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Depth-First Search",
    "Breadth-First Search",
    "Union Find",
    "Matrix"
  ],
  "similar_questions": [
    {
      "title": "Surrounded Regions",
      "difficulty": "Medium",
      "slug": "surrounded-regions"
    },
    {
      "title": "Walls and Gates",
      "difficulty": "Medium",
      "slug": "walls-and-gates"
    },
    {
      "title": "Number of Islands II",
      "difficulty": "Hard",
      "slug": "number-of-islands-ii"
    },
    {
      "title": "Number of Connected Components in an Undirected Graph",
      "difficulty": "Medium",
      "slug": "number-of-connected-components-in-an-undirected-graph"
    },
    {
      "title": "Battleships in a Board",
      "difficulty": "Medium",
      "slug": "battleships-in-a-board"
    },
    {
      "title": "Number of Distinct Islands",
      "difficulty": "Medium",
      "slug": "number-of-distinct-islands"
    },
    {
      "title": "Max Area of Island",
      "difficulty": "Medium",
      "slug": "max-area-of-island"
    },
    {
      "title": "Count Sub Islands",
      "difficulty": "Medium",
      "slug": "count-sub-islands"
    },
    {
      "title": "Find All Groups of Farmland",
      "difficulty": "Medium",
      "slug": "find-all-groups-of-farmland"
    },
    {
      "title": "Count Unreachable Pairs of Nodes in an Undirected Graph",
      "difficulty": "Medium",
      "slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph"
    },
    {
      "title": "Maximum Number of Fish in a Grid",
      "difficulty": "Medium",
      "slug": "maximum-number-of-fish-in-a-grid"
    },
    {
      "title": "Count Islands With Total Value Divisible by K",
      "difficulty": "Medium",
      "slug": "count-islands-with-total-value-divisible-by-k"
    }
  ],
  "questionId": "200",
  "questionFrontendId": "200",
  "title": "Number of Islands",
  "titleSlug": "number-of-islands",
  "content": "<p>Given an <code>m x n</code> 2D binary grid <code>grid</code> which represents a map of <code>&#39;1&#39;</code>s (land) and <code>&#39;0&#39;</code>s (water), return <em>the number of islands</em>.</p>\n\n<p>An <strong>island</strong> is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [\n  [&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;]\n]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;]\n]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 300</code></li>\n\t<li><code>grid[i][j]</code> is <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n",
  "likes": 24207,
  "dislikes": 582,
  "stats": {
    "totalAccepted": "3.7M",
    "totalSubmission": "5.8M",
    "totalAcceptedRaw": 3652357,
    "totalSubmissionRaw": 5809482,
    "acRate": "62.9%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Union Find",
      "slug": "union-find"
    },
    {
      "name": "Matrix",
      "slug": "matrix"
    }
  ],
  "metaData": {
    "name": "numIslands",
    "params": [
      {
        "name": "grid",
        "type": "character[][]"
      }
    ],
    "return": {
      "type": "integer"
    },
    "manual": true
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": true,
        "name": "Amazon",
        "slug": "amazon",
        "timesEncountered": 73
      },
      {
        "taggedByAdmin": true,
        "name": "Google",
        "slug": "google",
        "timesEncountered": 23
      },
      {
        "taggedByAdmin": false,
        "name": "Bloomberg",
        "slug": "bloomberg",
        "timesEncountered": 16
      },
      {
        "taggedByAdmin": true,
        "name": "Meta",
        "slug": "facebook",
        "timesEncountered": 16
      },
      {
        "taggedByAdmin": false,
        "name": "LinkedIn",
        "slug": "linkedin",
        "timesEncountered": 13
      },
      {
        "taggedByAdmin": false,
        "name": "Apple",
        "slug": "apple",
        "timesEncountered": 11
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "vimalkrpal",
      "year": 2022,
      "content": "Why is \\'1\\' and \\'0\\' chars? Just to irritate people?",
      "voteCount": 1039
    },
    {
      "name": "MarkMarcel",
      "year": 2022,
      "content": "My challenge with solving this problem was getting the definition of an island. What I thought an island was, is a 1 surrounded by 0\\'s either on left and right or top and bottom. Like in image, my definition gave the 2 islands circled in example 1.\\n![image](https://assets.leetcode.com/users/images/0cadaf5c-858d-4cfd-91e8-27427e5d9d01_1649931304.8787706.png)\\n\\nAfter getting my test case wrong, I went through the discussions and based on solutions I realised the question meant an island is a string of 1s like shown in the images below\\n![image](https://assets.leetcode.com/users/images/e6a18482-7542-421a-bd27-cf79e44618e5_1649932030.3147244.png)\\n![image](https://assets.leetcode.com/users/images/b6938d3b-26d7-45d9-88a8-e4956b0ed10a_1649932030.3330166.png)\\n\\nHope it helps\\n",
      "voteCount": 560
    },
    {
      "name": "uwswe",
      "year": 2019,
      "content": "Looks like quite a few people labled their code as a BFS solution, when it\\'s actually DFS. And what\\'s worse is that you\\'re being praised for an incorrect solutiuon. Just because leetcode accepts it, doesn\\'t mean its correct.\\n\\nIf you don\\'t know the difference, then you should read the leetcode chapters on BFS, and DFS. The problem clearly states \"Queue and BFS\", and many people didn\\'t bother to use a queue at all. While this problem can be solved recursively (i.e. DFS), that\\'s not the solution we were asked to provide. The main difference between BFS and DFS is the order you visit the nodes. BFS uses a Queue to visit the closest nodes first, while DFS pretty much skips some nodes next door and follows the path until it reaches a deadend. \\n\\nWhat if the one node you were looking for was the 2nd neighbor, and you picked the first one and followed the path? \\n\\nA better question is, what are you going to do when your interviewer tells you that your recursive solution overflowed the call stack, and you need to improve your solution? Yeah you could implement a Stack yourself, and not use the call stack. But then what if your interviewer really wants the best solution possible, which should be BFS, but you give them your DFS solution?\\n\\nThere\\'s a lot of people who use leetcode to learn how to code, and understand data structures. Praising incorrect solutions is stumping the grow of future engineers. Also, if you want to proudly share your solution, please provide properly formatted code with descriptive variable names - no one wants to break out pen and paper to dissect your logic.\\n\\n",
      "voteCount": 268
    },
    {
      "name": "roundlet",
      "year": 2019,
      "content": "I just encountered this question in an interview, and I have no idea about how to handle this efficiently. Could anyone provides any hints?",
      "voteCount": 141
    },
    {
      "name": "dsa1995",
      "year": 2021,
      "content": "This problem is equivalent to finding out the number of connected components in a graph.",
      "voteCount": 90
    },
    {
      "name": "cool_leetcoder",
      "year": 2019,
      "content": "I have encountered this problem. I want to share my findings in case someone faces this one as well.\\n\\nBefore the start of coding, I thought the condition that one cell being inspected more than once is not a great issue because the duplicate cells are set to \\'0\\' anyway. However, that was WRONG. Because, before the cell is set to \\'0\\', it has already been pushed into queue by its neighbors.\\nThe time complexity is no longer O(M * N);\\nInstead, one cell cause 2 copies of neighbors, and then 4 copies of neighbors of neighbors ...\\n\\nSo as long as neighbors are pushed into queue, they should be set to \\'0\\' immediately.",
      "voteCount": 60
    },
    {
      "name": "WilmerKrisp",
      "year": 2022,
      "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/30e6adfa-133f-4607-ba65-521d0e774b34_1643961955.1657922.png)\\n\\n ![image](https://assets.leetcode.com/users/images/8f49d0cb-605d-4549-8546-b6ad7fd05f7a_1643964600.5265105.png)\\n",
      "voteCount": 46
    },
    {
      "name": "rabeeh",
      "year": 2015,
      "content": "Hi\\ncan you please explain more the testcases and what exactly island means? thanks",
      "voteCount": 45
    },
    {
      "name": "david120",
      "year": 2020,
      "content": "This is probably an old problem and not worth changing, but it makes little sense to not have the elements of `grid` be integers.  I was scratching my head at why what should have been a very simple solution was not working until I noticed the quotes on the 1s and 0s.  I suppose this is what I get for using python, which allows comparison between `1` and `\\'1\\'`.",
      "voteCount": 41
    },
    {
      "name": "kkchengaf",
      "year": 2024,
      "content": "gathered testcases from example and discussion\\n```\\n[[\"1\",\"1\",\"1\",\"1\",\"0\"],[\"1\",\"1\",\"0\",\"1\",\"0\"],[\"1\",\"1\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"0\",\"0\"]]\\n[[\"1\",\"1\",\"0\",\"0\",\"0\"],[\"1\",\"1\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"1\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"1\",\"1\"]]\\n[[\"1\",\"1\",\"1\"],[\"0\",\"1\",\"0\"],[\"0\",\"1\",\"0\"]]\\n[[\"1\"],[\"0\"],[\"1\"],[\"0\"],[\"1\"],[\"1\"]]\\n[[\"1\",\"0\",\"1\",\"1\",\"0\",\"1\",\"1\"]]\\n[[\"1\",\"1\",\"0\",\"0\",\"0\"],[\"1\",\"1\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"1\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"1\",\"1\"]]\\n```",
      "voteCount": 37
    }
  ]
}
