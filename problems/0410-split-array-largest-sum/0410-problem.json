{
  "category": "",
  "id": "410",
  "name": "Split Array Largest Sum",
  "difficulty": "Hard",
  "leetcode_url": "https://leetcode.com/problems/split-array-largest-sum/",
  "slug": "split-array-largest-sum",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Binary Search",
    "Dynamic Programming",
    "Greedy",
    "Prefix Sum"
  ],
  "similar_questions": [
    {
      "title": "Capacity To Ship Packages Within D Days",
      "difficulty": "Medium",
      "slug": "capacity-to-ship-packages-within-d-days"
    },
    {
      "title": "Divide Chocolate",
      "difficulty": "Hard",
      "slug": "divide-chocolate"
    },
    {
      "title": "Fair Distribution of Cookies",
      "difficulty": "Medium",
      "slug": "fair-distribution-of-cookies"
    },
    {
      "title": "Subsequence of Size K With the Largest Even Sum",
      "difficulty": "Medium",
      "slug": "subsequence-of-size-k-with-the-largest-even-sum"
    },
    {
      "title": "Maximum Total Beauty of the Gardens",
      "difficulty": "Hard",
      "slug": "maximum-total-beauty-of-the-gardens"
    },
    {
      "title": "Number of Ways to Split Array",
      "difficulty": "Medium",
      "slug": "number-of-ways-to-split-array"
    },
    {
      "title": "Minimum Cost to Split an Array",
      "difficulty": "Hard",
      "slug": "minimum-cost-to-split-an-array"
    },
    {
      "title": "Distribute Elements Into Two Arrays I",
      "difficulty": "Easy",
      "slug": "distribute-elements-into-two-arrays-i"
    },
    {
      "title": "Distribute Elements Into Two Arrays II",
      "difficulty": "Hard",
      "slug": "distribute-elements-into-two-arrays-ii"
    }
  ],
  "questionId": "410",
  "questionFrontendId": "410",
  "title": "Split Array Largest Sum",
  "titleSlug": "split-array-largest-sum",
  "content": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, split <code>nums</code> into <code>k</code> non-empty subarrays such that the largest sum of any subarray is <strong>minimized</strong>.</p>\n\n<p>Return <em>the minimized largest sum of the split</em>.</p>\n\n<p>A <strong>subarray</strong> is a contiguous part of the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [7,2,5,10,8], k = 2\n<strong>Output:</strong> 18\n<strong>Explanation:</strong> There are four ways to split nums into two subarrays.\nThe best way is to split it into [7,2,5] and [10,8], where the largest sum among the two subarrays is only 18.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5], k = 2\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> There are four ways to split nums into two subarrays.\nThe best way is to split it into [1,2,3] and [4,5], where the largest sum among the two subarrays is only 9.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= min(50, nums.length)</code></li>\n</ul>\n",
  "likes": 10828,
  "dislikes": 257,
  "stats": {
    "totalAccepted": "529.2K",
    "totalSubmission": "899.2K",
    "totalAcceptedRaw": 529177,
    "totalSubmissionRaw": 899210,
    "acRate": "58.8%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Binary Search",
      "slug": "binary-search"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    },
    {
      "name": "Greedy",
      "slug": "greedy"
    },
    {
      "name": "Prefix Sum",
      "slug": "prefix-sum"
    }
  ],
  "metaData": {
    "name": "splitArray",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      },
      {
        "name": "k",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": false,
        "name": "Google",
        "slug": "google",
        "timesEncountered": 12
      },
      {
        "taggedByAdmin": false,
        "name": "Amazon",
        "slug": "amazon",
        "timesEncountered": 11
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "devcodes9",
      "year": 2023,
      "content": "This question is same as famous book Allocation problem.",
      "voteCount": 192
    },
    {
      "name": "TobiasKaufmann",
      "year": 2022,
      "content": "You can use the solution of https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/description/ to solve this problem.",
      "voteCount": 86
    },
    {
      "name": "destroyer08",
      "year": 2020,
      "content": "I faced one question in an interview where problem statement was almost same but instead of taking sum of each partition you have to take maximum number from each partition and then minimize their sum.\\n\\nEx. nums = [7,2,5,10,8], m = 2\\n\\nIt may have 2 valid partitions [7,2,5] and [10,8] and answer would be 7+10=17 (which is minimum with m=2 partitions).\\n\\n[7] and [2,5,10,8] is also a valid partition because answer is still 17 in this case. \\n\\nPlease help if anyone knows the problem in leetcode or approach.",
      "voteCount": 41
    },
    {
      "name": "samarthpatel981",
      "year": 2024,
      "content": "Real-Life Example 1: Minimize Maximum Subarray Sum. \\n\\nImagine you are a project manager, and you have a set of tasks that need to be completed. Each task takes a certain amount of time. You have K workers, and your goal is to distribute the tasks in such a way that no worker is overloaded compared to others. The maximum workload (in terms of time) any worker gets should be minimized.\\n\\nTasks (in hours): [7, 2, 5, 10, 8] Workers (K): 2\\n\\nYou need to split these tasks among 2 workers in such a way that the worker with the heaviest workload has the least possible burden.\\n\\nReal-Life Example 2: Minimize Sum of Maximum Elements from Each Partition.\\n\\nScenario: Assigning Tasks Based on Maximum Expertise Level\\nNow imagine you\\'re managing a team of experts, each with a different level of expertise. Each task can only be done by one person in the team. You want to group the tasks into K sets and assign each set to an expert. Each expert will work on the hardest task in their assigned set. Your goal is to minimize the total difficulty of the hardest tasks your team members need to handle.\\n\\nTasks (in difficulty levels): [7, 2, 5, 10, 8] Team Members (K): 2\\n\\nYou need to split the tasks into K=2 groups and minimize the sum of the hardest tasks that each team member will work on..",
      "voteCount": 33
    },
    {
      "name": "Priyansi_Gusain",
      "year": 2024,
      "content": "thank god to strivers playlist \\nafter doing his recommended book allocation question \\ni did this question in 10 minutes\\nso happy right now\\nall thanks to strivers playlist\\nwho so ever is reading and are not aware of striver you should check him out\\nhis explanations are great and easy going\\nthanks me later",
      "voteCount": 25
    },
    {
      "name": "aerraj",
      "year": 2023,
      "content": "The problem is actually okay to solve but what it requires is how to identify it will fit in the binary search frame and how to perform operations as such. I was able to do the ship capacity question in under 10 minutes which has exact same solution as this one but had the hard time understanding how does it works here. So what we are doing is we are taking all possible maximum subarray sum and then checking if its possible to have the desired no of partitions with a value of sum less than that max subarray sum.",
      "voteCount": 22
    },
    {
      "name": "TobiasKaufmann",
      "year": 2023,
      "content": "You can use the solution of 1011. Capacity To Ship Packages Within D Days to solve this problem.",
      "voteCount": 20
    },
    {
      "name": "rvpk",
      "year": 2019,
      "content": "\\nExample, if we split the array into 2 subarray like the below, then we can max sub array total as 25.\\n[7,2,5,10,8] ==> [7], [2,5,10,10,8]\\nSo, whta does \"minimize the largest sum among these m subarrays\"  mean ?",
      "voteCount": 11
    },
    {
      "name": "drpepper07",
      "year": 2023,
      "content": "How does [2, 3, 1, 1, 1, 1, 1], with k = 5 return 3?\nDoesnt this use only 4 buckets  as opposed to 5?\n `--> [2], [3], [1,1,1], [1,1]`\nThe question specifies non empty buckets  as well.\n\n",
      "voteCount": 10
    },
    {
      "name": "galster",
      "year": 2016,
      "content": "\"....you can split the array into m non-empty continuous subarrays\"\\nI understood this to be.. that the subarrays themselves have to be continues (e.g. 1,2,3,4...)\\nThe wording should be changed to prevent ambiguities.",
      "voteCount": 10
    }
  ]
}
