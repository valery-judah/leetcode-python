{
  "category": "",
  "id": "160",
  "name": "Intersection of Two Linked Lists",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/intersection-of-two-linked-lists/",
  "slug": "intersection-of-two-linked-lists",
  "isPaidOnly": false,
  "tags": [
    "Hash Table",
    "Linked List",
    "Two Pointers"
  ],
  "similar_questions": [
    {
      "title": "Minimum Index Sum of Two Lists",
      "difficulty": "Easy",
      "slug": "minimum-index-sum-of-two-lists"
    }
  ],
  "questionId": "160",
  "questionFrontendId": "160",
  "title": "Intersection of Two Linked Lists",
  "titleSlug": "intersection-of-two-linked-lists",
  "content": "<p>Given the heads of two singly linked-lists <code>headA</code> and <code>headB</code>, return <em>the node at which the two lists intersect</em>. If the two linked lists have no intersection at all, return <code>null</code>.</p>\n\n<p>For example, the following two linked lists begin to intersect at node <code>c1</code>:</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_statement.png\" style=\"width: 500px; height: 162px;\" />\n<p>The test cases are generated such that there are no cycles anywhere in the entire linked structure.</p>\n\n<p><strong>Note</strong> that the linked lists must <strong>retain their original structure</strong> after the function returns.</p>\n\n<p><strong>Custom Judge:</strong></p>\n\n<p>The inputs to the <strong>judge</strong> are given as follows (your program is <strong>not</strong> given these inputs):</p>\n\n<ul>\n\t<li><code>intersectVal</code> - The value of the node where the intersection occurs. This is <code>0</code> if there is no intersected node.</li>\n\t<li><code>listA</code> - The first linked list.</li>\n\t<li><code>listB</code> - The second linked list.</li>\n\t<li><code>skipA</code> - The number of nodes to skip ahead in <code>listA</code> (starting from the head) to get to the intersected node.</li>\n\t<li><code>skipB</code> - The number of nodes to skip ahead in <code>listB</code> (starting from the head) to get to the intersected node.</li>\n</ul>\n\n<p>The judge will then create the linked structure based on these inputs and pass the two heads, <code>headA</code> and <code>headB</code> to your program. If you correctly return the intersected node, then your solution will be <strong>accepted</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_1_1.png\" style=\"width: 500px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n<strong>Output:</strong> Intersected at &#39;8&#39;\n<strong>Explanation:</strong> The intersected node&#39;s value is 8 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [4,1,8,4,5]. From the head of B, it reads as [5,6,1,8,4,5]. There are 2 nodes before the intersected node in A; There are 3 nodes before the intersected node in B.\n- Note that the intersected node&#39;s value is not 1 because the nodes with value 1 in A and B (2<sup>nd</sup> node in A and 3<sup>rd</sup> node in B) are different node references. In other words, they point to two different locations in memory, while the nodes with value 8 in A and B (3<sup>rd</sup> node in A and 4<sup>th</sup> node in B) point to the same location in memory.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_2.png\" style=\"width: 500px; height: 194px;\" />\n<pre>\n<strong>Input:</strong> intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n<strong>Output:</strong> Intersected at &#39;2&#39;\n<strong>Explanation:</strong> The intersected node&#39;s value is 2 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [1,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes before the intersected node in A; There are 1 node before the intersected node in B.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_3.png\" style=\"width: 300px; height: 189px;\" />\n<pre>\n<strong>Input:</strong> intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n<strong>Output:</strong> No intersection\n<strong>Explanation:</strong> From the head of A, it reads as [2,6,4]. From the head of B, it reads as [1,5]. Since the two lists do not intersect, intersectVal must be 0, while skipA and skipB can be arbitrary values.\nExplanation: The two lists do not intersect, so return null.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes of <code>listA</code> is in the <code>m</code>.</li>\n\t<li>The number of nodes of <code>listB</code> is in the <code>n</code>.</li>\n\t<li><code>1 &lt;= m, n &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= skipA &lt;= m</code></li>\n\t<li><code>0 &lt;= skipB &lt;= n</code></li>\n\t<li><code>intersectVal</code> is <code>0</code> if <code>listA</code> and <code>listB</code> do not intersect.</li>\n\t<li><code>intersectVal == listA[skipA] == listB[skipB]</code> if <code>listA</code> and <code>listB</code> intersect.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you write a solution that runs in <code>O(m + n)</code> time and use only <code>O(1)</code> memory?",
  "likes": 16065,
  "dislikes": 1463,
  "stats": {
    "totalAccepted": "2.1M",
    "totalSubmission": "3.4M",
    "totalAcceptedRaw": 2113116,
    "totalSubmissionRaw": 3411042,
    "acRate": "61.9%"
  },
  "topicTags": [
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "Linked List",
      "slug": "linked-list"
    },
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    }
  ],
  "metaData": {
    "name": "getIntersectionNode",
    "params": [
      {
        "name": "intersectVal",
        "type": "integer"
      },
      {
        "name": "listA",
        "type": "ListNode"
      },
      {
        "name": "listB",
        "type": "ListNode"
      },
      {
        "name": "skipA",
        "type": "integer"
      },
      {
        "name": "skipB",
        "type": "integer"
      }
    ],
    "return": {
      "type": "ListNode"
    },
    "languages": [
      "cpp",
      "java",
      "python",
      "c",
      "csharp",
      "javascript",
      "golang",
      "python3",
      "swift",
      "ruby",
      "kotlin",
      "scala",
      "php",
      "typescript"
    ],
    "manual": true
  },
  "discussion_posts": [
    {
      "name": "dingyuming102",
      "year": 2022,
      "content": "Romantic two pointers\\n\"If I wander to the end of the world and still cannot find you, I will take another path and search anew.\"\\n\"And I shall do the same, my love.\"",
      "voteCount": 549
    },
    {
      "name": "karan_8082",
      "year": 2022,
      "content": "**UPVOTE IF HELPFuuL**\\n\\n**O ( 1 ) SPACE SOLUTION**\\n\\nFirst using constant space check for last element of both lists.\\n**If tails of both lists are different then return NULL**\\n\\nNow we know that intersection length will be same for both lists. So we want to make length prior to the intersection also equal.\\nHead pointer of the longer list is moved to next till **length of both lists become equal**\\n\\n**NOW** we will have **intersetion point** at the same distance from head for both the lists.\\n\\nNow keep comparing heads till match found.\\n\\nNOW TRY TO IMPLEMENT YOURSELF :::: THINK THAT WILL BE EASY\\n\\n![image](https://assets.leetcode.com/users/images/36d4e97b-6a12-4ae2-a49e-54a92f97d652_1654486479.9570858.jpeg)\\n\\n",
      "voteCount": 440
    },
    {
      "name": "PruthviChippa",
      "year": 2023,
      "content": "it should be medium\\n",
      "voteCount": 167
    },
    {
      "name": "Ky_Andy",
      "year": 2019,
      "content": "The input of example 1 is:\\nInput: intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3\\nbut why it should return 8 instead of 1?\\nThese two lists intersected at 1 obviously.\\n\\nCould anyone help me with this?",
      "voteCount": 113
    },
    {
      "name": "tguo40",
      "year": 2019,
      "content": "I don\\'t see variables like skipA, skipB, intersectVal given as input ...",
      "voteCount": 106
    },
    {
      "name": "npsfsz",
      "year": 2022,
      "content": "So you know the code already from other answers, but you don\\'t know the reason why you want to move to headB after a == Null, and vice versa for b == Null.\\n\\nI got confused too, and spent some time thinking about it.\\n\\nThink in this way:\\n1. Suppose they have an intersection. Then the two lists will have the same nodes from the \"intersection\" to the end. \\n2. If we can align the tails of both lists, it\\'s pretty easy to find the intersection. You just go from the tail and trace back to the head.\\n3. Let\\'s say list A has A nodes and list B has B nodes, and A < B. If we can align their tails, aka move B - A steps in list B, then list A and list B will both have A nodes until the tail. We just need to do something like a = a.next and b = b.next until we find the intersection.\\n4. How to move B - A steps in list B? That\\'s the a = headB part in others\\' answers.",
      "voteCount": 37
    },
    {
      "name": "satish040",
      "year": 2020,
      "content": "This question is very confusing. If you check the solution they are providing, they ask you to check for reference/value.\\nAccording to value list A = [4,1,8,4,5], listB = [5,0,1,8,4,5] 1 is the point of intersection.\\nAlso the result varies on the values of skipA and skipB...",
      "voteCount": 27
    },
    {
      "name": "Samuri",
      "year": 2015,
      "content": "    Input:\\tIntersected at '1': {1}, {1}\\n    Output:\\tNo intersection\\n    Expected:\\tIntersected at '1'\\n\\nWhat does input look like? If there is only one element in each list, how come they will intersect?",
      "voteCount": 25
    },
    {
      "name": "vithikaagr",
      "year": 2020,
      "content": "In the first test case, the arrays have [4,1,8,4,5], [5,6,1,8,4,5] the intersection is at 1 since ,1,8,4,5 are common. Why does it intersect at 8?\\n",
      "voteCount": 16
    },
    {
      "name": "amitru",
      "year": 2019,
      "content": "In the given example 1 the list1 =[ 4,1,8,4,5] & list2: [5,0,1,8,4,5], the intersection point should be 1 , its showing as 8, let me know if I am wrong.",
      "voteCount": 15
    }
  ]
}
