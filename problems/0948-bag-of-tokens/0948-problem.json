{
  "category": "",
  "id": "948",
  "name": "Bag of Tokens",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/bag-of-tokens/",
  "slug": "bag-of-tokens",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Two Pointers",
    "Greedy",
    "Sorting"
  ],
  "similar_questions": [],
  "questionId": "985",
  "questionFrontendId": "948",
  "title": "Bag of Tokens",
  "titleSlug": "bag-of-tokens",
  "content": "<p>You start with an initial <strong>power</strong> of <code>power</code>, an initial <strong>score</strong> of <code>0</code>, and a bag of tokens given as an integer array <code>tokens</code>, where each&nbsp;<code>tokens[i]</code> denotes the value of token<em><sub>i</sub></em>.</p>\n\n<p>Your goal is to <strong>maximize</strong> the total <strong>score</strong> by strategically playing these tokens. In one move, you can play an <strong>unplayed</strong> token in one of the two ways (but not both for the same token):</p>\n\n<ul>\n\t<li><strong>Face-up</strong>: If your current power is <strong>at least</strong> <code>tokens[i]</code>, you may play token<em><sub>i</sub></em>, losing <code>tokens[i]</code> power and gaining <code>1</code> score.</li>\n\t<li><strong>Face-down</strong>: If your current score is <strong>at least</strong> <code>1</code>, you may play token<em><sub>i</sub></em>, gaining <code>tokens[i]</code> power and losing <code>1</code> score.</li>\n</ul>\n\n<p>Return <em>the <strong>maximum</strong> possible score you can achieve after playing <strong>any</strong> number of tokens</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\" style=\"\n    border-color: var(--border-tertiary);\n    border-left-width: 2px;\n    color: var(--text-secondary);\n    font-size: .875rem;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    overflow: visible;\n    padding-left: 1rem;\n\">\n<p><strong>Input:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">tokens = [100], power = 50</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">0</span></p>\n\n<p><strong>Explanation</strong><strong>:</strong> Since your score is <code>0</code> initially, you cannot play the token face-down. You also cannot play it face-up since your power (<code>50</code>) is less than <code>tokens[0]</code>&nbsp;(<code>100</code>).</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\" style=\"\n    border-color: var(--border-tertiary);\n    border-left-width: 2px;\n    color: var(--text-secondary);\n    font-size: .875rem;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    overflow: visible;\n    padding-left: 1rem;\n\">\n<p><strong>Input:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">tokens = [200,100], power = 150</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">1</span></p>\n\n<p><strong>Explanation:</strong> Play token<em><sub>1</sub></em> (<code>100</code>) face-up, reducing your power to&nbsp;<code>50</code> and increasing your score to&nbsp;<code>1</code>.</p>\n\n<p>There is no need to play token<em><sub>0</sub></em>, since you cannot play it face-up to add to your score. The maximum score achievable is <code>1</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\" style=\"\n    border-color: var(--border-tertiary);\n    border-left-width: 2px;\n    color: var(--text-secondary);\n    font-size: .875rem;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    overflow: visible;\n    padding-left: 1rem;\n\">\n<p><strong>Input:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">tokens = [100,200,300,400], power = 200</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\" style=\"\n    font-family: Menlo,sans-serif;\n    font-size: 0.85rem;\n\">2</span></p>\n\n<p><strong>Explanation:</strong> Play the tokens in this order to get a score of <code>2</code>:</p>\n\n<ol>\n\t<li>Play token<em><sub>0</sub></em> (<code>100</code>) face-up, reducing power to <code>100</code> and increasing score to <code>1</code>.</li>\n\t<li>Play token<em><sub>3</sub></em> (<code>400</code>) face-down, increasing power to <code>500</code> and reducing score to <code>0</code>.</li>\n\t<li>Play token<em><sub>1</sub></em> (<code>200</code>) face-up, reducing power to <code>300</code> and increasing score to <code>1</code>.</li>\n\t<li>Play token<em><sub>2</sub></em> (<code>300</code>) face-up, reducing power to <code>0</code> and increasing score to <code>2</code>.</li>\n</ol>\n\n<p><span style=\"color: var(--text-secondary); font-size: 0.875rem;\">The maximum score achievable is </span><code style=\"color: var(--text-secondary); font-size: 0.875rem;\">2</code><span style=\"color: var(--text-secondary); font-size: 0.875rem;\">.</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= tokens.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= tokens[i], power &lt; 10<sup>4</sup></code></li>\n</ul>\n",
  "likes": 3400,
  "dislikes": 544,
  "stats": {
    "totalAccepted": "253.6K",
    "totalSubmission": "427.8K",
    "totalAcceptedRaw": 253637,
    "totalSubmissionRaw": 427823,
    "acRate": "59.3%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    },
    {
      "name": "Greedy",
      "slug": "greedy"
    },
    {
      "name": "Sorting",
      "slug": "sorting"
    }
  ],
  "metaData": {
    "name": "bagOfTokensScore",
    "params": [
      {
        "name": "tokens",
        "type": "integer[]"
      },
      {
        "name": "power",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "ashevade",
      "year": 2020,
      "content": "Hello\\n Please do excuse me if this is a very basic question.\\n \\n Can someone tell me how to determine when to use the Greedy Approach ? When looking at this problem expcially words such as \"maximize\" / \"minimize\" , I was thinking Dynamic Programing or recursion.\\n Is there something in the problem statment, which suggests Greedy ? \\n \\n Thanks for any pointers.\\n \\n Regards\\n \\n",
      "voteCount": 72
    },
    {
      "name": "Trevor-akshay",
      "year": 2022,
      "content": "Tip : Game doesn\\u2019t allow negative points.",
      "voteCount": 54
    },
    {
      "name": "ttaylor27",
      "year": 2024,
      "content": "**Sorting + Greedy + Two Pointers**\n\"Buy\" as many points (score) as you can with the power you have (starting with the least expensive tokens).\n\nOnce you run out of power (unless there is only one token left, then you should exit the game), \"sell\" one point (score) in exchange for the token with the most power.\n\nRepeat this process. Be careful of `tokens = []` test case.",
      "voteCount": 53
    },
    {
      "name": "anwendeng",
      "year": 2024,
      "content": "__Greedy: Buy tokens with small values, Sell tokens with large values to increase power!__\\nHave a nice day.",
      "voteCount": 46
    },
    {
      "name": "oka96",
      "year": 2020,
      "content": "Input:\\n[71,55,82]\\n54\\n\\nSystem expected = 0\\nBut supposely is 1\\n\\nbecause \\nP = 54 + 82 = 136 (score= -1)\\nP = 136 - 71 = 65 (score=0)\\nP = 65 -55 = 10 (score=1)\\n\\nDo I understand the question correctly?",
      "voteCount": 36
    },
    {
      "name": "nhienle94",
      "year": 2024,
      "content": "They trapped you guys to be with DP for sure.\nThe point is If we want to play tokens optimally for example by take or not take, we are not able to have a state transition because we can play in any index we want.\nWe always gain 1 or lose 1 in each token, obviously we need to gain power from the right side to optimally have more power to gain more points by using power in the left side. So sorting with 2 pointers are really intuitive here, at least for me",
      "voteCount": 27
    },
    {
      "name": "psionl0",
      "year": 2024,
      "content": "The tokens can be used in ANY order so the usual DP approach won\\'t work. Try greedy.",
      "voteCount": 22
    },
    {
      "name": "mstuebs",
      "year": 2024,
      "content": "Happy `greedy` week. Edgecases? - Empty list, token with value \"0\", list with 1,000 entries, ...  **edit**: [Link to the code that generated the testcases](https://github.com/mquintus/l33tcode-testcase-generator/blob/main/source/Generator948.py)\n```\n[]\n0\n[0]\n0\n[0,1]\n1\n[2,3,4]\n3\n[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061]\n1\n[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061]\n1000\n[21,95,79,95,2,70,80,14,87,57,88,43,77,35,45,55,51,81,99,90,97,64,17,81,41,48,87,40,3,20,31,5,76,74,24,10,68,78,76,34,3,60,46,54,60,28,65,30,47,92,7,42,94,65,8,76,21,58,94,21,27,85,18,47,4,46,91,66,81,94,21,63,48,83,3,97,91,40,8,95,80,67,95,2,15,34,45,59,28,63,17,23,42,23,42,75,47,80,4,58,96,71,23,14,72,45,99,86,78,23,62,70,63,1,55,9,33,59,17,96,11,52,14,80,33,16,66,49,45,2,68,28,13,59,92,40,21,81,98,67,12,83,10,36,95,48,46,82,36,19,47,94,38,10,26,99,42,46,21,13,11,73,90,33,68,23,83,44,48,68,32,53,24,40,99,19,25,95,9,7,31,3,19,66,8,99,43,62,59,37,28,47,15,21,94,8,34,57,49,61,93,64,78,37,58,95,48,18,41,78,75,54,81,57,49,60,18,49,72,49,67,49,7,77,53,23,81,62,76,54,14,58,18,19,99,25,29,2,57,44,95,86,73,12,83,56,78,82,80,13,65,88,64,85,74,16,3,94,58,4,42,71,1,30,68,1,54,6,42,42,25,67,36,70,32,91,18,3,73,66,15,24,88,77,68,47,63,91,44,16,85,76,73,92,24,1,53,92,4,41,38,14,9,83,46,52,22,43,65,21,95,93,64,96,63,86,43,4,92,45,62,10,70,5,4,11,4,53,29,24,42,46,53,31,46,11,1,8,34,29,53,65,47,28,63,41,34,14,61,52,28,83,7,7,19,53,57,99,31,60,26,42,48,86,1,76,49,60,37,48,40,79,23,6,85,97,59,39,86,24,22,5,74,66,78,7,82,34,95,96,30,20,98,81,20,7,4,86,24,26,14,10,10,2,78,50,75,14,6,82,69,85,59,12,93,66,33,9,99,78,41,94,55,71,34,17,74,52,15,60,48,81,2,89,41,7,85,3,38,44,27,62,18,88,41,96,68,44,55,61,2,35,81,70,39,31,41,6,4,75,65,41,21,70,19,98,30,88,8,18,13,10,9,98,45,92,65,37,28,92,64,15,45,75,41,48,64,69,85,73,18,26,49,71,24,77,73,46,11,10,18,42,59,73,64,98,83,38,73,71,1,59,71,29,65,41,65,76,23,79,71,13,71,4,63,53,60,6,78,88,7,68,72,7,86,13,53,61,11,42,50,13,63,57,52,13,57,29,95,45,79,58,43,47,55,84,66,29,73,49,69,17,74,11,10,87,22,93,70,58,80,1,57,66,83,59,16,59,16,10,61,66,81,16,76,3,25,66,92,84,92,8,43,56,57,91,62,2,8,97,1,42,97,78,54,54,64,16,24,85,7,7,15,4,12,19,10,65,28,63,86,97,7,54,44,66,36,58,17,60,77,38,29,57,40,44,24,69,34,68,47,93,86,76,92,23,70,39,14,38,29,72,7,88,21,1,86,71,52,66,37,6,31,45,64,5,61,20,91,37,94,32,64,69,35,46,33,15,25,45,29,54,51,3,86,34,56,57,86,82,74,22,66,89,92,79,96,8,68,87,20,57,31,88,52,56,4,16,80,92,62,30,98,75,11,79,67,43,57,81,63,59,3,15,55,70,75,85,7,8,67,12,7,48,41,17,90,83,79,8,61,26,63,68,16,25,72,84,83,42,51,92,71,89,40,8,23,8,57,11,60,14,74,7,18,90,82,4,23,5,41,26,25,90,69,67,90,9,54,37,8,22,67,58,52,92,96,55,68,15,48,68,55,73,77,14,87,54,57,72,53,51,54,20,61,34,23,7,80,54,31,31,72,43,85,90,10,11,6,46,35,37,85,5,67,58,24,28,93,41,28,8,21,80,11,95,46,35,31,57,31,16,27,92,43,25,53,85,32,30,40,30,82,44,30,95,67,80,77,71,28,95,97,32,19,53,20,97,98,25,16,73,35,82,27,90,89,29,60,66,7,11,20,37,58,85,34,53,59,34,22,42,72,3,16,79,31,43,42,88,82,31,29,75,93,29,91,86,93,27,78,56,6,36,65,78,22,35,18,68,44,9,91,63,3,36,64,65,30,2,41,22,54,89,77,65,65,88,25,56,19,11,37,75,71,18,28,60,91,96,16,69,54,17,49,9,94,2,17,53,12,36,65,17,80,80,44,70,3,45,71,73,7,78,54,78,81,49,62,12,54,40,99,78,92,6,21,86,14,1,59,2,78,89,26,28,81,81,41,68]\n1\n[41,17,15,80,89,33,57,9,89,99,41,1,95,94,26,19,26,45,25,95,4,53,8,50,43,98,86,40,22,57,7,55,6,63,25,81,10,50,42,99,32,88,19,57,47,94,8,44,97,31,64,54,89,32,16,28,37,65,54,32,69,40,71,22,11,89,18,38,96,94,72,36,65,18,58,82,41,99,80,65,93,67,93,27,86,92,85,34,59,26,47,58,56,53,15,40,75,37,90,37,34,40,48,65,44,17,86,70,42,26,1,66,8,86,25,19,26,96,75,21,74,76,38,40,43,54,71,48,97,70,89,80,48,90,62,13,94,90,28,94,22,40,9,5,60,83,7,99,68,84,97,62,16,52,34,29,28,71,79,96,96,40,93,14,59,42,9,88,44,12,5,57,65,47,3,67,35,64,4,42,78,32,58,78,50,62,41,44,92,42,96,35,72,82,53,87,50,91,91,56,43,4,52,25,54,10,50,98,16,11,16,90,10,86,69,6,55,22,87,72,66,68,10,91,13,92,23,19,41,43,2,52,8,95,81,27,50,31,47,81,39,41,3,43,82,43,6,56,32,39,19,69,73,23,63,88,22,71,35,36,24,81,86,96,99,15,44,73,51,13,91,14,55,93,8,89,72,88,46,32,57,20,71,63,23,48,26,42,5,1,36,35,52,1,33,87,42,57,87,5,54,32,18,77,43,71,36,54,26,1,76,76,26,98,74,51,33,15,46,37,65,6,95,89,92,42,28,28,46,50,94,18,63,20,27,3,13,8,8,74,79,38,51,12,64,45,88,66,97,3,94,58,56,48,24,24,7,98,42,47,46,54,89,88,10,43,4,47,12,71,69,39,95,89,95,53,76,81,71,95,75,68,7,21,20,58,58,72,41,36,85,50,32,94,56,1,26,51,78,9,48,75,43,8,23,72,86,88,22,66,23,59,16,91,8,90,87,41,65,47,32,91,67,47,72,4,51,46,83,58,65,41,62,86,2,79,64,72,81,31,95,6,88,45,74,85,52,22,65,97,53,98,10,43,94,17,46,94,71,87,26,75,53,79,39,36,24,44,50,94,6,49,16,12,50,77,92,80,54,83,96,97,30,36,3,56,10,61,12,66,76,80,59,11,31,45,24,92,52,35,89,27,89,1,37,70,75,13,59,86,62,66,75,56,14,14,12,82,85,55,18,69,51,80,75,90,76,73,19,50,50,26,50,62,43,26,93,74,67,79,82,68,68,9,54,55,11,80,68,64,99,75,49,14,56,37,5,14,70,77,38,91,70,29,32,97,35,48,38,31,99,90,8,77,2,91,37,2,13,92,48,75,75,40,26,86,60,96,5,21,81,11,96,98,7,48,55,74,57,83,7,71,60,11,8,15,92,9,53,43,21,69,70,49,83,53,69,50,27,94,33,45,78,15,29,57,77,50,47,47,69,65,42,62,41,56,49,82,42,1,86,80,29,64,26,91,97,13,79,22,2,91,27,47,38,24,25,54,10,67,38,86,44,88,7,6,17,19,16,53,24,2,78,26,75,34,3,55,5,53,88,63,25,45,63,63,65,38,29,48,74,72,74,28,89,35,41,67,40,29,49,19,80,97,2,82,51,11,93,26,65,74,48,1,77,40,96,20,11,22,94,8,80,62,99,7,66,80,52,86,74,30,46,59,42,15,68,28,42,3,19,18,39,82,37,61,58,14,49,50,33,63,38,25,77,26,22,16,23,1,40,30,98,10,61,18,27,48,51,91,90,97,13,41,69,51,90,54,35,92,30,59,19,63,29,52,87,4,67,82,30,99,99,97,52,7,22,13,31,80,25,89,89,29,25,87,10,85,60,89,83,13,15,72,38,1,67,10,46,70,3,17,85,70,18,57,36,42,47,53,43,18,6,31,26,10,13,44,87,71,69,4,18,47,29,6,38,44,17,50,48,39,2,65,69,43,29,77,82,42,80,65,46,13,19,64,1,71,3,81,61,13,19,3,70,31,42,65,84,5,45,70,96,50,43,36,25,22,77,10,98,58,60,84,40,34,54,46,94,48,10,27,44,23,53,16,66,62,50,11,4,4,18,6,96,23,98,91,20,82,65,75,96,1,49,99,24,70,7,90,20,61,17,10,58,19,59,23,36,10,88,31,59,54,95,88,74,28,64,82,73,2,2,76,23,78,73,89,65,61,49,66,93,76,30,31,85,21,51,12,73,49,74,42,22,61,8,68,50,50,45,99,33,92,41,48,92,50,57,71,63,57,72,64,88,30,15,45,56,95]\n1000\n```\n",
      "voteCount": 18
    },
    {
      "name": "harshpbajaj",
      "year": 2023,
      "content": "asked in Flexport too",
      "voteCount": 18
    },
    {
      "name": "tashatsar",
      "year": 2024,
      "content": "Some useful testcases: \\n`[71,55,82]\\n54, \\n[100,1,1,1]\\n5, \\n[2,3,4]\\n1`",
      "voteCount": 16
    }
  ]
}
