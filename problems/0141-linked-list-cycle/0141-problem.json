{
  "category": "",
  "id": "141",
  "name": "Linked List Cycle",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/linked-list-cycle/",
  "slug": "linked-list-cycle",
  "isPaidOnly": false,
  "tags": [
    "Hash Table",
    "Linked List",
    "Two Pointers"
  ],
  "similar_questions": [
    {
      "title": "Linked List Cycle II",
      "difficulty": "Medium",
      "slug": "linked-list-cycle-ii"
    },
    {
      "title": "Happy Number",
      "difficulty": "Easy",
      "slug": "happy-number"
    }
  ],
  "questionId": "141",
  "questionFrontendId": "141",
  "title": "Linked List Cycle",
  "titleSlug": "linked-list-cycle",
  "content": "<p>Given <code>head</code>, the head of a linked list, determine if the linked list has a cycle in it.</p>\n\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the&nbsp;<code>next</code>&nbsp;pointer. Internally, <code>pos</code>&nbsp;is used to denote the index of the node that&nbsp;tail&#39;s&nbsp;<code>next</code>&nbsp;pointer is connected to.&nbsp;<strong>Note that&nbsp;<code>pos</code>&nbsp;is not passed as a parameter</strong>.</p>\n\n<p>Return&nbsp;<code>true</code><em> if there is a cycle in the linked list</em>. Otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\" style=\"width: 300px; height: 97px; margin-top: 8px; margin-bottom: 8px;\" />\n<pre>\n<strong>Input:</strong> head = [3,2,0,-4], pos = 1\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png\" style=\"width: 141px; height: 74px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2], pos = 0\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There is a cycle in the linked list, where the tail connects to the 0th node.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png\" style=\"width: 45px; height: 45px;\" />\n<pre>\n<strong>Input:</strong> head = [1], pos = -1\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no cycle in the linked list.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li><code>pos</code> is <code>-1</code> or a <strong>valid index</strong> in the linked-list.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Can you solve it using <code>O(1)</code> (i.e. constant) memory?</p>\n",
  "likes": 16876,
  "dislikes": 1530,
  "stats": {
    "totalAccepted": "4.3M",
    "totalSubmission": "8M",
    "totalAcceptedRaw": 4250324,
    "totalSubmissionRaw": 8005290,
    "acRate": "53.1%"
  },
  "topicTags": [
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "Linked List",
      "slug": "linked-list"
    },
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    }
  ],
  "metaData": {
    "name": "hasCycle",
    "params": [
      {
        "name": "head",
        "type": "ListNode"
      },
      {
        "name": "pos",
        "type": "integer"
      }
    ],
    "return": {
      "type": "boolean"
    },
    "manual": true,
    "languages": [
      "cpp",
      "java",
      "python",
      "c",
      "csharp",
      "javascript",
      "ruby",
      "swift",
      "golang",
      "python3",
      "scala",
      "kotlin",
      "php",
      "typescript"
    ]
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": false,
        "name": "Google",
        "slug": "google",
        "timesEncountered": 14
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "HT_Wang",
      "year": 2019,
      "content": "I don\\'t see why we need \\'pos\\' in the inputs, while we don\\'t see it in the code. It\\'s kind confusing.",
      "voteCount": 1098
    },
    {
      "name": "4ndr01d",
      "year": 2023,
      "content": "terrible description\\n",
      "voteCount": 959
    },
    {
      "name": "AymenSekhri",
      "year": 2020,
      "content": "I\\'m confused why `pos` is a input and not in argument list ?",
      "voteCount": 266
    },
    {
      "name": "AlgoEngine",
      "year": 2023,
      "content": "Visualization of the Tortoise and Hare algorithm\\n\\nhttps://youtu.be/RRSItF-Ts4Q",
      "voteCount": 184
    },
    {
      "name": "justdvl",
      "year": 2021,
      "content": "Can someone please explain this task? Not solution, I don\\'t understand the task itself.",
      "voteCount": 149
    },
    {
      "name": "jasonbayk",
      "year": 2019,
      "content": "The \"pos\" should not be a part of the input, in fact it is not known a priori. Should be removed for better clarity.",
      "voteCount": 132
    },
    {
      "name": "Darth-InVader15",
      "year": 2023,
      "content": "This is the first question I solved on Leetcode, 2 years back. I guess my life\\'s also a cycle :)",
      "voteCount": 112
    },
    {
      "name": "captainpromoted",
      "year": 2021,
      "content": "We can prove it using relative velocity kind of thing.\\n\\nIf there is a cycle then there will be a time when walker will enter the cycle for the first time.\\n\\nAt that moment runner will already be present in the cycle(because he was fast and ahead).\\n\\nNow if the runner is also on the same node as walker problem solved.\\n\\nOtherwise If both fast and slow are on different nodes on cycle then relative velocity of runner with respect to walker is one node per iteration (because walker moves one step then runner moves two step therefore relative velocity is 2 - 1 = 1 it can we viewed as runner is closing in on walker). So that means runner will surely catch the walker.",
      "voteCount": 103
    },
    {
      "name": "Cyclic8222",
      "year": 2023,
      "content": "This is a knowledge based question. \\n\\nIf you\\'ve never heard of `Floyd\\u2019s cycle-finding algorithm` or the `fast-slow method`, you\\'re unlikely to figure it out yourself in 20 mins. ",
      "voteCount": 92
    },
    {
      "name": "anon301176",
      "year": 2023,
      "content": "my solution is failing under this test case: [-21,10,17,8,4,26,5,35,33,-7,-16,27,-12,6,29,-12,5,9,20,14,14,2,13,-24,21,23,-21,5] very clearly there is a loop in this data, but its telling me i should be returning false. can someone explain this?",
      "voteCount": 44
    }
  ]
}
