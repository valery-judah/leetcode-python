{
  "category": "",
  "id": "107",
  "name": "Binary Tree Level Order Traversal II",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/",
  "slug": "binary-tree-level-order-traversal-ii",
  "isPaidOnly": false,
  "tags": [
    "Tree",
    "Breadth-First Search",
    "Binary Tree"
  ],
  "similar_questions": [
    {
      "title": "Binary Tree Level Order Traversal",
      "difficulty": "Medium",
      "slug": "binary-tree-level-order-traversal"
    },
    {
      "title": "Average of Levels in Binary Tree",
      "difficulty": "Easy",
      "slug": "average-of-levels-in-binary-tree"
    }
  ],
  "questionId": "107",
  "questionFrontendId": "107",
  "title": "Binary Tree Level Order Traversal II",
  "titleSlug": "binary-tree-level-order-traversal-ii",
  "content": "<p>Given the <code>root</code> of a binary tree, return <em>the bottom-up level order traversal of its nodes&#39; values</em>. (i.e., from left to right, level by level from leaf to root).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [[15,7],[9,20],[3]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
  "likes": 5062,
  "dislikes": 329,
  "stats": {
    "totalAccepted": "764.5K",
    "totalSubmission": "1.1M",
    "totalAcceptedRaw": 764508,
    "totalSubmissionRaw": 1147591,
    "acRate": "66.6%"
  },
  "topicTags": [
    {
      "name": "Tree",
      "slug": "tree"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Binary Tree",
      "slug": "binary-tree"
    }
  ],
  "metaData": {
    "name": "levelOrderBottom",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "list<list<integer>>",
      "dealloc": true
    }
  },
  "discussion_posts": [
    {
      "name": "Orewa_Abhi",
      "year": 2024,
      "content": "Started Trees week, Guys wish me luck.... ",
      "voteCount": 55
    },
    {
      "name": "zeeqy",
      "year": 2020,
      "content": "There is a 102. Binary Tree Level Order Traversal problem. Adding a [::-1] would solve this one. I would say these two are the same problems.",
      "voteCount": 45
    },
    {
      "name": "aftab0711",
      "year": 2023,
      "content": "same as leetcode 102\\njust reverse the answer of 102 .",
      "voteCount": 30
    },
    {
      "name": "GarVerma",
      "year": 2025,
      "content": "I cannot find anyone who isnt reversing the normal level order traversal , if the purpose of the question is just to solve it the same way as another question why does it even exists . It obv exists so that we do it in the way the questions says it should be done , avoiding the purpose of the question only inceases the number of questions solve and does not help us in the least .",
      "voteCount": 12
    },
    {
      "name": "Djbdjbdjb123",
      "year": 2018,
      "content": "Curious to know why this one is listed as \"easy\" while this one is med?\nhttps://leetcode.com/problems/binary-tree-level-order-traversal/description/\n",
      "voteCount": 10
    },
    {
      "name": "rathore__utkarsh",
      "year": 2024,
      "content": "just apply the level order traversal and swap the answer.",
      "voteCount": 5
    },
    {
      "name": "Shubhangigr8",
      "year": 2023,
      "content": "just normal breadth first search /level order traversal with collections.reverse(result) thing.   similar like #[102](102) leetcode problem ",
      "voteCount": 4
    },
    {
      "name": "ParthSarthi33",
      "year": 2024,
      "content": "Just reverse the Final Ans Vector using built in reverse() function....xD",
      "voteCount": 3
    },
    {
      "name": "ilnarag",
      "year": 2020,
      "content": "It\\'s obvious that this problem could be easily solved using `LinkedList<T>`. \\nThe problem is in C# `LinkedList<T>` does not implement `IList<T>`, which means you have to create `List<T>` anyway.\\nI think it should be possible for C# solutions to return `ICollection<T>` or `IEnumerable<T>`.",
      "voteCount": 3
    },
    {
      "name": "Adi-07",
      "year": 2023,
      "content": "Will a collections.reverse() yield better space complexity than using a stack? ",
      "voteCount": 2
    }
  ]
}
