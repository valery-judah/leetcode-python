{
  "category": "",
  "id": "33",
  "name": "Search in Rotated Sorted Array",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/search-in-rotated-sorted-array/",
  "slug": "search-in-rotated-sorted-array",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Binary Search"
  ],
  "similar_questions": [
    {
      "title": "Search in Rotated Sorted Array II",
      "difficulty": "Medium",
      "slug": "search-in-rotated-sorted-array-ii"
    },
    {
      "title": "Find Minimum in Rotated Sorted Array",
      "difficulty": "Medium",
      "slug": "find-minimum-in-rotated-sorted-array"
    },
    {
      "title": "Pour Water Between Buckets to Make Water Levels Equal",
      "difficulty": "Medium",
      "slug": "pour-water-between-buckets-to-make-water-levels-equal"
    }
  ],
  "questionId": "33",
  "questionFrontendId": "33",
  "title": "Search in Rotated Sorted Array",
  "titleSlug": "search-in-rotated-sorted-array",
  "content": "<p>There is an integer array <code>nums</code> sorted in ascending order (with <strong>distinct</strong> values).</p>\n\n<p>Prior to being passed to your function, <code>nums</code> is <strong>possibly left rotated</strong> at an unknown index <code>k</code> (<code>1 &lt;= k &lt; nums.length</code>) such that the resulting array is <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code> (<strong>0-indexed</strong>). For example, <code>[0,1,2,4,5,6,7]</code> might be left rotated by&nbsp;<code>3</code>&nbsp;indices and become <code>[4,5,6,7,0,1,2]</code>.</p>\n\n<p>Given the array <code>nums</code> <strong>after</strong> the possible rotation and an integer <code>target</code>, return <em>the index of </em><code>target</code><em> if it is in </em><code>nums</code><em>, or </em><code>-1</code><em> if it is not in </em><code>nums</code>.</p>\n\n<p>You must write an algorithm with <code>O(log n)</code> runtime complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 0\n<strong>Output:</strong> 4\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 3\n<strong>Output:</strong> -1\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1], target = 0\n<strong>Output:</strong> -1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li>All values of <code>nums</code> are <strong>unique</strong>.</li>\n\t<li><code>nums</code> is an ascending array that is possibly rotated.</li>\n\t<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
  "likes": 28725,
  "dislikes": 1735,
  "stats": {
    "totalAccepted": "3.9M",
    "totalSubmission": "8.9M",
    "totalAcceptedRaw": 3854791,
    "totalSubmissionRaw": 8897505,
    "acRate": "43.3%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Binary Search",
      "slug": "binary-search"
    }
  ],
  "metaData": {
    "name": "search",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      },
      {
        "name": "target",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": false,
        "name": "Amazon",
        "slug": "amazon",
        "timesEncountered": 21
      },
      {
        "taggedByAdmin": false,
        "name": "Google",
        "slug": "google",
        "timesEncountered": 18
      },
      {
        "taggedByAdmin": true,
        "name": "Meta",
        "slug": "facebook",
        "timesEncountered": 13
      },
      {
        "taggedByAdmin": true,
        "name": "Microsoft",
        "slug": "microsoft",
        "timesEncountered": 11
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "grovre",
      "year": 2023,
      "content": "Leetcode, the bringer of problems that don\\'t exist",
      "voteCount": 635
    },
    {
      "name": "ss9394",
      "year": 2020,
      "content": "The problem is intented for Binary search. \\nBut if some is simply travering once  i.e  O(n) , It beats 100% . Which should not be the case. \\n\\nIt should only succeed for binary search based solution. i.e. O(log n)\\n\\n",
      "voteCount": 325
    },
    {
      "name": "mandy1339",
      "year": 2022,
      "content": "First do a binary search to find the pivot:\\n\\n- Step 1\\n\\t-  compare mid pointer to right most value on the array. If value in mid pointer is greater than right most value in array, we know the pivot is to the right of the mid pointer. If value at mid pointer is smaller than right most value in the array, we know that the pivot is to the left. Split array in half until your left and right pointers touch.\\n- Step 2\\n\\t- Do a 2nd binary search on the whole array. This time we are looking for the target, not a pivot. Now that we know our pivot we just need to modify our midvalue like so: realMid = (mid + pivot) % nums.Length;\\n\\nComplexity of 2 binary searches is O ( 2 Log (n)) which is O (Log(n))",
      "voteCount": 268
    },
    {
      "name": "swarnabh_kashyap1",
      "year": 2024,
      "content": "Anyone else struggled with this question? :/",
      "voteCount": 209
    },
    {
      "name": "Balerii",
      "year": 2023,
      "content": "such an annoing question ",
      "voteCount": 179
    },
    {
      "name": "AvishekzZ",
      "year": 2023,
      "content": "The steps are as follows:\\n\\n1. Place the 2 pointers i.e. low and high: Initially, we will place the pointers like this: low will point to the first index, and high will point to the last index.\\n2. Calculate the \\u2018mid\\u2019: Now, inside a loop, we will calculate the value of \\u2018mid\\u2019 using the following formula:\\nmid = (low+high) // 2 ( \\u2018//\\u2019 refers to integer division)\\n3. Check if arr[mid] == target: If it is, return the index mid.\\n4. Identify the sorted half, check where the target is located, and then eliminate one half accordingly:\\n                   1. if arr[low] <= arr[mid]: This condition ensures that the left part is sorted.\\n                       a. If arr[low] <= target && target <= arr[mid]: It signifies that the target is in this sorted half. So, we will eliminate the right half (high = mid-1).\\n                       b. Otherwise, the target does not exist in the sorted half. So, we will eliminate this left half by doing low = mid+1.\\n                   2. Otherwise, if the right half is sorted:\\n                       a. If arr[mid] <= target && target <= arr[high]: It signifies that the target is in this sorted right half. So, we will eliminate the left half (low = mid+1).\\n                       b. Otherwise, the target does not exist in this sorted half. So, we will eliminate this right half by doing high = mid-1.\\n5. Once, the \\u2018mid\\u2019 points to the target, the index will be returned.\\n6. This process will be inside a loop and the loop will continue until low crosses high. If no index is found, we will return -1.",
      "voteCount": 157
    },
    {
      "name": "hafezachu",
      "year": 2023,
      "content": "The main idea is to use binary search to find the target in the array. Binary search is a technique that divides the search space into two halves and compares the target with the middle element. If the target is equal to the middle element, we have found the index. If the target is smaller than the middle element, we search in the left half. If the target is larger than the middle element, we search in the right half. This way, we can reduce the search space by half in each iteration and achieve O(log n) runtime complexity.\\n\\nHowever, since the array is possibly rotated at some unknown pivot, we cannot directly apply binary search. We need to modify it slightly to handle the rotation. The key observation is that one of the two halves must be sorted, and the other half must contain the pivot. For example, if the array is [4,5,6,7,0,1,2], then the left half [4,5,6,7] is sorted and the right half [0,1,2] contains the pivot. If the array is [7,0,1,2,4,5,6], then the right half [2,4,5,6] is sorted and the left half [7,0,1] contains the pivot.\\n\\nSo, in each iteration of binary search, we first check which half is sorted by comparing the left and middle elements. Then we check if the target is in that sorted half by comparing it with the left and middle elements. If it is in that sorted half, we search in that half as usual. If it is not in that sorted half, we search in the other half that contains the pivot.\\n\\nFor example, if the array is [4,5,6,7,0,1,2] and the target is 0:\\n\\n- We start with left = 0 and right = 6. The middle index is 3 and the middle element is 7.\\n- We see that the left half [4,5,6,7] is sorted and the right half [0,1,2] contains the pivot.\\n- We check if the target 0 is in the left half by comparing it with 4 and 7. It is not in that half because 0 < 4 < 7.\\n- So we search in the right half that contains the pivot by setting left = mid + 1 = 4.\\n- We repeat this process until we find the target or exhaust the search space.",
      "voteCount": 131
    },
    {
      "name": "charly371",
      "year": 2017,
      "content": "I get an error with the following test case: ([1,3], 1) which should output 0 since the integer 1 is present at index 0. \\nMy solution did not work for this one because I based it on the fact that the array will get rotate somewhere. \\n\\nI m thus wondering if you think this test case is valid ? or maybe the exercise should be change to say that the array may be rotated (but not necessarily is...) ?\\n\\nI will change my algo but i would like your feedback in case it was a real interview. what would you say ?\\nThx",
      "voteCount": 82
    },
    {
      "name": "Pr0ximo",
      "year": 2024,
      "content": "Bro fuck this question, there is no way I am solving this in an interview... Why is this medium?",
      "voteCount": 65
    },
    {
      "name": "eugk123",
      "year": 2021,
      "content": "Why is there a [1,3,5] test case?\\n\\nIt\\'s not that big of a deal, but the problem states it guarantee\\'s pivot in all test cases. Leetcode team, please either remove that statement or fix your test case.",
      "voteCount": 63
    }
  ]
}
