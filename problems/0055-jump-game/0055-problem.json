{
  "category": "",
  "id": "55",
  "name": "Jump Game",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/jump-game/",
  "slug": "jump-game",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Dynamic Programming",
    "Greedy"
  ],
  "similar_questions": [
    {
      "title": "Jump Game II",
      "difficulty": "Medium",
      "slug": "jump-game-ii"
    },
    {
      "title": "Jump Game III",
      "difficulty": "Medium",
      "slug": "jump-game-iii"
    },
    {
      "title": "Jump Game VII",
      "difficulty": "Medium",
      "slug": "jump-game-vii"
    },
    {
      "title": "Jump Game VIII",
      "difficulty": "Medium",
      "slug": "jump-game-viii"
    },
    {
      "title": "Minimum Number of Visited Cells in a Grid",
      "difficulty": "Hard",
      "slug": "minimum-number-of-visited-cells-in-a-grid"
    },
    {
      "title": "Largest Element in an Array after Merge Operations",
      "difficulty": "Medium",
      "slug": "largest-element-in-an-array-after-merge-operations"
    }
  ],
  "questionId": "55",
  "questionFrontendId": "55",
  "title": "Jump Game",
  "titleSlug": "jump-game",
  "content": "<p>You are given an integer array <code>nums</code>. You are initially positioned at the array&#39;s <strong>first index</strong>, and each element in the array represents your maximum jump length at that position.</p>\n\n<p>Return <code>true</code><em> if you can reach the last index, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1,0,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
  "likes": 21008,
  "dislikes": 1426,
  "stats": {
    "totalAccepted": "2.8M",
    "totalSubmission": "7M",
    "totalAcceptedRaw": 2801964,
    "totalSubmissionRaw": 7028248,
    "acRate": "39.9%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    },
    {
      "name": "Greedy",
      "slug": "greedy"
    }
  ],
  "metaData": {
    "name": "canJump",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "boolean"
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": false,
        "name": "Amazon",
        "slug": "amazon",
        "timesEncountered": 29
      },
      {
        "taggedByAdmin": false,
        "name": "Google",
        "slug": "google",
        "timesEncountered": 13
      },
      {
        "taggedByAdmin": false,
        "name": "Bloomberg",
        "slug": "bloomberg",
        "timesEncountered": 12
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "code4Y",
      "year": 2022,
      "content": "### For those who think this problem is inadequately described/explained:\\n\\nThe question states \"each element in the array represents your maximum jump length at that position.\"\\nIt means if we are at a position k and nums[k] = 4, then it means we can jump forward a maximum of 4 steps from this position. It\\'s our choice to jump 1,2,3 or 4 positions, but not more than 4.\\n\\nFor example \\nIn this test case [2,3,1,4]\\nnums[0] = 2\\nIt means we can jump either 1 or 2 steps\\n\\nAt the end, if we reached the last index or greater than that we win! \\n\\nThanks for reading, Hope this helps :)",
      "voteCount": 1681
    },
    {
      "name": "PHOENIX2000",
      "year": 2022,
      "content": "![image](https://assets.leetcode.com/users/images/e1f7e651-fd74-42dc-99d4-67e2bde67a60_1657006580.3025556.png)\\n\\n## **Some time leetcode behave like. **\\n![image](https://assets.leetcode.com/users/images/f7c4b451-9fe9-4fa5-8ba3-7914425c28f8_1657006659.5123389.png)\\n",
      "voteCount": 729
    },
    {
      "name": "yasir991925",
      "year": 2021,
      "content": "![image](https://assets.leetcode.com/users/images/80885571-14fa-4d24-8cdf-6251a3c5ba2c_1633253352.4520595.png)\\n![image](https://assets.leetcode.com/users/images/8a5d797b-2677-427c-a0e1-6eb5e5e31164_1633253365.9339151.png)\\n![image](https://assets.leetcode.com/users/images/48e302a2-5543-48c6-8b25-a56e08a94669_1633253376.628537.png)\\n",
      "voteCount": 650
    },
    {
      "name": "801121",
      "year": 2024,
      "content": "To jump, or to jump off a building. That is the question. ",
      "voteCount": 633
    },
    {
      "name": "xeniawann",
      "year": 2022,
      "content": "For people looking for hints:\nThere are two ways to do this: 1. DP, 2. Greedy\nIf using DP: starting from back to front is more intuitive, dp[i] means if you can reach the last index from current i. Initialize dp[n-1] to True and all else to False. Then go from i = n-2 to 0, updating dp[i]. Return dp[0].\nIf using Greedy: use a variable to hold the furthest point we can reach so far, ie. furthest = max(furthest, i+nums[i]). Then think of a way to use it for judging if we can get to the end.",
      "voteCount": 228
    },
    {
      "name": "prvz786123",
      "year": 2016,
      "content": "Can anyone please explain how [2,5,0,0]  test case return true?\\nindex [0] has value 2 and if we jump 2 time from 0 index it will be value of 1st 0 and after that we cant jump further so if I am not wrong it should return false?\\n\\nPlease help me with this test case.\\nyour answer will be appreciated.\\n\\nThanks in advance.",
      "voteCount": 137
    },
    {
      "name": "anubhavanand",
      "year": 2023,
      "content": "keep jumping guys!",
      "voteCount": 135
    },
    {
      "name": "benjie",
      "year": 2018,
      "content": "I don\\'t think this problem is adequately described/explained.\\n\\nIt appears from the current description that you can only move from one square to another if the square you are currently on has a jump length that gets you to the next.\\n\\nBut in the first example, there is a jump made from square 0 to square 1 even though the value in square 0 is 3.\\n\\nDoes this mean you can always just jump 1 if you want? Clearly this is not true as then every example would be true.\\n\\nDoes this mean you can start wherever you want?",
      "voteCount": 76
    },
    {
      "name": "rwakos",
      "year": 2019,
      "content": "Just started to see the answers here, and they don\\'t match the description, for example, in the test cases {2,0,0} is true, so this means, you start in position 0 + 2, you reached position len(numbers) -1, AKA the last index, but then, you have {2,5,0,0} which is also true (in the test cases), so based on the previous example, you should arrive to 0 after the first 2, and then you need another step to reach the last index, which in my case is false (because the number is 0)... So this problem needs a beter explanation...",
      "voteCount": 39
    },
    {
      "name": "rkulkar1",
      "year": 2017,
      "content": "Do you mean that the first index according to the common nomenclature or first index meaning 0th index according to array nomenclature?",
      "voteCount": 38
    }
  ]
}
