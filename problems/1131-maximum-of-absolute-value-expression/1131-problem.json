{
  "category": "",
  "id": "1131",
  "name": "Maximum of Absolute Value Expression",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/maximum-of-absolute-value-expression/",
  "slug": "maximum-of-absolute-value-expression",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Math"
  ],
  "similar_questions": [],
  "questionId": "1230",
  "questionFrontendId": "1131",
  "title": "Maximum of Absolute Value Expression",
  "titleSlug": "maximum-of-absolute-value-expression",
  "content": "<p>Given two arrays of integers with equal lengths, return the maximum value of:</p>\r\n\r\n<p><code>|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|</code></p>\r\n\r\n<p>where the maximum is taken over all <code>0 &lt;= i, j &lt; arr1.length</code>.</p>\r\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [1,2,3,4], arr2 = [-1,4,5,6]\n<strong>Output:</strong> 13\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [1,-2,-5,0,10], arr2 = [0,-2,-1,-7,-4]\n<strong>Output:</strong> 20\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= arr1.length == arr2.length &lt;= 40000</code></li>\n\t<li><code>-10^6 &lt;= arr1[i], arr2[i] &lt;= 10^6</code></li>\n</ul>\n",
  "likes": 671,
  "dislikes": 416,
  "stats": {
    "totalAccepted": "28.8K",
    "totalSubmission": "59.4K",
    "totalAcceptedRaw": 28763,
    "totalSubmissionRaw": 59436,
    "acRate": "48.4%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Math",
      "slug": "math"
    }
  ],
  "metaData": {
    "name": "maxAbsValExpr",
    "params": [
      {
        "name": "arr1",
        "type": "integer[]"
      },
      {
        "type": "integer[]",
        "name": "arr2"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "lddlinan",
      "year": 2019,
      "content": "First, remove the non-linear factor:\\nmax(|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|) = max{\\n arr1[i] - arr1[j] + arr2[i] - arr2[j] + i - j,\\n arr1[i] - arr1[j] + arr2[j] - arr2[i] + i - j,\\n arr1[j] - arr1[i] + arr2[i] - arr2[j] + i - j,\\n arr1[j] - arr1[i] + arr2[j] - arr2[i] + i - j,\\n}\\n(Only figure out this part during the contest, and submit a O(nlogn) divide-conquer solution)\\nThen analysis each linear function, take the first one for example:\\narr1[i] - arr1[j] + arr2[i] - arr2[j] + i - j = arr1[i]+arr2[i]+i  - (arr1[j]+arr2[j]+j) = func1(i) - func1(j)\\nwhere func1(x) = arr1[x]+arr2[x]+x;\\nto cacluate max(func1(i)-func1(j)),  only the minimum and the maximum value of func1 is needed, which use O(n) time\\n\\nwhile, \\nfunc1(x) = arr1[x]+arr2[x]+x;\\nfunc2(x) = arr1[x]-arr2[x]+x;\\nfunc3(x) = -arr1[x]+arr2[x]+x;\\nfunc4(x) = -arr1[x]-arr2[x]+x;\\n\\nHope this is clear.",
      "voteCount": 10
    },
    {
      "name": "cnitinrohit",
      "year": 2024,
      "content": "Why is this question tagged as medium? Many hard tagged questions are easier than this...",
      "voteCount": 9
    },
    {
      "name": "atharvadj97",
      "year": 2024,
      "content": "Don\\'t solve this question it is a waste of time, doesn\\'t test your problem solving skills.\\n",
      "voteCount": 7
    },
    {
      "name": "vv_1801",
      "year": 2020,
      "content": "This question can be solved in O(N) Time and O(1) space complexity by using simple mathematics concepts of absolute operator.\\n\\nWe can deduce this express into 4 different forms after removing the absolute operator and applying specific conditions.\\n\\nCases can be A[i]>A[j] or A[i]<=A[j] and simultaneously i>j and i<=j can be the cases so using these conditions we can formulate 4 different expressions which do not involve use of absolute operator.\\nAfter that we just need to find the maximum value possible through each expression by iterating on array of numbers only once.\\n\\nIf you still face any difficulties while solving this question then you can refer to the video solution\\n\\nVideo Link:- https://youtu.be/Ov4weYCIipg",
      "voteCount": 7
    },
    {
      "name": "qkhhly",
      "year": 2020,
      "content": "there are two indices `i` and `j`, so a brute force `O(n^2)` solution can definitely solve the problem.\\n\\nto do better, it would either be O(n) or O(n logn). it does not seem like a O(n logn) problem and it\\'s more likely to be O(n).\\n\\nfor problems with absolute values like |x - y|, a common practice is to remove the absolute value sign and consider the cases when x > y and when x < y. we can try the same here. \\n\\nnow how to get a O(n) solution? we should either have a one dimensional dynamic programming solution, or we reduce the search space from two dimension to one dimension. once we consider those two possibilities, it\\'s easier to come close to the solution of separating index i and j into their own group as many of the top voted solutions did.\\n\\n#mahoupao:)",
      "voteCount": 4
    },
    {
      "name": "ft314159",
      "year": 2019,
      "content": "![image](https://assets.leetcode.com/users/ft314159/image_1564126964.png)\\n\\n![image](https://assets.leetcode.com/users/ft314159/image_1564126970.png)\\n\\n\\n\\u7B2C\\u4E8C\\u79CD\\u8BA1\\u7B97\\u65B9\\u5F0F\\u4E0E\\u7B2C\\u4E09\\u79CD\\u7684\\u8BC1\\u660E\\u4E5F\\u7C7B\\u4F3C",
      "voteCount": 4
    },
    {
      "name": "TeaAndy369",
      "year": 2024,
      "content": "how are we supposed to know that abs(a)+abs(b)+abs(c)=max(+-a+-b+-c)",
      "voteCount": 2
    },
    {
      "name": "code1withHarshit",
      "year": 2025,
      "content": "o(n^2) solution should work as acording to constraints but , i faced time limit excedded in test case 19 , why i don\\'t know ?\\n",
      "voteCount": 1
    },
    {
      "name": "garvit_17",
      "year": 2024,
      "content": "its\\'s a great great concept..took so much of my time but worth it",
      "voteCount": 1
    },
    {
      "name": "panzerschrek",
      "year": 2025,
      "content": "What a terrible question. It basically requires finding the maximum manhattan distance between 3D points in given set. And there is no way to speed-up this calculation, generally.",
      "voteCount": 0
    }
  ]
}
