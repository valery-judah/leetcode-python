{
  "category": "",
  "id": "305",
  "name": "Number of Islands II",
  "difficulty": "Hard",
  "leetcode_url": "https://leetcode.com/problems/number-of-islands-ii/",
  "slug": "number-of-islands-ii",
  "isPaidOnly": true,
  "tags": [
    "Array",
    "Hash Table",
    "Union Find"
  ],
  "similar_questions": [
    {
      "title": "Number of Islands",
      "difficulty": "Medium",
      "slug": "number-of-islands"
    },
    {
      "title": "Process Restricted Friend Requests",
      "difficulty": "Hard",
      "slug": "process-restricted-friend-requests"
    }
  ],
  "questionId": "305",
  "questionFrontendId": "305",
  "title": "Number of Islands II",
  "titleSlug": "number-of-islands-ii",
  "content": "<p>You are given an empty 2D binary grid <code>grid</code> of size <code>m x n</code>. The grid represents a map where <code>0</code>&#39;s represent water and <code>1</code>&#39;s represent land. Initially, all the cells of <code>grid</code> are water cells (i.e., all the cells are <code>0</code>&#39;s).</p>\n\n<p>We may perform an add land operation which turns the water at position into a land. You are given an array <code>positions</code> where <code>positions[i] = [r<sub>i</sub>, c<sub>i</sub>]</code> is the position <code>(r<sub>i</sub>, c<sub>i</sub>)</code> at which we should operate the <code>i<sup>th</sup></code> operation.</p>\n\n<p>Return <em>an array of integers</em> <code>answer</code> <em>where</em> <code>answer[i]</code> <em>is the number of islands after turning the cell</em> <code>(r<sub>i</sub>, c<sub>i</sub>)</code> <em>into a land</em>.</p>\n\n<p>An <strong>island</strong> is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/10/tmp-grid.jpg\" style=\"width: 500px; height: 294px;\" />\n<pre>\n<strong>Input:</strong> m = 3, n = 3, positions = [[0,0],[0,1],[1,2],[2,1]]\n<strong>Output:</strong> [1,1,2,3]\n<strong>Explanation:</strong>\nInitially, the 2d grid is filled with water.\n- Operation #1: addLand(0, 0) turns the water at grid[0][0] into a land. We have 1 island.\n- Operation #2: addLand(0, 1) turns the water at grid[0][1] into a land. We still have 1 island.\n- Operation #3: addLand(1, 2) turns the water at grid[1][2] into a land. We have 2 islands.\n- Operation #4: addLand(2, 1) turns the water at grid[2][1] into a land. We have 3 islands.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> m = 1, n = 1, positions = [[0,0]]\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= m, n, positions.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= m * n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>positions[i].length == 2</code></li>\n\t<li><code>0 &lt;= r<sub>i</sub> &lt; m</code></li>\n\t<li><code>0 &lt;= c<sub>i</sub> &lt; n</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you solve it in time complexity <code>O(k log(mn))</code>, where <code>k == positions.length</code>?</p>\n",
  "likes": 1952,
  "dislikes": 76,
  "stats": {
    "totalAccepted": "168.3K",
    "totalSubmission": "418.6K",
    "totalAcceptedRaw": 168301,
    "totalSubmissionRaw": 418599,
    "acRate": "40.2%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "Union Find",
      "slug": "union-find"
    }
  ],
  "metaData": {
    "name": "numIslands2",
    "params": [
      {
        "name": "m",
        "type": "integer",
        "dealloc": false
      },
      {
        "name": "n",
        "type": "integer",
        "dealloc": false
      },
      {
        "name": "positions",
        "type": "integer[][]",
        "dealloc": false
      }
    ],
    "return": {
      "type": "list<integer>",
      "dealloc": true
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": false,
        "name": "Uber",
        "slug": "uber",
        "timesEncountered": 13
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "panekk",
      "year": 2024,
      "content": "I believe the test case with positions `[[0,0],[0,1],[1,2],[1,2]]` is invalid. The problem description states \"We may perform an add land operation which **turns the water** at position **into a land**\", it says nothing about adding the land twice. Either this testcase (and similar, if any) should be removed, or the description should not mention turning water into a land.",
      "voteCount": 33
    },
    {
      "name": "jumppo90",
      "year": 2023,
      "content": "Anybody without a union find solution, raise your hands!",
      "voteCount": 18
    },
    {
      "name": "deleted_user",
      "year": 2023,
      "content": "The last testcase is evil",
      "voteCount": 10
    },
    {
      "name": "silverarc",
      "year": 2018,
      "content": "Union find by rank with path compression should be O(1) (technically alpha v, v being numbers of union find objects) operation for find and union, so should it technically be O(4 * len(positions) ) as you at most have 4 neighbors?",
      "voteCount": 10
    },
    {
      "name": "ZQGao",
      "year": 2024,
      "content": "One little hint: The elements in `positions` are not unique...",
      "voteCount": 9
    },
    {
      "name": "Msey",
      "year": 2023,
      "content": "Union find is the key to success :)",
      "voteCount": 7
    },
    {
      "name": "djslim",
      "year": 2023,
      "content": "Initialize parent nodes as pointing to nothing rather than pointing to itself like in classic union find",
      "voteCount": 4
    },
    {
      "name": "apolloydy",
      "year": 2015,
      "content": "I write me c++ solution using stranded union-find with \"balance\" feature (with a rank). It passed first time. However, after few days when I trying to solve this problem again. I got a TLE at the 1, 10000 test case. I have cope paste some of the top rank post int c++ language. they actually slow than mine. (and also got a TLE). I do not know why? I saw the Java solution with the same idea only takes 15ms.",
      "voteCount": 3
    },
    {
      "name": "SR_94",
      "year": 2024,
      "content": "Could you give some pointers to the follow up question in the description?\\n`Follow up: Could you solve it in time complexity O(k log(mn)), where k == positions.length?` ?",
      "voteCount": 1
    },
    {
      "name": "dirlik",
      "year": 2024,
      "content": "Anyone with an O(k log(mn)) solution? ",
      "voteCount": 1
    }
  ]
}
