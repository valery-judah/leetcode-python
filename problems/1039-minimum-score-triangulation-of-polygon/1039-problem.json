{
  "category": "",
  "id": "1039",
  "name": "Minimum Score Triangulation of Polygon",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/minimum-score-triangulation-of-polygon/",
  "slug": "minimum-score-triangulation-of-polygon",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Dynamic Programming"
  ],
  "similar_questions": [],
  "questionId": "1111",
  "questionFrontendId": "1039",
  "title": "Minimum Score Triangulation of Polygon",
  "titleSlug": "minimum-score-triangulation-of-polygon",
  "content": "<p>You have a convex <code>n</code>-sided polygon where each vertex has an integer value. You are given an integer array <code>values</code> where <code>values[i]</code> is the value of the <code>i<sup>th</sup></code> vertex in <strong>clockwise order</strong>.</p>\n\n<p><strong>Polygon</strong> <strong>triangulation</strong> is a process where you divide a polygon into a set of triangles and the vertices of each triangle must also be vertices of the original polygon. Note that no other shapes other than triangles are allowed in the division. This process will result in <code>n - 2</code> triangles.</p>\n\n<p>You will <strong>triangulate</strong> the polygon. For each triangle, the <em>weight</em> of that triangle is the product of the values at its vertices. The total score of the triangulation is the sum of these <em>weights</em> over all <code>n - 2</code> triangles.</p>\n\n<p>Return the<em> minimum possible score </em>that you can achieve with some<em> </em><strong>triangulation</strong><em> </em>of the polygon.</p>\n\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"http://127.0.0.1:49174/shape1.jpg\" /></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">values = [1,2,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">6</span></p>\n\n<p><strong>Explanation:</strong> The polygon is already triangulated, and the score of the only triangle is 6.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"http://127.0.0.1:49174/shape2.jpg\" /></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">values = [3,7,4,5]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">144</span></p>\n\n<p><strong>Explanation:</strong> There are two triangulations, with possible scores: 3*7*5 + 4*5*7 = 245, or 3*4*5 + 3*4*7 = 144.<br />\nThe minimum score is 144.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<p><img alt=\"\" src=\"http://127.0.0.1:49174/shape3.jpg\" /></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">values = [1,3,1,4,1,5]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">13</span></p>\n\n<p><strong>Explanation:</strong> The minimum score triangulation is 1*1*3 + 1*1*4 + 1*1*5 + 1*1*1 = 13.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == values.length</code></li>\n\t<li><code>3 &lt;= n &lt;= 50</code></li>\n\t<li><code>1 &lt;= values[i] &lt;= 100</code></li>\n</ul>\n",
  "likes": 1916,
  "dislikes": 189,
  "stats": {
    "totalAccepted": "64.9K",
    "totalSubmission": "107.2K",
    "totalAcceptedRaw": 64933,
    "totalSubmissionRaw": 107237,
    "acRate": "60.6%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "metaData": {
    "name": "minScoreTriangulation",
    "params": [
      {
        "name": "values",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "rickyl22",
      "year": 2019,
      "content": "Please tell me this is a hard problem so i don\\'t fall into depression..",
      "voteCount": 195
    },
    {
      "name": "seafmch",
      "year": 2019,
      "content": "What the hell is triangulation? Does every vertex need to be hit? If so, in what fashion do they need to be hit? I.e. if one were to draw the polygon as a graph, what would be the requirements of degrees on the vertices?",
      "voteCount": 29
    },
    {
      "name": "Mercedes",
      "year": 2019,
      "content": "When cutting down the large polygon, one must be careful not to mess up the remain parts\\' index. Example, consider a hexagon with vertices indexed [0, 6):\\n![image](https://assets.leetcode.com/users/mercedes/image_1577695196.png)\\n\\n\\nYou must use edge (0,5) to get your subproblems (the green edge). Doing this makes your subproblems can be described as [1, k] and [k, 5], which can be fitted in 2d-array. \\nIf your choice is another edge (such as (1,2), the red one in the image), then you will have a hard time in your next step. How do you save the status of quadrilateral [1, 4, 5, 0]?\\nI think it\\'s natural to consider using DP for this problem. However, this small obstacle indeed cost me a lot of time.",
      "voteCount": 28
    },
    {
      "name": "HeroKillerEver",
      "year": 2020,
      "content": "Actually this problem looks quite troublesome at first, after we dive in, we will find out that this problem is actually a deformed version of `Matrix Chain Multiplication`. For example,\\n\\n`[1,2,3,4]` can be viewed as 3 matrix multiplication  `(1, 2), (2, 3), (3, 4)`. what is the minimum operations to multiply all these three matrices.",
      "voteCount": 27
    },
    {
      "name": "dsapelnikov",
      "year": 2024,
      "content": "Why the fuck is this marked as medium?!",
      "voteCount": 17
    },
    {
      "name": "rahul_xt",
      "year": 2022,
      "content": "I won\\'t lie this was one bit*h of a question.",
      "voteCount": 13
    },
    {
      "name": "srinivas_8025",
      "year": 2019,
      "content": "[4,3,4,3,5]\\nThe answer should be 117, but expected answer is 132.\\n\\nthe minimum answer would be = 3\\\\*3\\\\*4 + 3\\\\*3\\\\*4 + 3\\\\*3\\\\*5 = 117\\n\\nThis formation should give minimum ans  = a1\\\\*a3\\\\*a0 + a1\\\\*a3\\\\*a2 + a1\\\\*a3\\\\*a4.\\n\\nUpdate:\\nI just got to know the definition of triangulation. The triangles formed by after triangulation must **NOT** be **INTERSECTING**. Other contestants who don\\'t know the definition can refer to https://en.wikipedia.org/wiki/Polygon_triangulation",
      "voteCount": 12
    },
    {
      "name": "p23_5",
      "year": 2020,
      "content": "Fix the side A[0] and A[n-1]\\nNow find a vertex k(0<k<n-1) and make triangle wiht A[0],A[k],A[n]\\nNow recursively call Function(0...k)+Function(k...n-1)+Area of triangle by A[0],A[k],A[n]\\n",
      "voteCount": 3
    },
    {
      "name": "jenlin0007",
      "year": 2020,
      "content": "Hi,\\n\\nIn the case of [2,1,4,4], two triangles are [2,1,4] and [2,1,4] with results of 2*1*4 + 2*1*4 = 16, but Leetcode give the answer of 24. Can anybody explain this?\\n\\nthanks,\\nJen\\n\\n",
      "voteCount": 3
    },
    {
      "name": "hot_hot_hippos",
      "year": 2020,
      "content": "Many of the solutions state that every triangle must share at least one edge with the polygon. \\n\\nI\\'ve drawn an example of a triangulation for a hexagon that breaks that (the middle triangle shares no edges with the polygon). Is this a valid triangulation? If so, then how are any solutions that assume all triangles have one set of adjacent vertices correct?\\n\\n![image](https://assets.leetcode.com/users/images/5113845e-b903-4490-8d7a-e9480c70143f_1595530086.3602214.png)\\n",
      "voteCount": 3
    }
  ]
}
