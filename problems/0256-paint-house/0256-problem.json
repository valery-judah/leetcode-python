{
  "category": "",
  "id": "256",
  "name": "Paint House",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/paint-house/",
  "slug": "paint-house",
  "isPaidOnly": true,
  "tags": [
    "Array",
    "Dynamic Programming"
  ],
  "similar_questions": [
    {
      "title": "House Robber",
      "difficulty": "Medium",
      "slug": "house-robber"
    },
    {
      "title": "House Robber II",
      "difficulty": "Medium",
      "slug": "house-robber-ii"
    },
    {
      "title": "Paint House II",
      "difficulty": "Hard",
      "slug": "paint-house-ii"
    },
    {
      "title": "Paint Fence",
      "difficulty": "Medium",
      "slug": "paint-fence"
    },
    {
      "title": "Minimum Path Cost in a Grid",
      "difficulty": "Medium",
      "slug": "minimum-path-cost-in-a-grid"
    }
  ],
  "questionId": "256",
  "questionFrontendId": "256",
  "title": "Paint House",
  "titleSlug": "paint-house",
  "content": "<p>There is a row of <code>n</code> houses, where each house can be painted one of three colors: red, blue, or green. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.</p>\n\n<p>The cost of painting each house with a certain color is represented by an <code>n x 3</code> cost matrix <code>costs</code>.</p>\n\n<ul>\n\t<li>For example, <code>costs[0][0]</code> is the cost of painting house <code>0</code> with the color red; <code>costs[1][2]</code> is the cost of painting house 1 with color green, and so on...</li>\n</ul>\n\n<p>Return <em>the minimum cost to paint all houses</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> costs = [[17,2,17],[16,16,5],[14,3,19]]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> Paint house 0 into blue, paint house 1 into green, paint house 2 into blue.\nMinimum cost: 2 + 5 + 3 = 10.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> costs = [[7,6,2]]\n<strong>Output:</strong> 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>costs.length == n</code></li>\n\t<li><code>costs[i].length == 3</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= costs[i][j] &lt;= 20</code></li>\n</ul>\n",
  "likes": 2355,
  "dislikes": 132,
  "stats": {
    "totalAccepted": "235.3K",
    "totalSubmission": "368.3K",
    "totalAcceptedRaw": 235347,
    "totalSubmissionRaw": 368336,
    "acRate": "63.9%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "metaData": {
    "name": "minCost",
    "params": [
      {
        "name": "costs",
        "type": "integer[][]"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "yuxiong",
      "year": 2019,
      "content": "Before 2014, there were less than 300 problems on Leetcode, and if you were able to solve all of them you could nail any algorithm interview in the US. Also, they didn\\'t ask many DP problems, most of the problems were related to linked lists, trees, sorting, matrix, math. I remember the hardest problem type at that time was recursion. So a problem like Paint House should be labeled as hard or at least medium back then.\\n\\nIn recent years, tech companies (especially Google) got crazy: they may ask you problems related to Priority Queue, Monotonic Stack, Bit Manipulation, Palindrome, KMP, DP, DFS, BFS, backtracking, Minimax tree,  Fenwick tree, Dijkstra, Bellman-ford, Floyd-Warshall, Floyd\\'s Tortoise and Hare......\\n\\nSo better get a job right now, imagine 10 years later the \"Easy\" problems could be: implementation of Red-Black tree, Hamiltonian cycle, Max-flow Min-cut...",
      "voteCount": 352
    },
    {
      "name": "devle79",
      "year": 2024,
      "content": "Why RBG instead of RGB??",
      "voteCount": 22
    },
    {
      "name": "aniket_0311",
      "year": 2023,
      "content": "Similar problem to minimum falling path sum.\\nHope it helps.",
      "voteCount": 8
    },
    {
      "name": "Unox_dot_jpeg",
      "year": 2024,
      "content": "This was the first matrix dp with no hints I solved after weeks of bashing my head against the dp wall.  To all those coming here struggling, KEEP TRYING YOU GOT THIS!!!!!",
      "voteCount": 7
    },
    {
      "name": "x0fzZhfYXo",
      "year": 2025,
      "content": "Before you submit your greedy approach look on this testcase: \\n[[15,10,16], [1000,1,1001]];",
      "voteCount": 2
    },
    {
      "name": "tin_le",
      "year": 2024,
      "content": "This problems was exactly like 1289. Minimum Falling Path Sum II.",
      "voteCount": 2
    },
    {
      "name": "cut_me_half",
      "year": 2019,
      "content": "Love you for the nice problem!",
      "voteCount": 2
    },
    {
      "name": "matthewjinmp",
      "year": 2025,
      "content": "i love when leetcode is nice on the DPs ",
      "voteCount": 1
    },
    {
      "name": "Pollet",
      "year": 2024,
      "content": "Can someone explain this question clearly please, I suppose it can\\'t be as easy to get the minimum cost for each house. I just don\\'t understand the problem",
      "voteCount": 1
    },
    {
      "name": "LeetCode",
      "year": 2022,
      "content": "This problem is the Daily LeetCoding Challenge for July, Week 1.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **üìå Do you want to learn the problem thoroughly?**\n  Read [**‚≠ê  LeetCode Official Solution‚≠ê**](https://leetcode.com/problems/paint-house/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 5 approaches in the official solution</summary>\n\n  \n**Approach 1:** Brute force\n\n  \n**Approach 2:** Brute force with a Recursive Tree\n\n  \n**Approach 3:** Memoization\n\n  \n**Approach 4:** Dynamic Programming\n\n  \n**Approach 5:** Dynamic Programming with Optimized Space Complexity\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
      "voteCount": 1
    }
  ]
}
