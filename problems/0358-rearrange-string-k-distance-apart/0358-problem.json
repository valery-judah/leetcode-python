{
  "category": "",
  "id": "358",
  "name": "Rearrange String k Distance Apart",
  "difficulty": "Hard",
  "leetcode_url": "https://leetcode.com/problems/rearrange-string-k-distance-apart/",
  "slug": "rearrange-string-k-distance-apart",
  "isPaidOnly": true,
  "tags": [
    "Hash Table",
    "String",
    "Greedy",
    "Sorting",
    "Heap (Priority Queue)",
    "Counting"
  ],
  "similar_questions": [
    {
      "title": "Task Scheduler",
      "difficulty": "Medium",
      "slug": "task-scheduler"
    },
    {
      "title": "Reorganize String",
      "difficulty": "Medium",
      "slug": "reorganize-string"
    },
    {
      "title": "Construct String With Repeat Limit",
      "difficulty": "Medium",
      "slug": "construct-string-with-repeat-limit"
    }
  ],
  "questionId": "358",
  "questionFrontendId": "358",
  "title": "Rearrange String k Distance Apart",
  "titleSlug": "rearrange-string-k-distance-apart",
  "content": "<p>Given a string <code>s</code> and an integer <code>k</code>, rearrange <code>s</code> such that the same characters are <strong>at least</strong> distance <code>k</code> from each other. If it is not possible to rearrange the string, return an empty string <code>&quot;&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aabbcc&quot;, k = 3\n<strong>Output:</strong> &quot;abcabc&quot;\n<strong>Explanation:</strong> The same letters are at least a distance of 3 from each other.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaabc&quot;, k = 3\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> It is not possible to rearrange the string.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaadbbcc&quot;, k = 2\n<strong>Output:</strong> &quot;abacabcd&quot;\n<strong>Explanation:</strong> The same letters are at least a distance of 2 from each other.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 3 * 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of only lowercase English letters.</li>\n\t<li><code>0 &lt;= k &lt;= s.length</code></li>\n</ul>\n",
  "likes": 984,
  "dislikes": 39,
  "stats": {
    "totalAccepted": "70.6K",
    "totalSubmission": "179.1K",
    "totalAcceptedRaw": 70614,
    "totalSubmissionRaw": 179097,
    "acRate": "39.4%"
  },
  "topicTags": [
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Greedy",
      "slug": "greedy"
    },
    {
      "name": "Sorting",
      "slug": "sorting"
    },
    {
      "name": "Heap (Priority Queue)",
      "slug": "heap-priority-queue"
    },
    {
      "name": "Counting",
      "slug": "counting"
    }
  ],
  "metaData": {
    "name": "rearrangeString",
    "params": [
      {
        "name": "s",
        "type": "string"
      },
      {
        "name": "k",
        "type": "integer"
      }
    ],
    "return": {
      "type": "string"
    }
  },
  "discussion_posts": [
    {
      "name": "ColinBin",
      "year": 2018,
      "content": "It took me some time to understand why should we pick the char with maximum remaining count. The first thought was that it seems more \"urgent\". But that does not convince myself. \\n\\nFor those who are familiar with EDF (earilest deadline first) algorithm in scheduling, this problem is actually (I think) a different statement or a variation of the original scheduling problem.\\n\\nBefore filling in the first position, think about this: **what is the deadline for the first occurance of every character?** e.g. \"aaabbc\" and k=2. \\n\\nIn this case, deadline for \"a\" is index 1, that is, if we do not fill the first \"a\" at index 0 or index 1, we cannot finish the job. Deadline for b is 3 and deadline for c is 5. Thus we choose the one with most urgent deadline.\\n\\n**Therefore, the logic behind choosing maxiumum remaining count is that the char with larger remaining count has a more urgent deadline.**  \\n\\nThe second \"a\" will not \"appear\" until 2 steps after where we put the first \"a\". It will come with a different deadline than when there are 3 remaining \"a\"s.",
      "voteCount": 85
    },
    {
      "name": "MaliGoBrrBrr",
      "year": 2024,
      "content": "a typical case of leetcode difficulty inconsistency. Minimum CPU cycle is a medium while this is a hard.",
      "voteCount": 7
    },
    {
      "name": "brofu",
      "year": 2024,
      "content": "For example 3, \\n\\nInput: s = \"aaadbbcc\", k = 2\\nOutput: \"abacabcd\"\\n\\n\"abcdabca\" is another possible output? ",
      "voteCount": 1
    },
    {
      "name": "fentoyal",
      "year": 2016,
      "content": "\"abeabac\"\\n\\n3\\n\\n@admin\\n\\nThe wrong code uses a similar idea as I stated in \\n\\nhttps://leetcode.com/discuss/108402/18-line-short-and-simple-solution-with-detailed-explanation\\n\\nBut instead of adding characters only at empty space between \"reference points\", the wrong code also put characters after last \"reference point\", and still got accepted. Actually the wrong code should have failed at (\"abeabac\", 3), so please add this one.",
      "voteCount": 1
    },
    {
      "name": "x0fzZhfYXo",
      "year": 2024,
      "content": "Would heap be accepted at interview?",
      "voteCount": 0
    },
    {
      "name": "gflanary",
      "year": 2023,
      "content": "Difficulty is inaccurate; this should be a medium.",
      "voteCount": -15
    }
  ]
}
