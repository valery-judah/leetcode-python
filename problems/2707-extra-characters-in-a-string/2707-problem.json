{
  "category": "",
  "id": "2707",
  "name": "Extra Characters in a String",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/extra-characters-in-a-string/",
  "slug": "extra-characters-in-a-string",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Hash Table",
    "String",
    "Dynamic Programming",
    "Trie"
  ],
  "similar_questions": [
    {
      "title": "Word Break",
      "difficulty": "Medium",
      "slug": "word-break"
    }
  ],
  "questionId": "2755",
  "questionFrontendId": "2707",
  "title": "Extra Characters in a String",
  "titleSlug": "extra-characters-in-a-string",
  "content": "<p>You are given a <strong>0-indexed</strong> string <code>s</code> and a dictionary of words <code>dictionary</code>. You have to break <code>s</code> into one or more <strong>non-overlapping</strong> substrings such that each substring is present in <code>dictionary</code>. There may be some <strong>extra characters</strong> in <code>s</code> which are not present in any of the substrings.</p>\n\n<p>Return <em>the <strong>minimum</strong> number of extra characters left over if you break up </em><code>s</code><em> optimally.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leetscode&quot;, dictionary = [&quot;leet&quot;,&quot;code&quot;,&quot;leetcode&quot;]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> We can break s in two substrings: &quot;leet&quot; from index 0 to 3 and &quot;code&quot; from index 5 to 8. There is only 1 unused character (at index 4), so we return 1.\n\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;sayhelloworld&quot;, dictionary = [&quot;hello&quot;,&quot;world&quot;]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can break s in two substrings: &quot;hello&quot; from index 3 to 7 and &quot;world&quot; from index 8 to 12. The characters at indices 0, 1, 2 are not used in any substring and thus are considered as extra characters. Hence, we return 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= dictionary.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= dictionary[i].length &lt;= 50</code></li>\n\t<li><code>dictionary[i]</code>&nbsp;and <code>s</code> consists of only lowercase English letters</li>\n\t<li><code>dictionary</code> contains distinct words</li>\n</ul>\n",
  "likes": 2598,
  "dislikes": 137,
  "stats": {
    "totalAccepted": "192K",
    "totalSubmission": "336.2K",
    "totalAcceptedRaw": 192040,
    "totalSubmissionRaw": 336185,
    "acRate": "57.1%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    },
    {
      "name": "Trie",
      "slug": "trie"
    }
  ],
  "metaData": {
    "name": "minExtraChar",
    "params": [
      {
        "name": "s",
        "type": "string"
      },
      {
        "type": "string[]",
        "name": "dictionary"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "joshczipo",
      "year": 2023,
      "content": "2028 test casts buddy touch grass",
      "voteCount": 224
    },
    {
      "name": "Zaki-1337",
      "year": 2023,
      "content": "Feels good to be able to solve these problems, atleast with the most basic method considering there was a time when I couldn\\'t figure out how to even start approaching the problem. Keep on keeping on guys!",
      "voteCount": 131
    },
    {
      "name": "sheshnathverma",
      "year": 2023,
      "content": "I think description should mention, we are allowed to reuse the dictionary word multiple time.\\n\\nIt took lot of time to realize :(\\n\\nTest Case: \"leetsleetscode\", [\"leets\", \"code\"]",
      "voteCount": 82
    },
    {
      "name": "kkchengaf",
      "year": 2024,
      "content": "gathered testcases from discussion\\n```\\n\"dwmodizxvvbosxxw\"\\n[\"ox\",\"lb\",\"diz\",\"gu\",\"v\",\"ksv\",\"o\",\"nuq\",\"r\",\"txhe\",\"e\",\"wmo\",\"cehy\",\"tskz\",\"ds\",\"kzbu\"]\\n\"leetsleetscode\"\\n[\"leets\", \"code\"]\\n\"azvzulhlwxwobowijiyebeaskecvtjqwkmaqnvnaomaqnvf\"\\n[\"na\",\"i\",\"edd\",\"wobow\",\"kecv\",\"b\",\"n\",\"or\",\"jj\",\"zul\",\"vk\",\"yeb\",\"qnfac\",\"azv\",\"grtjba\",\"yswmjn\",\"xowio\",\"u\",\"xi\",\"pcmatm\",\"maqnv\"]\\n\"kevlplxozaizdhxoimmraiakbak\"\\n[\"yv\",\"bmab\",\"hv\",\"bnsll\",\"mra\",\"jjqf\",\"g\",\"aiyzi\",\"ip\",\"pfctr\",\"flr\",\"ybbcl\",\"biu\",\"ke\",\"lpl\",\"iak\",\"pirua\",\"ilhqd\",\"zdhx\",\"fux\",\"xaw\",\"pdfvt\",\"xf\",\"t\",\"wq\",\"r\",\"cgmud\",\"aokas\",\"xv\",\"jf\",\"cyys\",\"wcaz\",\"rvegf\",\"ysg\",\"xo\",\"uwb\",\"lw\",\"okgk\",\"vbmi\",\"v\",\"mvo\",\"fxyx\",\"ad\",\"e\"]\\n\"aakodubkrlauvfkzje\"\\n[\"ix\",\"qoqw\",\"ax\",\"ar\",\"v\",\"hxpl\",\"nxcg\",\"thr\",\"kod\",\"pns\",\"cdo\",\"euy\",\"es\",\"rf\",\"bxcx\",\"xe\",\"ua\",\"vws\",\"vumr\",\"zren\",\"bzt\",\"qwxn\",\"ami\",\"rrbk\",\"ak\",\"uan\",\"g\",\"vfk\",\"jxmg\",\"fhb\",\"nqgd\",\"fau\",\"rl\",\"h\",\"r\",\"jxvo\",\"tv\",\"smfp\",\"lmck\",\"od\"]\\n\"leecodet\"\\n[\"leet\",\"code\"]\\n\"zzyyxxwwvvuuttssrrqqppoonnmmllkkjjiihhggffeeddccbb\"\\n[\"ffeed\", \"kkjji\", \"ppoon\", \"uutts\", \"zzyyx\", \"ccb\", \"dcc\", \"ddc\", \"eed\", \"fee\", \"ffe\", \"ggf\", \"hgg\", \"hhg\", \"iih\", \"jii\", \"jji\", \"kkj\", \"lkk\", \"llk\", \"mml\", \"nmm\", \"nnm\", \"oon\", \"poo\", \"ppo\", \"qqp\", \"rqq\", \"rrq\", \"ssr\", \"tss\", \"tts\", \"uut\", \"vuu\", \"vvu\", \"wwv\", \"xww\", \"xxw\", \"yyx\", \"zyy\", \"zzy\"]\\n\"metzeaencgpgvsckjrqafkxgyzbe\"\\n[\"zdzz\",\"lgrhy\",\"r\",\"ohk\",\"zkowk\",\"g\",\"zqpn\",\"anoni\",\"ka\",\"qafkx\",\"t\",\"jr\",\"xdye\",\"mppc\",\"bqqb\",\"encgp\",\"yf\",\"vl\",\"ctsxk\",\"gn\",\"cujh\",\"ce\",\"rwrpq\",\"tze\",\"zxhg\",\"yzbe\",\"c\",\"o\",\"hnk\",\"gv\",\"uzbc\",\"xn\",\"kk\",\"ujjd\",\"vv\",\"mxhmv\",\"ugn\",\"at\",\"kumr\",\"ensv\",\"x\",\"uy\",\"gb\",\"ae\",\"jljuo\",\"xqkgj\"]\\n```",
      "voteCount": 64
    },
    {
      "name": "anwendeng",
      "year": 2023,
      "content": "I like DP much more than bit counting.\nAfter usual DP can try DP+Trie! more challenging.",
      "voteCount": 40
    },
    {
      "name": "c4tdog",
      "year": 2023,
      "content": "test\\n\"dwmodizxvvbosxxw\"\\n[\"ox\",\"lb\",\"diz\",\"gu\",\"v\",\"ksv\",\"o\",\"nuq\",\"r\",\"txhe\",\"e\",\"wmo\",\"cehy\",\"tskz\",\"ds\",\"kzbu\"]\\nhow come the answer is 7? I can only see this way (with 8 chars left)\\nd <b>wmo</b> <b>diz</b> xv <b>v</b> b <b>o</b> sxxw",
      "voteCount": 32
    },
    {
      "name": "bloodyblade",
      "year": 2023,
      "content": "I\\'ve stuck on 1988 test case:\\ns = \"azvzulhlwxwobowijiyebeaskecvtjqwkmaqnvnaomaqnvf\"\\ndictionary = \"\"na\",\"i\",\"edd\",\"wobow\",\"kecv\",\"b\",\"n\",\"or\",\"jj\",\"zul\",\"vk\",\"yeb\",\"qnfac\",\"azv\",\"grtjba\",\"yswmjn\",\"xowio\",\"u\",\"xi\",\"pcmatm\",\"maqnv\"\"\\n\\nOutput = 14\\nExpected = 15\\n\\nWhy 15 is expected? By the end, my solution produces the following string: \"hlwjeastjqwkof\". Isn\\'t it correct?",
      "voteCount": 26
    },
    {
      "name": "zhibin-wang09",
      "year": 2023,
      "content": "Hint:\n\nWe know that substring of `s` must exist in dictionary to be able to break. The substring may start from index 0. If it doesn't then the index 0 is the leftover and so on.\n\nMore generally, for every substring there are a 2 choices:\n\n1) this substring is an leftover then `len(substring) + mininmumLeftOver(rest of the string)`\n 2) this substring is part of a substring of string from dictionary, then `0(no leftover) + mininmumLeftOver(rest of the string)`. \n\nWe shall pick the minimum from these 2 choices.",
      "voteCount": 24
    },
    {
      "name": "freezeen3",
      "year": 2023,
      "content": "The joy of solving a DP problem on your own is not something other types of problems can provide.",
      "voteCount": 19
    },
    {
      "name": "Prajju22",
      "year": 2023,
      "content": "[139. Word Break] similar problem  (https://leetcode.com/problems/word-break/)",
      "voteCount": 18
    }
  ]
}
