{
  "category": "",
  "id": "28",
  "name": "Find the Index of the First Occurrence in a String",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/",
  "slug": "find-the-index-of-the-first-occurrence-in-a-string",
  "isPaidOnly": false,
  "tags": [
    "Two Pointers",
    "String",
    "String Matching"
  ],
  "similar_questions": [
    {
      "title": "Shortest Palindrome",
      "difficulty": "Hard",
      "slug": "shortest-palindrome"
    },
    {
      "title": "Repeated Substring Pattern",
      "difficulty": "Easy",
      "slug": "repeated-substring-pattern"
    }
  ],
  "questionId": "28",
  "questionFrontendId": "28",
  "title": "Find the Index of the First Occurrence in a String",
  "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
  "content": "<p>Given two strings <code>needle</code> and <code>haystack</code>, return the index of the first occurrence of <code>needle</code> in <code>haystack</code>, or <code>-1</code> if <code>needle</code> is not part of <code>haystack</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> haystack = &quot;sadbutsad&quot;, needle = &quot;sad&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> &quot;sad&quot; occurs at index 0 and 6.\nThe first occurrence is at index 0, so we return 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> haystack = &quot;leetcode&quot;, needle = &quot;leeto&quot;\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> &quot;leeto&quot; did not occur in &quot;leetcode&quot;, so we return -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= haystack.length, needle.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>haystack</code> and <code>needle</code> consist of only lowercase English characters.</li>\n</ul>\n",
  "likes": 7037,
  "dislikes": 529,
  "stats": {
    "totalAccepted": "3.5M",
    "totalSubmission": "7.8M",
    "totalAcceptedRaw": 3544279,
    "totalSubmissionRaw": 7802320,
    "acRate": "45.4%"
  },
  "topicTags": [
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "String Matching",
      "slug": "string-matching"
    }
  ],
  "metaData": {
    "name": "strStr",
    "params": [
      {
        "name": "haystack",
        "type": "string"
      },
      {
        "name": "needle",
        "type": "string"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": false,
        "name": "Google",
        "slug": "google",
        "timesEncountered": 15
      },
      {
        "taggedByAdmin": false,
        "name": "Amazon",
        "slug": "amazon",
        "timesEncountered": 11
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "Siddharth2k007",
      "year": 2021,
      "content": "Who marked this as `Easy`? It\\'s not easy at all. Though you can easily produce O(mn) solution, it is not accepted for python. You need KMP algorithm to produce O(m + n) solution!",
      "voteCount": 458
    },
    {
      "name": "tlong1299",
      "year": 2022,
      "content": "**USE FIND**\\nAs a Python programmer, refusing to use core language features is akin to using a hammer instead of nail-gun because it makes you a \"better\" carpenter. Remember that this is Python not C. Python\\'s PEP 20 states, \"There should be one-- and preferably only one --obvious way to do it.\" I would call a string operation built into python designed to solve this particular problem the obvious way to do it.\\n\\n**DON\\'T USE FIND**\\nIf you go into an interview and solve this problem with the find() function, you better know how it works underneath, and you should be prepared to defend your use of it. After all nothing is \"free\" in your code, and even \"magic\" functions have a time and memory cost associated with them. Knowing what this cost is, and why it is the way it is will make you a better programmer. Implementing the function yourself, at least once, can really help you develop a better appreciation for the language.",
      "voteCount": 146
    },
    {
      "name": "mgoldenbe",
      "year": 2022,
      "content": "I don\\'t think they meant that I can call a library function. Also, I get \"Time Limit Exceeded\" on brute-force. So, this means I should use an advanced algorithm, like Rabin-Karp or KMP. Why then is this problem marked \"easy\"?",
      "voteCount": 138
    },
    {
      "name": "marten2",
      "year": 2016,
      "content": "Hey,\\n\\nI wouldn't say that coming up with the KMP algorithm from scratch is easy ~1 hour time. Did companies that asked this question expect applicants to know KMP by heart? Did they expect the applicant to show a naive implementation? Any opinion on this?\\n\\nBest,\\n\\nMarten",
      "voteCount": 68
    },
    {
      "name": "satyam_rai15",
      "year": 2023,
      "content": "I think Leetcode needs to implement a few testcases where O(n*m) solutions should not be accepted.",
      "voteCount": 55
    },
    {
      "name": "zijianz",
      "year": 2015,
      "content": "Input: \\t\"\", \"\"\\nOutput: \\t-1\\nExpected: \\t0\\n\\nBasically there is nothing in the string, how do you get the index.\\n\\nIf this test case is valid, then needle =\"\", haystack=\"anything\" could return any value. since empty is everywhere.",
      "voteCount": 50
    },
    {
      "name": "jarc",
      "year": 2013,
      "content": " Is it the standard string matching problem? Am I wrong?",
      "voteCount": 47
    },
    {
      "name": "trpaslik",
      "year": 2022,
      "content": "Most of python submissions are based on cheating (s.index() or s.find()).\\nIt is a pitty that when implementing it in pure python (the naive `O(n*m)` way) it results in timeout.\\nIt should either be accepted for `O(n*m)` or if some better approach is expected like with a rolling hash then it should be marked as medium IMHO.",
      "voteCount": 36
    },
    {
      "name": "SarK97",
      "year": 2021,
      "content": "Why this test case is returning -1? Shouldn\\'t it be 4 since it is a substring?\\n\"mississippi\"\\n\"issip\"",
      "voteCount": 31
    },
    {
      "name": "AlgoEngine",
      "year": 2023,
      "content": "Visualization of the KMP Algorithm\\n\\nhttps://youtu.be/0iDiUuHZE_g",
      "voteCount": 26
    }
  ]
}
