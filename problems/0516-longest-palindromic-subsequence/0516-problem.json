{
  "category": "",
  "id": "516",
  "name": "Longest Palindromic Subsequence",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/longest-palindromic-subsequence/",
  "slug": "longest-palindromic-subsequence",
  "isPaidOnly": false,
  "tags": [
    "String",
    "Dynamic Programming"
  ],
  "similar_questions": [
    {
      "title": "Longest Palindromic Substring",
      "difficulty": "Medium",
      "slug": "longest-palindromic-substring"
    },
    {
      "title": "Palindromic Substrings",
      "difficulty": "Medium",
      "slug": "palindromic-substrings"
    },
    {
      "title": "Count Different Palindromic Subsequences",
      "difficulty": "Hard",
      "slug": "count-different-palindromic-subsequences"
    },
    {
      "title": "Longest Common Subsequence",
      "difficulty": "Medium",
      "slug": "longest-common-subsequence"
    },
    {
      "title": "Longest Palindromic Subsequence II",
      "difficulty": "Medium",
      "slug": "longest-palindromic-subsequence-ii"
    },
    {
      "title": "Maximize Palindrome Length From Subsequences",
      "difficulty": "Hard",
      "slug": "maximize-palindrome-length-from-subsequences"
    },
    {
      "title": "Maximum Product of the Length of Two Palindromic Subsequences",
      "difficulty": "Medium",
      "slug": "maximum-product-of-the-length-of-two-palindromic-subsequences"
    }
  ],
  "questionId": "516",
  "questionFrontendId": "516",
  "title": "Longest Palindromic Subsequence",
  "titleSlug": "longest-palindromic-subsequence",
  "content": "<p>Given a string <code>s</code>, find <em>the longest palindromic <strong>subsequence</strong>&#39;s length in</em> <code>s</code>.</p>\n\n<p>A <strong>subsequence</strong> is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bbbab&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> One possible longest palindromic subsequence is &quot;bbbb&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cbbd&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> One possible longest palindromic subsequence is &quot;bb&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consists only of lowercase English letters.</li>\n</ul>\n",
  "likes": 10135,
  "dislikes": 338,
  "stats": {
    "totalAccepted": "674.4K",
    "totalSubmission": "1M",
    "totalAcceptedRaw": 674393,
    "totalSubmissionRaw": 1044741,
    "acRate": "64.6%"
  },
  "topicTags": [
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "metaData": {
    "name": "longestPalindromeSubseq",
    "params": [
      {
        "name": "s",
        "type": "string"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "nikeMafia",
      "year": 2023,
      "content": "Should be marked as Hard.",
      "voteCount": 191
    },
    {
      "name": "daringcalf",
      "year": 2023,
      "content": "I\\'m still new to DP after a year      T_T",
      "voteCount": 128
    },
    {
      "name": "karan_cpp_py",
      "year": 2023,
      "content": "Once u follow Aditya Verma\\'s DP lectures, it\\'s for lifetime.",
      "voteCount": 73
    },
    {
      "name": "pragyesh_tiwari",
      "year": 2023,
      "content": "If anyone is getting \"Memory Limit Exceeded\" error in C++ then just make sure to pass string by reference in the function.",
      "voteCount": 40
    },
    {
      "name": "halfengineer",
      "year": 2023,
      "content": "I first thought it to be easy medium but soon it start expanding his wings\\uD83D\\uDE2D",
      "voteCount": 33
    },
    {
      "name": "cOde_Ranvir25",
      "year": 2023,
      "content": "**Here is an Approach :-)**\\n\\n1. Initialize a 2D array dp of size n x n, where n is the length of the input string s.\\n2. Fill the entire dp array with -1 to indicate that no subproblem has been solved yet.\\n3. Define a recursive helper method that takes parameters i and j, which represent the starting and ending indices of the substring to consider in s, and s itself as input.\\n4. In the helper method, implement the following base cases:\\na. If i > j, return 0 as an empty string is a palindrome with length 0.\\nb. If i == j, return 1 as a single character is a palindrome with length 1.\\n5. Check if the result for the subproblem with indices i and j is already computed and stored in dp[i][j]. If so, return the stored result.\\n6. If the characters at indices i and j in s are the same, recursively call the helper method with i + 1 and j - 1, and add 2 to the result, as the characters at i and j can form a palindrome subsequence of length 2. Store the result in dp[i][j].\\n7. If the characters at indices i and j in s are not the same, take the maximum of the results obtained by excluding either the character at i or the character at j. Recursively call the helper method with i + 1 and j to exclude the character at i, and with i and j - 1 to exclude the character at j. Store the result in dp[i][j].\\n8. Finally, return the result stored in dp[i][j], which represents the length of the longest palindrome subsequence of s starting from indices i and j.\\n",
      "voteCount": 22
    },
    {
      "name": "K_Le_Viking",
      "year": 2024,
      "content": "Here are some usefull testcases for you guys ! :\\n\\n```\\n\"bbbab\"\\n\"cbbd\"\\n\"p\"\\n\"racecarracecarracecarracecarracecar\"\\n\"girafarig\"\\n\"azaearatayauaiaoapaqasadafagahajakalamawaxacavabanaazaearatayauaiaoapaqasadafagahajakalamawaxacavabananab\"\\n\"azertyuiopqsdfghjklmwxcvbn\"\\n\"awznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythyawznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythyawznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythyawznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythyawznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythyawznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythyawznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythyawznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythyawznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythyawznertpmoqlksnxhfutyhnimpejftypjfaznertpmoqlksnxhfutyhnimpejftyyenaznertpmoqlksnxhfutyhnimpejftythy\"\\n```",
      "voteCount": 20
    },
    {
      "name": "raja_chidambaram",
      "year": 2017,
      "content": "The first test case says 'bbbb' is one such longest subsequence; if so then why not bbabb?",
      "voteCount": 16
    },
    {
      "name": "kennycollins",
      "year": 2020,
      "content": "![image](https://assets.leetcode.com/users/images/e761073c-93f2-4779-8b2b-99a0ee7147b1_1607399914.9574285.png)\\n",
      "voteCount": 14
    },
    {
      "name": "deleted_user",
      "year": 2024,
      "content": "we never use DP in real development.\\nits a useless shit.",
      "voteCount": 8
    }
  ]
}
