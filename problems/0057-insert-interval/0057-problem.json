{
  "category": "",
  "id": "57",
  "name": "Insert Interval",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/insert-interval/",
  "slug": "insert-interval",
  "isPaidOnly": false,
  "tags": [
    "Array"
  ],
  "similar_questions": [
    {
      "title": "Merge Intervals",
      "difficulty": "Medium",
      "slug": "merge-intervals"
    },
    {
      "title": "Range Module",
      "difficulty": "Hard",
      "slug": "range-module"
    },
    {
      "title": "Count Integers in Intervals",
      "difficulty": "Hard",
      "slug": "count-integers-in-intervals"
    }
  ],
  "questionId": "57",
  "questionFrontendId": "57",
  "title": "Insert Interval",
  "titleSlug": "insert-interval",
  "content": "<p>You are given an array of non-overlapping intervals <code>intervals</code> where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code> represent the start and the end of the <code>i<sup>th</sup></code> interval and <code>intervals</code> is sorted in ascending order by <code>start<sub>i</sub></code>. You are also given an interval <code>newInterval = [start, end]</code> that represents the start and end of another interval.</p>\n\n<p>Insert <code>newInterval</code> into <code>intervals</code> such that <code>intervals</code> is still sorted in ascending order by <code>start<sub>i</sub></code> and <code>intervals</code> still does not have any overlapping intervals (merge overlapping intervals if necessary).</p>\n\n<p>Return <code>intervals</code><em> after the insertion</em>.</p>\n\n<p><strong>Note</strong> that you don&#39;t need to modify <code>intervals</code> in-place. You can make a new array and return it.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,3],[6,9]], newInterval = [2,5]\n<strong>Output:</strong> [[1,5],[6,9]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\n<strong>Output:</strong> [[1,2],[3,10],[12,16]]\n<strong>Explanation:</strong> Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>5</sup></code></li>\n\t<li><code>intervals</code> is sorted by <code>start<sub>i</sub></code> in <strong>ascending</strong> order.</li>\n\t<li><code>newInterval.length == 2</code></li>\n\t<li><code>0 &lt;= start &lt;= end &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
  "likes": 11336,
  "dislikes": 895,
  "stats": {
    "totalAccepted": "1.5M",
    "totalSubmission": "3.5M",
    "totalAcceptedRaw": 1548295,
    "totalSubmissionRaw": 3523442,
    "acRate": "43.9%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    }
  ],
  "metaData": {
    "name": "insert",
    "params": [
      {
        "name": "intervals",
        "type": "integer[][]"
      },
      {
        "name": "newInterval",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer[][]"
    }
  },
  "discussion_posts": [
    {
      "name": "Taswell",
      "year": 2023,
      "content": "this problem feels like its sole purpose of existing is to disgust you.",
      "voteCount": 911
    },
    {
      "name": "shxtrk",
      "year": 2023,
      "content": "with each failed test case and after adding another `if` statement, I realize that there is a simpler solution, but I still persist in branching in the hope that next attempt will definitely be accepted..",
      "voteCount": 461
    },
    {
      "name": "sarpalmadhav",
      "year": 2023,
      "content": "Whenever the times comes when I start developing arrogance about the multiple data structures + algos I know, I will return back to this problem and it will humble me down by telling me **how a simple Array problem with simple statement can test our coding abilities!!**",
      "voteCount": 423
    },
    {
      "name": "cartesPerforees",
      "year": 2023,
      "content": "I am so relieved looking at the comments to see that I was not the only one being completely thrown off by how easy the problem sounds and what a nightmare it turned out to be! Every failed test case took away a piece of my soul. There\\'s very little left of it but after several hours of pure frustration, I at least got a horrible frankenstein monster of a solution, with awful if statements pieced together. I need to work read uo in the solution and learn but that will be for another (distant) day",
      "voteCount": 133
    },
    {
      "name": "sarpalmadhav",
      "year": 2023,
      "content": "Finally a stop to tree problems! \\uD83D\\uDC35\\uD83D\\uDC35",
      "voteCount": 120
    },
    {
      "name": "Celestial__Coder",
      "year": 2023,
      "content": "Congrats to the people who made it through the forest!!!",
      "voteCount": 106
    },
    {
      "name": "aleckerrigan",
      "year": 2023,
      "content": "I receive this problem from startups all the time, I\\'m not sure why they like it, but really work at it!",
      "voteCount": 78
    },
    {
      "name": "DevOgabek",
      "year": 2024,
      "content": "## Useful test cases\\n```\\n[]\\n[2,5]\\n[[3,5],[8,10]]\\n[1,2]\\n[[1,3],[6,9]]\\n[11,12]\\n[[1,3],[6,9]]\\n[2,5]\\n[[1,2],[3,5],[8,10]]\\n[2,9]\\n[[1,3],[6,9]]\\n[2,7]\\n[[1,3],[6,9]]\\n[4,7]\\n[[1,3],[6,9]]\\n[3,6]\\n```",
      "voteCount": 72
    },
    {
      "name": "todamoon",
      "year": 2019,
      "content": "It feels to me only adding unnecessary coding complexity without adding interesting challenge to this question. Any one sees the point of such change?",
      "voteCount": 62
    },
    {
      "name": "benjaminsll18",
      "year": 2023,
      "content": "> \"Return `intervals` after the insertion.\"\\n\\nCan the question be rephrased? This sentence makes it seems like the code is asking for us to modify the input `intervals` array, but the problem actually can be solved by creating a new solution array.",
      "voteCount": 36
    }
  ]
}
