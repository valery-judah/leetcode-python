{
  "category": "",
  "id": "91",
  "name": "Decode Ways",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/decode-ways/",
  "slug": "decode-ways",
  "isPaidOnly": false,
  "tags": [
    "String",
    "Dynamic Programming"
  ],
  "similar_questions": [
    {
      "title": "Decode Ways II",
      "difficulty": "Hard",
      "slug": "decode-ways-ii"
    },
    {
      "title": "Number of Ways to Separate Numbers",
      "difficulty": "Hard",
      "slug": "number-of-ways-to-separate-numbers"
    },
    {
      "title": "Count Number of Texts",
      "difficulty": "Medium",
      "slug": "count-number-of-texts"
    }
  ],
  "questionId": "91",
  "questionFrontendId": "91",
  "title": "Decode Ways",
  "titleSlug": "decode-ways",
  "content": "<p>You have intercepted a secret message encoded as a string of numbers. The message is <strong>decoded</strong> via the following mapping:</p>\n\n<p><code>&quot;1&quot; -&gt; &#39;A&#39;<br />\n&quot;2&quot; -&gt; &#39;B&#39;<br />\n...<br />\n&quot;25&quot; -&gt; &#39;Y&#39;<br />\n&quot;26&quot; -&gt; &#39;Z&#39;</code></p>\n\n<p>However, while decoding the message, you realize that there are many different ways you can decode the message because some codes are contained in other codes (<code>&quot;2&quot;</code> and <code>&quot;5&quot;</code> vs <code>&quot;25&quot;</code>).</p>\n\n<p>For example, <code>&quot;11106&quot;</code> can be decoded into:</p>\n\n<ul>\n\t<li><code>&quot;AAJF&quot;</code> with the grouping <code>(1, 1, 10, 6)</code></li>\n\t<li><code>&quot;KJF&quot;</code> with the grouping <code>(11, 10, 6)</code></li>\n\t<li>The grouping <code>(1, 11, 06)</code> is invalid because <code>&quot;06&quot;</code> is not a valid code (only <code>&quot;6&quot;</code> is valid).</li>\n</ul>\n\n<p>Note: there may be strings that are impossible to decode.<br />\n<br />\nGiven a string s containing only digits, return the <strong>number of ways</strong> to <strong>decode</strong> it. If the entire string cannot be decoded in any valid way, return <code>0</code>.</p>\n\n<p>The test cases are generated so that the answer fits in a <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;12&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">2</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>&quot;12&quot; could be decoded as &quot;AB&quot; (1 2) or &quot;L&quot; (12).</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;226&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">3</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>&quot;226&quot; could be decoded as &quot;BZ&quot; (2 26), &quot;VF&quot; (22 6), or &quot;BBF&quot; (2 2 6).</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;06&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>&quot;06&quot; cannot be mapped to &quot;F&quot; because of the leading zero (&quot;6&quot; is different from &quot;06&quot;). In this case, the string is not a valid encoding, so return 0.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> contains only digits and may contain leading zero(s).</li>\n</ul>\n",
  "likes": 12567,
  "dislikes": 4595,
  "stats": {
    "totalAccepted": "1.5M",
    "totalSubmission": "4.1M",
    "totalAcceptedRaw": 1518627,
    "totalSubmissionRaw": 4112874,
    "acRate": "36.9%"
  },
  "topicTags": [
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "metaData": {
    "name": "numDecodings",
    "params": [
      {
        "name": "s",
        "type": "string"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "rafsan062",
      "year": 2022,
      "content": "I finished counting stairs, house robber, house robber ii, longest palindromic substring, palindromic substrings and came to this problem feeling a bit confident about my dp skills but boy oh boy was I wrong. Anyone else felt that this was a quite hard problem?",
      "voteCount": 520
    },
    {
      "name": "hz9423",
      "year": 2019,
      "content": "I got fucked by zeros really hard",
      "voteCount": 263
    },
    {
      "name": "renwopang",
      "year": 2021,
      "content": "# Dynamic programing\\nA valid decode result belongs to one of the following two categories:\\n* Category 1: ending with a valid one-digit (for example: [........, 9] or [.........., 2])\\n* Category 2: ending with a valid two-digit (for example: [........, 12] or [........, 20] or [........, 16] )\\n\\nFor a certain input string, the total count of valid results = count of Category 1 results + count of Category 2 results.\\n\\nApplying the principle of dynamic programing, when we do a loop on the input string, while we are at a certain character, we try to get new valid decode results by adding this new character onto the valid results ending at the previous character. \\n\\nBecause each valid decode result is in either Category 1 or 2, we have 4 cases:\\n* Category 1 to Category 1 (for example: [........, 9] --add X--> [........, 9, X])\\n* Category 1 to Category 2 (for example: [........, 2] --add X--> [........, 2X])\\n* Category 2 to Category 1 (for example: [........, 20] --add X-->  [........, 20, X])\\n* Category 2 to Category 2 is **Impossible**. (for example: [........, 21] --cannot change into-- > [........, 2, 1X])\\n\\nWe keep track of the counts of Category 1 and Category 2 results ending at each character, using count1 as the count of Category 1 and count2 as count of Categoty 2.\\n\\nSince both Category 1 and 2 can be changed into Category 1, therefore, \\n* count1 = previous count1 + previous count2\\n\\nIf the character is \\'0\\', then the equation above is not valid. In that case, because neither [\\u2026\\u2026\\u2026., X, 0] or [\\u2026\\u2026., XX, 0] is valid, there is no valid solution ending with one-digit \\'0\\'. As a result, we set count1 to 0.\\n\\nOnly Category 1 can be changed into Category 2, therefore, \\n\\n* count2  = previous count1\\n\\nThis equation is not valid if the new character cannot form a valid two-digit with the previous character. For example, [........, 9] --cannot be --> [........, 9X]. Another example, [........, 2] \\u2013cannot be --> [........, 29]. If that is the case, we set count2 to 0.\\n\\n# Example 1\\n![image](https://assets.leetcode.com/users/images/36d317a9-d6cd-409a-b3c6-6a9f5cb1daf9_1610524791.017491.png)\\nIf input is \\'226\\', initial count1 is 1 for [2], while initial count2 is 0 since we only have one character yet. In our loop, we move to next character \\'2\\'. \\'2\\' is not \\'0\\', so count1 = 1+ 0 =1, which corrosponds to [2, 2]. Two-digit composed of previous character and current character is \\'22\\', which is valid. Therefore, count2 = 1, which corrosponds to [22]. Simialiarly, we move to \\'6\\' and we get count1 = 2 and count2 = 1. As a result, the total count is 3.\\n\\n# Example 2\\n![image](https://assets.leetcode.com/users/images/72643f9a-e25b-40cc-8a4a-84314fb2d4c9_1610525081.638054.png)\\n\\nIf input is \\'12121\\', we use the same principle. At last, we get count1 = 5 and count2 =3. Therefore, the result is 8. The actual decode results at each step are listed in the figure above for references.\\n\\n# Example 3\\n![image](https://assets.leetcode.com/users/images/e16bbb20-d573-4c5c-bd6a-470d72f218d0_1610525249.3580933.png)\\n\\nIf input is \\'20419\\', when we are at the character \\'0\\', we set count1 to 0. When we are at the character \\'1\\', since \\'41\\' is not a valid two-digit, we set count2 to 0.\\n\\n# Example 4\\n![image](https://assets.leetcode.com/users/images/9711fdd4-88f2-4a59-a941-744ed4c5b88f_1610525354.404256.png)\\n\\nIf the two potential invalid cases occur at the same step, for example, \\'9012\\'. When we are at \\'0\\', count1 = 0. The previous character is \\'9\\', and \\'90\\' is not valid. Therefore, count2 = 0. In this case, all the following count1 and count2 are 0.\\n\\n\\nThis is my first post on leetcode. I would like to focus on the illustrated explanation of my thoughts instead of detailed codes. If this helps you or if you have any suggestion, feel free to leave a comment.\\n\\nThank you.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
      "voteCount": 227
    },
    {
      "name": "ListowelAdolwin",
      "year": 2023,
      "content": "you asked for it.\\nnow you have it.",
      "voteCount": 213
    },
    {
      "name": "msmshahnawaz",
      "year": 2023,
      "content": "I know what I have to do but I don\\'t know if I have the strength to do it",
      "voteCount": 147
    },
    {
      "name": "therealragesh",
      "year": 2023,
      "content": "Happy Christmas to everyone:)",
      "voteCount": 110
    },
    {
      "name": "JiayingGao",
      "year": 2023,
      "content": "Decode the string=\"135181825389192013119\", \"MERRYCHRISTMAS\" :)",
      "voteCount": 95
    },
    {
      "name": "yumeyao",
      "year": 2014,
      "content": "There is 1 way to decoding \"\", the decoding result is \"\".",
      "voteCount": 64
    },
    {
      "name": "lone17",
      "year": 2023,
      "content": "After solving this I realized that this was also the daily problem of 2/10/2022. Back then it took me hours to come up with a much more complicated solution, this time it only took minutes for the dp solution. So happy to see that practice does pay off. If you find it hard, you just need to keep going.",
      "voteCount": 35
    },
    {
      "name": "andhddn",
      "year": 2019,
      "content": "So which message has been encoded with \"0\" or with \"100\"? I suppose for something like \"909\" the answer is 0 too. No warnings or return values for invalid input were mentioned. Dislike.",
      "voteCount": 21
    }
  ]
}
