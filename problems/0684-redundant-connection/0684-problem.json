{
  "category": "",
  "id": "684",
  "name": "Redundant Connection",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/redundant-connection/",
  "slug": "redundant-connection",
  "isPaidOnly": false,
  "tags": [
    "Depth-First Search",
    "Breadth-First Search",
    "Union Find",
    "Graph"
  ],
  "similar_questions": [
    {
      "title": "Redundant Connection II",
      "difficulty": "Hard",
      "slug": "redundant-connection-ii"
    },
    {
      "title": "Accounts Merge",
      "difficulty": "Medium",
      "slug": "accounts-merge"
    },
    {
      "title": "Maximum Employees to Be Invited to a Meeting",
      "difficulty": "Hard",
      "slug": "maximum-employees-to-be-invited-to-a-meeting"
    },
    {
      "title": "Shortest Cycle in a Graph",
      "difficulty": "Hard",
      "slug": "shortest-cycle-in-a-graph"
    }
  ],
  "questionId": "684",
  "questionFrontendId": "684",
  "title": "Redundant Connection",
  "titleSlug": "redundant-connection",
  "content": "<p>In this problem, a tree is an <strong>undirected graph</strong> that is connected and has no cycles.</p>\n\n<p>You are given a graph that started as a tree with <code>n</code> nodes labeled from <code>1</code> to <code>n</code>, with one additional edge added. The added edge has two <strong>different</strong> vertices chosen from <code>1</code> to <code>n</code>, and was not an edge that already existed. The graph is represented as an array <code>edges</code> of length <code>n</code> where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that there is an edge between nodes <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code> in the graph.</p>\n\n<p>Return <em>an edge that can be removed so that the resulting graph is a tree of </em><code>n</code><em> nodes</em>. If there are multiple answers, return the answer that occurs last in the input.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/02/reduntant1-1-graph.jpg\" style=\"width: 222px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> edges = [[1,2],[1,3],[2,3]]\n<strong>Output:</strong> [2,3]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/02/reduntant1-2-graph.jpg\" style=\"width: 382px; height: 222px;\" />\n<pre>\n<strong>Input:</strong> edges = [[1,2],[2,3],[3,4],[1,4],[1,5]]\n<strong>Output:</strong> [1,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == edges.length</code></li>\n\t<li><code>3 &lt;= n &lt;= 1000</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= a<sub>i</sub> &lt; b<sub>i</sub> &lt;= edges.length</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>There are no repeated edges.</li>\n\t<li>The given graph is connected.</li>\n</ul>\n",
  "likes": 6985,
  "dislikes": 442,
  "stats": {
    "totalAccepted": "579.3K",
    "totalSubmission": "867.6K",
    "totalAcceptedRaw": 579263,
    "totalSubmissionRaw": 867629,
    "acRate": "66.8%"
  },
  "topicTags": [
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Union Find",
      "slug": "union-find"
    },
    {
      "name": "Graph",
      "slug": "graph"
    }
  ],
  "metaData": {
    "name": "findRedundantConnection",
    "params": [
      {
        "name": "edges",
        "type": "integer[][]"
      }
    ],
    "return": {
      "type": "integer[]"
    }
  },
  "discussion_posts": [
    {
      "name": "a4amado",
      "year": 2024,
      "content": "keep going champ, every  engineer with six figures salary was in you place someday.",
      "voteCount": 311
    },
    {
      "name": "alghoul",
      "year": 2024,
      "content": "The \"if there are multiple, choose the last in the input\" is such an annoying and unnecessary constraint.",
      "voteCount": 211
    },
    {
      "name": "swasta",
      "year": 2023,
      "content": "Great opportunity to learn and apply Union-Find data structure!",
      "voteCount": 203
    },
    {
      "name": "kathircs",
      "year": 2023,
      "content": "Learn union find and kruskal\\'s algorithm for minimum spanning Tree before attempting this question",
      "voteCount": 98
    },
    {
      "name": "adityakumar8068",
      "year": 2025,
      "content": "TESTCASES--------------->\n```\n[[1,2],[1,3],[2,3],[2,4]]\n[[1,5],[1,4],[3,4],[2,3],[1,2]]\n[[3,7],[1,4],[2,8],[1,6],[7,9],[6,10],[1,7],[2,3],[8,9],[5,9]]\n[[9,10],[5,8],[2,6],[1,5],[3,8],[4,9],[8,10],[4,10],[6,8],[7,9]]\n[[15,23],[6,8],[20,24],[3,17],[17,20],[8,15],[14,17],[6,17],[15,19],[16,22],[7,9],[8,22],[2,4],[4,11],[22,25],[6,24],[13,19],[15,18],[1,9],[4,9],[4,19],[5,10],[4,21],[4,12],[5,6]]\n[[15,24],[2,8],[19,21],[2,15],[16,25],[7,9],[3,24],[10,20],[13,20],[5,21],[7,11],[6,23],[7,16],[1,8],[17,20],[4,19],[11,22],[5,11],[1,16],[14,20],[1,4],[22,23],[12,20],[15,18],[12,16]]\n[[6,68],[58,74],[71,74],[29,31],[76,95],[40,51],[8,51],[21,99],[4,98],[15,27],[79,80],[65,73],[47,55],[7,65],[10,62],[14,29],[67,90],[20,34],[41,68],[66,88],[63,77],[11,91],[26,56],[54,83],[26,72],[42,60],[59,65],[76,78],[3,6],[13,42],[84,87],[48,53],[99,100],[11,96],[85,93],[5,87],[26,79],[42,94],[11,17],[24,98],[57,83],[55,78],[80,99],[33,70],[16,65],[13,44],[25,78],[9,85],[97,100],[15,58],[45,89],[86,90],[1,33],[32,62],[36,82],[26,46],[16,81],[39,49],[17,67],[38,47],[26,28],[5,37],[40,83],[45,86],[30,74],[74,99],[36,74],[34,93],[23,75],[33,64],[43,93],[27,35],[22,98],[20,78],[60,90],[32,42],[7,98],[52,79],[16,19],[61,79],[37,63],[10,12],[27,47],[14,69],[57,65],[41,77],[12,39],[75,96],[29,92],[29,88],[17,48],[32,50],[45,70],[25,69],[18,19],[20,68],[2,87],[49,77],[37,46],[10,81]]\n
      "voteCount": 51
    },
    {
      "name": "AldyPy",
      "year": 2024,
      "content": "This problem does not require any advanced data structures or algorithms such as disjoint set / union find. Ofc I don't know if solving the problem is trivial using those, but I find that Kahn's algorithm is the most easy and intuitive approach to this problem, as at it's core, this problem is purely just finding the cycle. Once you have found the vertices that form a cycle, finding the corresponding edge in `edges` is just a simple traversal!",
      "voteCount": 42
    },
    {
      "name": "Dyanjno123",
      "year": 2022,
      "content": "[[1,2],[1,3],[2,3]]\\n[[1,2],[2,3],[3,4],[1,4],[1,5]]\\n[[20,24],[3,17],[17,20],[8,15],[14,17],[6,17],[15,23],[6,8],[15,19],[16,22],[7,9],[8,22],[2,4],[4,11],[22,25],[6,24],[13,19],[15,18],[1,9],[4,9],[4,19],[5,10],[4,21],[4,12],[5,6]]\\n[[1,5],[1,4],[3,4],[2,3],[1,2]]\\n[[2,3],[2,5],[1,5],[2,4],[1,4]]",
      "voteCount": 38
    },
    {
      "name": "user4612MW",
      "year": 2025,
      "content": "\\uD83D\\uDCA1 Use $$Disjoint Set Union[DSU]$$ to efficiently handle graph connectivity problems, especially for detecting cycles in undirected graphs.  [-->](https://leetcode.com/problems/redundant-connection/solutions/6342024/on-c-0ms-beats-10000-disjoint-set-union-kdqhp)",
      "voteCount": 13
    },
    {
      "name": "khushi3",
      "year": 2023,
      "content": "Can somebody explain the first solution of the editorial? If there exists multiple solutions we are supposed to return the last edge in input , but the solution return the first redundant edge it finds",
      "voteCount": 13
    },
    {
      "name": "sourav12345singhpraval",
      "year": 2025,
      "content": "Interviewer : Do you like graph?\\nMe :  yes ofcourse , but if you ask cycle detection using DSU\\n\\uD83C\\uDF1E",
      "voteCount": 8
    }
  ]
}
