{
  "category": "",
  "id": "68",
  "name": "Text Justification",
  "difficulty": "Hard",
  "leetcode_url": "https://leetcode.com/problems/text-justification/",
  "slug": "text-justification",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "String",
    "Simulation"
  ],
  "similar_questions": [
    {
      "title": "Rearrange Spaces Between Words",
      "difficulty": "Easy",
      "slug": "rearrange-spaces-between-words"
    },
    {
      "title": "Divide a String Into Groups of Size k",
      "difficulty": "Easy",
      "slug": "divide-a-string-into-groups-of-size-k"
    },
    {
      "title": "Split Message Based on Limit",
      "difficulty": "Hard",
      "slug": "split-message-based-on-limit"
    }
  ],
  "questionId": "68",
  "questionFrontendId": "68",
  "title": "Text Justification",
  "titleSlug": "text-justification",
  "content": "<p>Given an array of strings <code>words</code> and a width <code>maxWidth</code>, format the text such that each line has exactly <code>maxWidth</code> characters and is fully (left and right) justified.</p>\n\n<p>You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces <code>&#39; &#39;</code> when necessary so that each line has exactly <code>maxWidth</code> characters.</p>\n\n<p>Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line does not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.</p>\n\n<p>For the last line of text, it should be left-justified, and no extra space is inserted between words.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A word is defined as a character sequence consisting of non-space characters only.</li>\n\t<li>Each word&#39;s length is guaranteed to be greater than <code>0</code> and not exceed <code>maxWidth</code>.</li>\n\t<li>The input array <code>words</code> contains at least one word.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;This&quot;, &quot;is&quot;, &quot;an&quot;, &quot;example&quot;, &quot;of&quot;, &quot;text&quot;, &quot;justification.&quot;], maxWidth = 16\n<strong>Output:</strong>\n[\n&nbsp; &nbsp;&quot;This &nbsp; &nbsp;is &nbsp; &nbsp;an&quot;,\n&nbsp; &nbsp;&quot;example &nbsp;of text&quot;,\n&nbsp; &nbsp;&quot;justification. &nbsp;&quot;\n]</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;What&quot;,&quot;must&quot;,&quot;be&quot;,&quot;acknowledgment&quot;,&quot;shall&quot;,&quot;be&quot;], maxWidth = 16\n<strong>Output:</strong>\n[\n&nbsp; &quot;What &nbsp; must &nbsp; be&quot;,\n&nbsp; &quot;acknowledgment &nbsp;&quot;,\n&nbsp; &quot;shall be &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]\n<strong>Explanation:</strong> Note that the last line is &quot;shall be    &quot; instead of &quot;shall     be&quot;, because the last line must be left-justified instead of fully-justified.\nNote that the second line is also left-justified because it contains only one word.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;Science&quot;,&quot;is&quot;,&quot;what&quot;,&quot;we&quot;,&quot;understand&quot;,&quot;well&quot;,&quot;enough&quot;,&quot;to&quot;,&quot;explain&quot;,&quot;to&quot;,&quot;a&quot;,&quot;computer.&quot;,&quot;Art&quot;,&quot;is&quot;,&quot;everything&quot;,&quot;else&quot;,&quot;we&quot;,&quot;do&quot;], maxWidth = 20\n<strong>Output:</strong>\n[\n&nbsp; &quot;Science &nbsp;is &nbsp;what we&quot;,\n  &quot;understand &nbsp; &nbsp; &nbsp;well&quot;,\n&nbsp; &quot;enough to explain to&quot;,\n&nbsp; &quot;a &nbsp;computer. &nbsp;Art is&quot;,\n&nbsp; &quot;everything &nbsp;else &nbsp;we&quot;,\n&nbsp; &quot;do &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\n\t<li><code>words[i]</code> consists of only English letters and symbols.</li>\n\t<li><code>1 &lt;= maxWidth &lt;= 100</code></li>\n\t<li><code>words[i].length &lt;= maxWidth</code></li>\n</ul>\n",
  "likes": 4295,
  "dislikes": 5215,
  "stats": {
    "totalAccepted": "573.6K",
    "totalSubmission": "1.2M",
    "totalAcceptedRaw": 573620,
    "totalSubmissionRaw": 1172273,
    "acRate": "48.9%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Simulation",
      "slug": "simulation"
    }
  ],
  "metaData": {
    "name": "fullJustify",
    "params": [
      {
        "name": "words",
        "type": "string[]"
      },
      {
        "name": "maxWidth",
        "type": "integer"
      }
    ],
    "return": {
      "type": "list<string>"
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": false,
        "name": "Capital One",
        "slug": "capital-one",
        "timesEncountered": 13
      },
      {
        "taggedByAdmin": false,
        "name": "TikTok",
        "slug": "tiktok",
        "timesEncountered": 12
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "ALS_Venky",
      "year": 2023,
      "content": "First let me justify my Life :(",
      "voteCount": 472
    },
    {
      "name": "graham2181",
      "year": 2015,
      "content": "In some of the texts that I have been able to find I see that this problem admits a dynamic programming solution that is superior to greedy solutions. (MSWord vs LATEX). I think, that to solve this question specifically (meaning something that OJ accepts) requires a greedy solution. \\n\\nAs far as I understand the \"idea\" of text justification is not to distribute spaces as evenly as possible within all the words of an individual line; But instead lower the overall cost of the way you justify text, which means that even though you may have some lines that have uneven spaces between words than others, but this lowers the overall cost of a justification in other lines. \\n\\nIn this question's description the correct answer is described as a very specific way to do text justification that seems to be not what the superior solution is. \\n\\nDo you think its right to actually post this question as an exercise at all? What does this question aim to teach as far as good text justification algorithms are concerned?",
      "voteCount": 170
    },
    {
      "name": "user5400vw",
      "year": 2023,
      "content": "the most humane hard ever",
      "voteCount": 105
    },
    {
      "name": "daringcalf",
      "year": 2023,
      "content": "Dudes, this is clearly not that easy. Although the logic is simple it still feels good to solve it. And the problem itself is practical and interesting. I\\'d upvote it.",
      "voteCount": 95
    },
    {
      "name": "cartesPerforees",
      "year": 2023,
      "content": "Why are there so many downvotes? Is it because the question is easier than its label?\\nOtherwise, I find it somewhat interesting. There\\'s not much thinking involved, ok, it\\'s mostly just carefully writing code following a very simple logic, but I feel that reflects what 99% of actual coding is. So, a bit different from other problems but not uninteresting to me",
      "voteCount": 88
    },
    {
      "name": "niralittle",
      "year": 2019,
      "content": "Is it because you need to carefully design your code? this does not seem to be a hard something to figure out, don\\'t even have to use a specific algorithm. Why \\'hard\\'?",
      "voteCount": 42
    },
    {
      "name": "anwendeng",
      "year": 2023,
      "content": "this question is marked as hard, very annoying for debugging until to get right answer \n```\n[\"My\",\"momma\",\"always\",\"said,\",\"\"Life\",\"was\",\"like\",\"a\",\"box\",\"of\",\"chocolates.\",\"You\",\"never\",\"know\",\"what\",\"you're\",\"gonna\",\"get.\"]\n20\n```\nAnalyze for this testcase\n```\n|My    momma   always| numWords=3 numSpaces=3 remainingSpaces=1\n|said, \"Life was like| numWords=4 numSpaces=1 remainingSpaces=0\n|a box of chocolates.| numWords=4 numSpaces=1 remainingSpaces=0\n|You  never know what| numWords=4 numSpaces=1 remainingSpaces=1\n|you're gonna get.   | no need for extra space\n```",
      "voteCount": 29
    },
    {
      "name": "ICalmPersonI",
      "year": 2024,
      "content": "\"Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line does not divide evenly between words, the extra spaces should be added to the leftmost words.\"\\n\\nThis is very confusing, so ignore it. Simply add one space to the right of each word until the sentence length is equal to ``maxWidth``.\\nMy God, it took me an hour to figure this out.",
      "voteCount": 25
    },
    {
      "name": "cgsv",
      "year": 2016,
      "content": "Just read more words until it exceeds the maxWidth and justify them.",
      "voteCount": 23
    },
    {
      "name": "likeabbas",
      "year": 2022,
      "content": "IMO this is a medium question ",
      "voteCount": 21
    }
  ]
}
