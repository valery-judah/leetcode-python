{
  "category": "",
  "id": "450",
  "name": "Delete Node in a BST",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/delete-node-in-a-bst/",
  "slug": "delete-node-in-a-bst",
  "isPaidOnly": false,
  "tags": [
    "Tree",
    "Binary Search Tree",
    "Binary Tree"
  ],
  "similar_questions": [
    {
      "title": "Split BST",
      "difficulty": "Medium",
      "slug": "split-bst"
    }
  ],
  "questionId": "450",
  "questionFrontendId": "450",
  "title": "Delete Node in a BST",
  "titleSlug": "delete-node-in-a-bst",
  "content": "<p>Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return <em>the <strong>root node reference</strong> (possibly updated) of the BST</em>.</p>\n\n<p>Basically, the deletion can be divided into two stages:</p>\n\n<ol>\n\t<li>Search for a node to remove.</li>\n\t<li>If the node is found, delete the node.</li>\n</ol>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg\" style=\"width: 800px; height: 214px;\" />\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 3\n<strong>Output:</strong> [5,4,6,2,null,null,7]\n<strong>Explanation:</strong> Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is [5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is [5,2,6,null,4,null,7] and it&#39;s also accepted.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg\" style=\"width: 350px; height: 255px;\" />\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 0\n<strong>Output:</strong> [5,3,6,2,4,null,7]\n<strong>Explanation:</strong> The tree does not contain a node with value = 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [], key = 0\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li>Each node has a <strong>unique</strong> value.</li>\n\t<li><code>root</code> is a valid binary search tree.</li>\n\t<li><code>-10<sup>5</sup> &lt;= key &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you solve it with time complexity <code>O(height of tree)</code>?</p>\n",
  "likes": 10020,
  "dislikes": 364,
  "stats": {
    "totalAccepted": "754.7K",
    "totalSubmission": "1.4M",
    "totalAcceptedRaw": 754737,
    "totalSubmissionRaw": 1410500,
    "acRate": "53.5%"
  },
  "topicTags": [
    {
      "name": "Tree",
      "slug": "tree"
    },
    {
      "name": "Binary Search Tree",
      "slug": "binary-search-tree"
    },
    {
      "name": "Binary Tree",
      "slug": "binary-tree"
    }
  ],
  "metaData": {
    "name": "deleteNode",
    "params": [
      {
        "name": "root",
        "type": "TreeNode",
        "dealloc": false
      },
      {
        "name": "key",
        "type": "integer"
      }
    ],
    "return": {
      "type": "TreeNode"
    }
  },
  "discussion_posts": [
    {
      "name": "stanmozolevskiy",
      "year": 2023,
      "content": "This is pretty hard exercise. I would rate it as hard.",
      "voteCount": 296
    },
    {
      "name": "BristolJ",
      "year": 2023,
      "content": "If this is Medium, I don\\'t want to see hard",
      "voteCount": 208
    },
    {
      "name": "lexsusku",
      "year": 2023,
      "content": "More complex examples would really come in handy",
      "voteCount": 162
    },
    {
      "name": "arsenijelalic80",
      "year": 2024,
      "content": "It its bullshit honestly, to solve it you need to look into crystal ball like a fortune teller to know exactly how LeetCode wants you to assemble the tree after removing the node. I solved it in 3 different ways, each way correct node was deleted, and all remaining nodes were in the tree, but LeetCode didnt like the order. The problem needs examples with bigger tree and it has to exactly define what node we should prefer for a swap.",
      "voteCount": 110
    },
    {
      "name": "Dane101",
      "year": 2024,
      "content": "I\\'m so embarrassed with the amount of if statements my code has ",
      "voteCount": 85
    },
    {
      "name": "dsapelnikov",
      "year": 2023,
      "content": "IMO the difficulty should be leveled to hard. It is possible to solve, but the problem is way harder that other medium problems related to trees.",
      "voteCount": 61
    },
    {
      "name": "mmm713",
      "year": 2016,
      "content": "There could be multiple ways to solve. Why OJ only check one possibility?\\ne.g., 2,1,3 tree, delete 2, I can have 1,null,3,   &&   3,1\\nBoth solutions are valid. \\nI think OJ needs to check the result is BST and doesn't have key to delete.\\n\\nOne simple solution scheme is just to substitute the target node with the left child's right most node. But it cannot pass OJ",
      "voteCount": 35
    },
    {
      "name": "linzhu1206",
      "year": 2018,
      "content": "To delete a node with both left and right children, one can either find the predecessor or the successor of that node, swap the values then delete the predecessor or successor. Apparently, the test cases only follow the successor way while using predecessor will give wrong answer, even visually still a BST after deletion. I had swtiched the solution then ACed.\n\nThe defective test cases start from the 81th.",
      "voteCount": 32
    },
    {
      "name": "prashantiyer2003",
      "year": 2024,
      "content": "An important detail that I think is missing in the description is that you do not need to swap the in-order successor or predecessor node with the node to be deleted, it suffices to only change the val field of the node being deleted with the val field of the successor or predecessor, and then delete the successor or predecessor.",
      "voteCount": 27
    },
    {
      "name": "Shevchenko_7",
      "year": 2016,
      "content": "Something went wrong in test case with input only \"[]\", should be both root and key.",
      "voteCount": 24
    }
  ]
}
