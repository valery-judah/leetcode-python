{
  "category": "",
  "id": "310",
  "name": "Minimum Height Trees",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/minimum-height-trees/",
  "slug": "minimum-height-trees",
  "isPaidOnly": false,
  "tags": [
    "Depth-First Search",
    "Breadth-First Search",
    "Graph",
    "Topological Sort"
  ],
  "similar_questions": [
    {
      "title": "Course Schedule",
      "difficulty": "Medium",
      "slug": "course-schedule"
    },
    {
      "title": "Course Schedule II",
      "difficulty": "Medium",
      "slug": "course-schedule-ii"
    },
    {
      "title": "Collect Coins in a Tree",
      "difficulty": "Hard",
      "slug": "collect-coins-in-a-tree"
    },
    {
      "title": "Count Pairs of Connectable Servers in a Weighted Tree Network",
      "difficulty": "Medium",
      "slug": "count-pairs-of-connectable-servers-in-a-weighted-tree-network"
    },
    {
      "title": "Find Minimum Diameter After Merging Two Trees",
      "difficulty": "Hard",
      "slug": "find-minimum-diameter-after-merging-two-trees"
    }
  ],
  "questionId": "310",
  "questionFrontendId": "310",
  "title": "Minimum Height Trees",
  "titleSlug": "minimum-height-trees",
  "content": "<p>A tree is an undirected graph in which any two vertices are connected by&nbsp;<i>exactly</i>&nbsp;one path. In other words, any connected graph without simple cycles is a tree.</p>\n\n<p>Given a tree of <code>n</code> nodes&nbsp;labelled from <code>0</code> to <code>n - 1</code>, and an array of&nbsp;<code>n - 1</code>&nbsp;<code>edges</code> where <code>edges[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that there is an undirected edge between the two nodes&nbsp;<code>a<sub>i</sub></code> and&nbsp;<code>b<sub>i</sub></code> in the tree,&nbsp;you can choose any node of the tree as the root. When you select a node <code>x</code> as the root, the result tree has height <code>h</code>. Among all possible rooted trees, those with minimum height (i.e. <code>min(h)</code>)&nbsp; are called <strong>minimum height trees</strong> (MHTs).</p>\n\n<p>Return <em>a list of all <strong>MHTs&#39;</strong> root labels</em>.&nbsp;You can return the answer in <strong>any order</strong>.</p>\n\n<p>The <strong>height</strong> of a rooted tree is the number of edges on the longest downward path between the root and a leaf.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/01/e1.jpg\" style=\"width: 800px; height: 213px;\" />\n<pre>\n<strong>Input:</strong> n = 4, edges = [[1,0],[1,2],[1,3]]\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> As shown, the height of the tree is 1 when the root is the node with label 1 which is the only MHT.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/01/e2.jpg\" style=\"width: 800px; height: 321px;\" />\n<pre>\n<strong>Input:</strong> n = 6, edges = [[3,0],[3,1],[3,2],[3,4],[5,4]]\n<strong>Output:</strong> [3,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>edges.length == n - 1</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; n</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>All the pairs <code>(a<sub>i</sub>, b<sub>i</sub>)</code> are distinct.</li>\n\t<li>The given input is <strong>guaranteed</strong> to be a tree and there will be <strong>no repeated</strong> edges.</li>\n</ul>\n",
  "likes": 8732,
  "dislikes": 410,
  "stats": {
    "totalAccepted": "448.4K",
    "totalSubmission": "1.1M",
    "totalAcceptedRaw": 448449,
    "totalSubmissionRaw": 1064149,
    "acRate": "42.1%"
  },
  "topicTags": [
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Graph",
      "slug": "graph"
    },
    {
      "name": "Topological Sort",
      "slug": "topological-sort"
    }
  ],
  "metaData": {
    "name": "findMinHeightTrees",
    "params": [
      {
        "name": "n",
        "type": "integer"
      },
      {
        "name": "edges",
        "type": "integer[][]"
      }
    ],
    "return": {
      "type": "list<integer>"
    }
  },
  "discussion_posts": [
    {
      "name": "Raghavagg",
      "year": 2023,
      "content": "just when i thought i have mastered graphs",
      "voteCount": 472
    },
    {
      "name": "aftabmk",
      "year": 2023,
      "content": "Internet : topo sort used for directed acyclical graph.\\nLeetcode: Now apply topo sort for undirected graph.",
      "voteCount": 170
    },
    {
      "name": "beautyofdeduction",
      "year": 2022,
      "content": "While this problem wasn\\'t easy, I found it to be very good practice for the following common tree tasks:\\n* finding the diameter of a tree\\n* finding the path between two vertices of a tree\\n* understanding that the root of the min-height tree is the \"center of gravity\"\\n\\nI realized it was a hard for me because I did not understand these tree fundamentals. I\\'m glad I persevered and learned.",
      "voteCount": 154
    },
    {
      "name": "SouthernHumor",
      "year": 2023,
      "content": "This should be a HARD problem, its not medium. very hard to know what algo to apply here.\\n",
      "voteCount": 132
    },
    {
      "name": "etanila",
      "year": 2024,
      "content": "Just when you think you are getting good at something, LeetCode never fails to prove otherwise.",
      "voteCount": 113
    },
    {
      "name": "Maksim_Leonov",
      "year": 2024,
      "content": "I\\'d rather look at trees in real life ",
      "voteCount": 85
    },
    {
      "name": "sk4142",
      "year": 2023,
      "content": "Hint: If the diameter\\'s length is even, there are exactly two MHT roots. If the diameter\\'s length is odd, there can only be one MHT root.\\n\\nWhy? Let\\'s say we have the diameter of the tree (length of longest path between any two nodes of the tree). If you root the tree at a node in the center of the diameter, it minimizes the height of the tree. This is because any path in the tree from the root to a leaf will be half the diameter or less.\\n\\nImagine the diameter as a stick. If you hold the stick by its end (i.e., root the tree at one end of the diameter), the stick\\'s length is maximized from your hand. If you hold the stick by its center, the length is minimized on either side. \\n\\nDepending on whether the diameter has an odd or even number of nodes:\\n\\n- Odd: There\\'s a single center node. If you root the tree at this node, you ensure the tree\\'s height is minimized.\\n- Even: There are two center nodes. Rooting the tree at either of these will result in the same minimum height. Thus, there are two possible MHTs.",
      "voteCount": 64
    },
    {
      "name": "shishirRsiam",
      "year": 2024,
      "content": "\\uD83D\\uDE4B\\u200D\\u2642\\uFE0F Those who comes early morning to solve daily challenge\\n",
      "voteCount": 63
    },
    {
      "name": "cenjian",
      "year": 2023,
      "content": "hint: delete those nodes with only one connection repeatly, the only 1 or 2 nodes left are the answer. ",
      "voteCount": 57
    },
    {
      "name": "ltbtb_rise",
      "year": 2020,
      "content": "I am just wondering how many of you have worked it out without seeing any hints or saw this problem before?",
      "voteCount": 37
    }
  ]
}
