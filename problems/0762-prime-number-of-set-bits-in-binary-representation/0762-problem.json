{
  "category": "",
  "id": "762",
  "name": "Prime Number of Set Bits in Binary Representation",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/",
  "slug": "prime-number-of-set-bits-in-binary-representation",
  "isPaidOnly": false,
  "tags": [
    "Math",
    "Bit Manipulation"
  ],
  "similar_questions": [
    {
      "title": "Number of 1 Bits",
      "difficulty": "Easy",
      "slug": "number-of-1-bits"
    }
  ],
  "questionId": "767",
  "questionFrontendId": "762",
  "title": "Prime Number of Set Bits in Binary Representation",
  "titleSlug": "prime-number-of-set-bits-in-binary-representation",
  "content": "<p>Given two integers <code>left</code> and <code>right</code>, return <em>the <strong>count</strong> of numbers in the <strong>inclusive</strong> range </em><code>[left, right]</code><em> having a <strong>prime number of set bits</strong> in their binary representation</em>.</p>\n\n<p>Recall that the <strong>number of set bits</strong> an integer has is the number of <code>1</code>&#39;s present when written in binary.</p>\n\n<ul>\n\t<li>For example, <code>21</code> written in binary is <code>10101</code>, which has <code>3</code> set bits.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> left = 6, right = 10\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\n6  -&gt; 110 (2 set bits, 2 is prime)\n7  -&gt; 111 (3 set bits, 3 is prime)\n8  -&gt; 1000 (1 set bit, 1 is not prime)\n9  -&gt; 1001 (2 set bits, 2 is prime)\n10 -&gt; 1010 (2 set bits, 2 is prime)\n4 numbers have a prime number of set bits.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> left = 10, right = 15\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\n10 -&gt; 1010 (2 set bits, 2 is prime)\n11 -&gt; 1011 (3 set bits, 3 is prime)\n12 -&gt; 1100 (2 set bits, 2 is prime)\n13 -&gt; 1101 (3 set bits, 3 is prime)\n14 -&gt; 1110 (3 set bits, 3 is prime)\n15 -&gt; 1111 (4 set bits, 4 is not prime)\n5 numbers have a prime number of set bits.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= left &lt;= right &lt;= 10<sup>6</sup></code></li>\n\t<li><code>0 &lt;= right - left &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
  "likes": 756,
  "dislikes": 513,
  "stats": {
    "totalAccepted": "125.4K",
    "totalSubmission": "175K",
    "totalAcceptedRaw": 125359,
    "totalSubmissionRaw": 175038,
    "acRate": "71.6%"
  },
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    },
    {
      "name": "Bit Manipulation",
      "slug": "bit-manipulation"
    }
  ],
  "metaData": {
    "name": "countPrimeSetBits",
    "params": [
      {
        "name": "left",
        "type": "integer"
      },
      {
        "name": "right",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "tripper",
      "year": 2023,
      "content": "Want to solve this problem without using built-in functions, then solve the below LeetCode Problems and **upvote** this comment later:\\n1. [204. Count Primes](https://leetcode.com/problems/count-primes/)\\n2. [191. Number of 1 Bits](https://leetcode.com/problems/number-of-1-bits)",
      "voteCount": 12
    },
    {
      "name": "SSHshadow2222",
      "year": 2023,
      "content": "The constraint `1 <= left <= right <= 10^6` tells you that the maximum number you can get is `10^6`.\\nThis number is represented as `1111 01000010 01000000` in binary, which means that the most amount of bits set (for this problem) is 19: `111 11111111 11111111`.\\nAll the prime numbers up to 19 (inclusive) are `[2, 3, 5, 7, 11, 13, 17, 19]`.\\nThe only thing left for you is to count the number of bits set for the numbers in the range.",
      "voteCount": 6
    },
    {
      "name": "Monu_prajapati",
      "year": 2025,
      "content": "This is second time today i am last in time Complexity.  \\nQ.construct rectangle  254ms.   and  \\nin this Q.     88ms",
      "voteCount": 1
    },
    {
      "name": "user0117vZ",
      "year": 2024,
      "content": "prime check using seive  C# solution\\npublic class Solution {\\n    \\n    public int CountPrimeSetBits(int left, int right) {\\n        int noOfPrimes = 0;\\n        Dictionary<int , int> bin = new Dictionary<int,int>{\\n            {0,0},\\n            {1,1}\\n        };\\n        bool[] seive = new bool[33];\\n        Array.Fill(seive,true);\\n        seive[0] = seive[1] = false;\\n        for(int i = 2; i<= 32;i++){\\n            for(int j = i * i ; j <=32;j = j + i ){\\n                if(j%i == 0){\\n                    seive[j] = false;\\n                }\\n            }\\n        }\\n        for(int i = left;i<= right; i++){\\n            int count = 0;\\n            int num = i;\\n            while(num != 0){\\n                \\n                count = count+bin[num&1];\\n             \\n                num = num >>> 1;\\n            }\\n            if(seive[count]){\\n                noOfPrimes++;\\n            }\\n        }\\n        return noOfPrimes;\\n    }\\n}",
      "voteCount": 1
    },
    {
      "name": "M1dn1ght",
      "year": 2023,
      "content": "Nice question,  Eratosthenes helped me solve this",
      "voteCount": 1
    },
    {
      "name": "Ineedchezzborger",
      "year": 2025,
      "content": "Sieve of Eratosthenes!? Never heard of it.",
      "voteCount": 0
    },
    {
      "name": "panzerschrek",
      "year": 2025,
      "content": "Pro tip: use `__builtin_popcount`.",
      "voteCount": 0
    },
    {
      "name": "ramgopaln",
      "year": 2025,
      "content": "Can anyone help me why my solution is getting TLE\\n\\n/**\\n * @param {number} left\\n * @param {number} right\\n * @return {number}\\n */\\nvar countPrimeSetBits = function(left, right) {\\n    let count=0;\\n    let primeArray=[2, 3, 5, 7, 11, 13, 17 , 19]\\n    for(let i=left;i<=right;i++){\\n            if(primeArray.includes(countNumberOf1InBinary(i))){\\n                count+=1;\\n            }\\n    }\\n};\\n\\nfunction countNumberOf1InBinary(num){\\n    let count=0;\\n    let mask=1;\\n    while(mask<=num){\\n        if(num&mask>0){\\n            count+=1\\n        }\\n    }\\n    return count;\\n}",
      "voteCount": 0
    },
    {
      "name": "pth55",
      "year": 2024,
      "content": " __builtin_popcount() may help you!",
      "voteCount": 0
    },
    {
      "name": "lovesbumblebees",
      "year": 2024,
      "content": "If you are looking for a challenge, there is an O(log^2(n)) solution that uses O(log^2(n)) extra memory for lookups. If you can solve it even more efficiently in time with similar space usage I would be very interested!  ",
      "voteCount": 0
    }
  ]
}
