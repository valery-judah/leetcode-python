{
  "category": "",
  "id": "312",
  "name": "Burst Balloons",
  "difficulty": "Hard",
  "leetcode_url": "https://leetcode.com/problems/burst-balloons/",
  "slug": "burst-balloons",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Dynamic Programming"
  ],
  "similar_questions": [
    {
      "title": "Minimum Cost to Merge Stones",
      "difficulty": "Hard",
      "slug": "minimum-cost-to-merge-stones"
    }
  ],
  "questionId": "312",
  "questionFrontendId": "312",
  "title": "Burst Balloons",
  "titleSlug": "burst-balloons",
  "content": "<p>You are given <code>n</code> balloons, indexed from <code>0</code> to <code>n - 1</code>. Each balloon is painted with a number on it represented by an array <code>nums</code>. You are asked to burst all the balloons.</p>\n\n<p>If you burst the <code>i<sup>th</sup></code> balloon, you will get <code>nums[i - 1] * nums[i] * nums[i + 1]</code> coins. If <code>i - 1</code> or <code>i + 1</code> goes out of bounds of the array, then treat it as if there is a balloon with a <code>1</code> painted on it.</p>\n\n<p>Return <em>the maximum coins you can collect by bursting the balloons wisely</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,5,8]\n<strong>Output:</strong> 167\n<strong>Explanation:</strong>\nnums = [3,1,5,8] --&gt; [3,5,8] --&gt; [3,8] --&gt; [8] --&gt; []\ncoins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,5]\n<strong>Output:</strong> 10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 300</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
  "likes": 9526,
  "dislikes": 274,
  "stats": {
    "totalAccepted": "389.5K",
    "totalSubmission": "627.8K",
    "totalAcceptedRaw": 389493,
    "totalSubmissionRaw": 627775,
    "acRate": "62.0%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "metaData": {
    "name": "maxCoins",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "wyp70627768",
      "year": 2018,
      "content": "I think they don\\'t really want to hire you if anyone ask you this question during interview",
      "voteCount": 700
    },
    {
      "name": "GREEsDY",
      "year": 2017,
      "content": "If you think of bursting a balloon as multiplying two adjacent matrices, then this problem is exactly the classical DP problem **Matrix-chain multiplication** found in section 15.2 in the book Introduction to Algorithms (2nd edition). \\n\\nFor example, given [3,5,8] and bursting 5, the number of coins you get is the number of scalar multiplications you need to do to multiply two matrices A[3\\\\*5] and B[5\\\\*8]. So in this example, the original problem is actually the same as given a matrix chain A[1\\\\*3]\\\\*B[3\\\\*5]\\\\*C[5\\\\*8]*D[8\\\\*1], fully parenthesize it so that the total number of scalar multiplications is maximized, although the orignal matrix-chain multiplication problem in the book asks to minimize it. Then you can see it clearly as a classical DP problem.",
      "voteCount": 567
    },
    {
      "name": "banty",
      "year": 2020,
      "content": "I am not saying that this problem is unsolvable, all I am saying that under a interview setup with only 45 minutes or so, and if you haven\\'t seen this problem before, you cannot solve this. Unless offcourse you are Errichto, Tourist or God.\\n",
      "voteCount": 178
    },
    {
      "name": "SeineAle",
      "year": 2023,
      "content": "starting the year with this. World\\'s a cruel place :(\\n",
      "voteCount": 55
    },
    {
      "name": "Kururuken",
      "year": 2019,
      "content": "I guess hardly anyone can do it themselves so people just go directly to the solution...(I tried to solve it myself but after an hour\\'s work in vain I just gave up...)",
      "voteCount": 39
    },
    {
      "name": "huangdachuan",
      "year": 2016,
      "content": "It might be easier to look at this problem in a \"building balloon\" way, instead of \"bursting balloon\" way. I got this after being inspired by \"last balloon to burst\" solution.\\n\\nSuppose all balloons < i are already built, and all balloons > j are built. Then we need to find the first balloon to build between i and j (inclusive). So dp[i, j] = nums[i - 1] * nums[k] * nums[j + 1] + dp[i, k - 1] + dp[k + 1, j].",
      "voteCount": 32
    },
    {
      "name": "c_jain",
      "year": 2019,
      "content": "While solving solution for a subproblem, say A[0,...,n], **Think it like this and ask yourself a question**:\\n\\n**\"which balloon should I burst at last to maximize the result\".** \\n\\nNow suppose you picked balloon at index i to be burst at last then you will successfully reach to two new independent states, i.e, State1 = A[0,...,i-1] and, state2 =  A[i+1,...,n]. Now simply fetch result of these states from DP and store this **local result** as dp[0][i-1] + A[subProblem\\'s starts - 1] * A[i] * A[subProblems\\'s end + 1] + dp[i+1][n], and finally find maximum of these **local results** for this range or sub problem.\\n \\n // \"subProblem\\'s starts - 1\" will be \\'-1\\' in this case\\n // \"subProblems\\'s end + 1\" will be \\'n\\' in this case\\n \\n **Why above mentioned 2 states are independent?**\\n Because whenever we decide last balloon for a range then we need adjacent balloons of that range. And you will see that the adjacent balloons becomes fixed whenever we decide last balloon to be burst in a range or sub problem adn divide it in two parts left sub problem and right sub problem. Therefore, adjacent balloons of, say, left range no longer depends on any balloons in the right range.",
      "voteCount": 20
    },
    {
      "name": "Maksadbek",
      "year": 2020,
      "content": "https://medium.com/@resiloc/how-to-solve-the-burst-balloons-problem-like-a-piece-of-cake-6121f365b1f",
      "voteCount": 20
    },
    {
      "name": "LeetCode",
      "year": 2022,
      "content": "This problem is the Daily LeetCoding Challenge for January, Day 1.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **\ud83d\udccc Do you want to learn the problem thoroughly?**\n  Read [**\u2b50  LeetCode Official Solution\u2b50**](https://leetcode.com/problems/burst-balloons/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 3 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming (Naive)\n\n  \n**Approach 2:** Dynamic Programming (Top-Down)\n\n  \n**Approach 3:** Dynamic Programming (Bottom-Up)\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
      "voteCount": 20
    },
    {
      "name": "edwincmj",
      "year": 2024,
      "content": "After 3 attempts over 3 weeks of sitting down for 1+ hour on this problem, with reference to solution, i have finally submitted an accepted solution (cant say i\\'ve solved coz i looked at solution). The intuition was highly unintuitive, felt like i was twisting my brain around and inside out just to understand the intuition to it. Anyone struggled like hell with this problem as well?",
      "voteCount": 18
    }
  ]
}
