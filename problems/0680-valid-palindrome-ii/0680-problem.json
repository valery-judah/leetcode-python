{
  "category": "",
  "id": "680",
  "name": "Valid Palindrome II",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/valid-palindrome-ii/",
  "slug": "valid-palindrome-ii",
  "isPaidOnly": false,
  "tags": [
    "Two Pointers",
    "String",
    "Greedy"
  ],
  "similar_questions": [
    {
      "title": "Valid Palindrome",
      "difficulty": "Easy",
      "slug": "valid-palindrome"
    },
    {
      "title": "Valid Palindrome III",
      "difficulty": "Hard",
      "slug": "valid-palindrome-iii"
    },
    {
      "title": "Valid Palindrome IV",
      "difficulty": "Medium",
      "slug": "valid-palindrome-iv"
    }
  ],
  "questionId": "680",
  "questionFrontendId": "680",
  "title": "Valid Palindrome II",
  "titleSlug": "valid-palindrome-ii",
  "content": "<p>Given a string <code>s</code>, return <code>true</code> <em>if the </em><code>s</code><em> can be palindrome after deleting <strong>at most one</strong> character from it</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aba&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abca&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You could delete the character &#39;c&#39;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abc&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n",
  "likes": 8719,
  "dislikes": 499,
  "stats": {
    "totalAccepted": "1M",
    "totalSubmission": "2.4M",
    "totalAcceptedRaw": 1022146,
    "totalSubmissionRaw": 2356685,
    "acRate": "43.4%"
  },
  "topicTags": [
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Greedy",
      "slug": "greedy"
    }
  ],
  "metaData": {
    "name": "validPalindrome",
    "params": [
      {
        "name": "s",
        "type": "string"
      }
    ],
    "return": {
      "type": "boolean"
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": true,
        "name": "Meta",
        "slug": "facebook",
        "timesEncountered": 194
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "Bulbasaur2000",
      "year": 2021,
      "content": "**Firstly, donot worry if you are not able to understand the problem or come up with a valid logic. Even I too get stuck a lot in different problems. As long as you understand the concept, the logic after taking help, and able to code it, you are a champion **\\n\\nLogic: For this types of String Palindrome problems, its always better to start thinking using two pointer approach. The following approach is based on that concept.\\n\\nApproach: \\n1. Firstly check three basic corner cases of string length=0, string length=1 and string length=2. Return accordingly.\\n2. Use an extra O(n) space to store the array, reverse it and directly check if its pallindrome or not. \\n\\tThese two approaches will save a lot of time.\\n3. Using the concept of two pointers, start traversing the string character by character from front and from the\\n    back. If all the the characters comes up to be same, your string must be pallindrome.\\n4. If two characters comes up as not the same, try checking neglecting both the character one at a time, and check\\n    if the rest of available string is pallindrome or not **(clue: use another function for this checking part)**. \\n5. If it comes true even after neglecting any one of the unmatched character. Your string must be pallindrome. Else \\n   it cannot be a pallindrome.\\n   \\nNow code it. Happy Hunting!\\n**  If you find my solution helpful, kindly upvote my answer. It will help others and also motivate me.**\\n",
      "voteCount": 514
    },
    {
      "name": "cjatherton19",
      "year": 2023,
      "content": "I think this is a more of medium. So don\\'t be discouraged",
      "voteCount": 297
    },
    {
      "name": "sanyam0410",
      "year": 2023,
      "content": "  `462 Failed GANG`\\n\\n`Consider this : \"deddde\"`\\nHere if you you delete last \"e\" without even checking for deletion of first \"d\", the answer will be returned false. now if you delete first \"d\", you will get true. So here you have to check palindrome for both the deletions and then whichever gives true, we consider that as answer.\\n\\nCreate separate function for normal isPalindrome and then call for both the possibilities.\\n\\nUPVOTE if helped. ",
      "voteCount": 106
    },
    {
      "name": "leonid-lovsky",
      "year": 2024,
      "content": "It should be medium",
      "voteCount": 99
    },
    {
      "name": "busman214",
      "year": 2024,
      "content": "I think this is not a easy one...\\n\\nThree steps to solve this problem:\\nusing two pointer: l=0, r=size length-1\\n1. if s[l]=s[r], l++,r--\\n2. if s[l] != s[r] ,check if string from index l to r-1(neglecting s[r]) or string from index l+1 to r(neglecting s[l]) is palindrom.\\n3. If both of them are not palindrom, return false. Otherwise, return true.\\n",
      "voteCount": 35
    },
    {
      "name": "avuzi",
      "year": 2023,
      "content": "Testcase \"ebcbbececabbacecbbcbe\" made me mad for a few minutes). But then I realized what is the problem.\ne b c b b ->e c e c a b b a c e ->c b b c b e\n'e' must be skipped and not 'c'",
      "voteCount": 34
    },
    {
      "name": "Mukesh_Rawat",
      "year": 2024,
      "content": "I think the most important test case got missed \"thisisamediumanyday\". ",
      "voteCount": 32
    },
    {
      "name": "milez",
      "year": 2021,
      "content": "How many of you were able to solve 458 out of 500, but ended up having to debug this string with length 100?\\nMany of us might try to simply check only once if `s[i] = s[j-1] or s[i+1] = s[j]` and think that would be enough. It is only with this edge test case do we notice that is not the case.\\n\\nRather than debugging it, I had to search for (458 out of 500) and luckily found one post that was in the same situation",
      "voteCount": 18
    },
    {
      "name": "cbb011",
      "year": 2019,
      "content": "If one wanted to delete c, wouldn\\'t \"ab\" create a palindrome?",
      "voteCount": 18
    },
    {
      "name": "LeetCode",
      "year": 2022,
      "content": "This problem is the Daily LeetCoding Challenge for April, Day 2.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **\ud83d\udccc Do you want to learn the problem thoroughly?**\n  Read [**\u2b50  LeetCode Official Solution\u2b50**](https://leetcode.com/problems/valid-palindrome-ii/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain this 1 approach in the official solution</summary>\n\n  \n**Approach 1:** Two Pointers\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
      "voteCount": 16
    }
  ]
}
