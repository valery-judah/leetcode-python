{
  "category": "",
  "id": "1023",
  "name": "Camelcase Matching",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/camelcase-matching/",
  "slug": "camelcase-matching",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Two Pointers",
    "String",
    "Trie",
    "String Matching"
  ],
  "similar_questions": [],
  "questionId": "1080",
  "questionFrontendId": "1023",
  "title": "Camelcase Matching",
  "titleSlug": "camelcase-matching",
  "content": "<p>Given an array of strings <code>queries</code> and a string <code>pattern</code>, return a boolean array <code>answer</code> where <code>answer[i]</code> is <code>true</code> if <code>queries[i]</code> matches <code>pattern</code>, and <code>false</code> otherwise.</p>\n\n<p>A query word <code>queries[i]</code> matches <code>pattern</code> if you can insert lowercase English letters into the pattern so that it equals the query. You may insert a character at any position in pattern or you may choose not to insert any characters <strong>at all</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> queries = [&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;], pattern = &quot;FB&quot;\n<strong>Output:</strong> [true,false,true,true,false]\n<strong>Explanation:</strong> &quot;FooBar&quot; can be generated like this &quot;F&quot; + &quot;oo&quot; + &quot;B&quot; + &quot;ar&quot;.\n&quot;FootBall&quot; can be generated like this &quot;F&quot; + &quot;oot&quot; + &quot;B&quot; + &quot;all&quot;.\n&quot;FrameBuffer&quot; can be generated like this &quot;F&quot; + &quot;rame&quot; + &quot;B&quot; + &quot;uffer&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> queries = [&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;], pattern = &quot;FoBa&quot;\n<strong>Output:</strong> [true,false,true,false,false]\n<strong>Explanation:</strong> &quot;FooBar&quot; can be generated like this &quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot;.\n&quot;FootBall&quot; can be generated like this &quot;Fo&quot; + &quot;ot&quot; + &quot;Ba&quot; + &quot;ll&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> queries = [&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;], pattern = &quot;FoBaT&quot;\n<strong>Output:</strong> [false,true,false,false,false]\n<strong>Explanation:</strong> &quot;FooBarTest&quot; can be generated like this &quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot; + &quot;T&quot; + &quot;est&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= pattern.length, queries.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= queries[i].length &lt;= 100</code></li>\n\t<li><code>queries[i]</code> and <code>pattern</code> consist of English letters.</li>\n</ul>\n",
  "likes": 962,
  "dislikes": 346,
  "stats": {
    "totalAccepted": "59.7K",
    "totalSubmission": "92.9K",
    "totalAcceptedRaw": 59731,
    "totalSubmissionRaw": 92939,
    "acRate": "64.3%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Trie",
      "slug": "trie"
    },
    {
      "name": "String Matching",
      "slug": "string-matching"
    }
  ],
  "metaData": {
    "name": "camelMatch",
    "params": [
      {
        "name": "queries",
        "type": "string[]"
      },
      {
        "name": "pattern",
        "type": "string"
      }
    ],
    "return": {
      "type": "list<boolean>"
    },
    "manual": false
  },
  "discussion_posts": [
    {
      "name": "liangtian_liam",
      "year": 2023,
      "content": "> You may insert each character at any position and you may not insert any characters\\n\\n???",
      "voteCount": 48
    },
    {
      "name": "NeosDeus",
      "year": 2023,
      "content": "plz fix the problem description ",
      "voteCount": 30
    },
    {
      "name": "sarpalmadhav",
      "year": 2024,
      "content": "You there! Yes, you - here - Listen to me! THERE IS NOTHING WORTH LEARNING HERE. This stupid problem is a sheer waste of time. Skip this one and solve some other problem that is worth solving. The time that is lost is lost, don\\'t waste more, just leave.",
      "voteCount": 17
    },
    {
      "name": "ya17kun",
      "year": 2023,
      "content": "bad description. ",
      "voteCount": 8
    },
    {
      "name": "Fangzhou233",
      "year": 2023,
      "content": "The last sentence of the description should be: \\nYou can insert lowercase character at any position and you should not remove any characters. \\nSo \\npattern \"Foba\" will match: \"FooBar\", \"FaoBra\"; will not match: \"FoBaFoBa\", \"FooBarTest\", \"Foba\"",
      "voteCount": 7
    },
    {
      "name": "austinpatton",
      "year": 2024,
      "content": "This problem is tagged as a trie problem, but I don\\'t see how a trie can be used to optimize the approach over the straightforward two pointer approach and I don\\'t see any posted solutions that do this either. Am I crazy or is the trie tag here incorrect?",
      "voteCount": 4
    },
    {
      "name": "sadd_Aatmaa",
      "year": 2024,
      "content": "34/38  \\uD83E\\uDD72\\uD83E\\uDD72",
      "voteCount": 4
    },
    {
      "name": "singhpratapvarang",
      "year": 2025,
      "content": "\\uD83E\\uDDD9\\u200D\\u2642\\uFE0F Yoda\\'s Wisdom : \\u201CMatch the pattern, one capital at a time. Lowercase letters, let them pass.\\u201D\\n\\nhttps://leetcode.com/problems/camelcase-matching/solutions/6715709/camelcase-matching-hidden-the-pattern-is-wt29",
      "voteCount": 2
    },
    {
      "name": "bummygummy",
      "year": 2024,
      "content": "\"You may insert each character at any position and you may not insert any characters.\"\nHigh on meth while typing this eh?",
      "voteCount": 2
    },
    {
      "name": "kingkong_54",
      "year": 2024,
      "content": "useful test case\\nqueries = `[\"uAxaqlzahfialcezsLfj\",\"cAqlzyahaslccezssLfj\",\"AqlezahjarflcezshLfj\",\"AqlzofahaplcejuzsLfj\",\"tAqlzahavslcezsLwzfj\",\"AqlzahalcerrzsLpfonj\",\"AqlzahalceaczdsosLfj\",\"eAqlzbxahalcezelsLfj\"]`\\n\\npattern  = `\"AqlzahalcezsLfj\"`",
      "voteCount": 2
    }
  ]
}
