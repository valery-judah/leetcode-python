{
  "category": "",
  "id": "225",
  "name": "Implement Stack using Queues",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/implement-stack-using-queues/",
  "slug": "implement-stack-using-queues",
  "isPaidOnly": false,
  "tags": [
    "Stack",
    "Design",
    "Queue"
  ],
  "similar_questions": [
    {
      "title": "Implement Queue using Stacks",
      "difficulty": "Easy",
      "slug": "implement-queue-using-stacks"
    }
  ],
  "questionId": "225",
  "questionFrontendId": "225",
  "title": "Implement Stack using Queues",
  "titleSlug": "implement-stack-using-queues",
  "content": "<p>Implement a last-in-first-out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal stack (<code>push</code>, <code>top</code>, <code>pop</code>, and <code>empty</code>).</p>\n\n<p>Implement the <code>MyStack</code> class:</p>\n\n<ul>\n\t<li><code>void push(int x)</code> Pushes element x to the top of the stack.</li>\n\t<li><code>int pop()</code> Removes the element on the top of the stack and returns it.</li>\n\t<li><code>int top()</code> Returns the element on the top of the stack.</li>\n\t<li><code>boolean empty()</code> Returns <code>true</code> if the stack is empty, <code>false</code> otherwise.</li>\n</ul>\n\n<p><b>Notes:</b></p>\n\n<ul>\n\t<li>You must use <strong>only</strong> standard operations of a queue, which means that only <code>push to back</code>, <code>peek/pop from front</code>, <code>size</code> and <code>is empty</code> operations are valid.</li>\n\t<li>Depending on your language, the queue may not be supported natively. You may simulate a queue using a list or deque (double-ended queue) as long as you use only a queue&#39;s standard operations.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyStack&quot;, &quot;push&quot;, &quot;push&quot;, &quot;top&quot;, &quot;pop&quot;, &quot;empty&quot;]\n[[], [1], [2], [], [], []]\n<strong>Output</strong>\n[null, null, null, 2, 2, false]\n\n<strong>Explanation</strong>\nMyStack myStack = new MyStack();\nmyStack.push(1);\nmyStack.push(2);\nmyStack.top(); // return 2\nmyStack.pop(); // return 2\nmyStack.empty(); // return False\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= x &lt;= 9</code></li>\n\t<li>At most <code>100</code> calls will be made to <code>push</code>, <code>pop</code>, <code>top</code>, and <code>empty</code>.</li>\n\t<li>All the calls to <code>pop</code> and <code>top</code> are valid.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow-up:</strong> Can you implement the stack using only one queue?</p>\n",
  "likes": 6662,
  "dislikes": 1267,
  "stats": {
    "totalAccepted": "985.8K",
    "totalSubmission": "1.4M",
    "totalAcceptedRaw": 985846,
    "totalSubmissionRaw": 1445815,
    "acRate": "68.2%"
  },
  "topicTags": [
    {
      "name": "Stack",
      "slug": "stack"
    },
    {
      "name": "Design",
      "slug": "design"
    },
    {
      "name": "Queue",
      "slug": "queue"
    }
  ],
  "metaData": {
    "classname": "MyStack",
    "constructor": {
      "params": []
    },
    "methods": [
      {
        "params": [
          {
            "type": "integer",
            "name": "x"
          }
        ],
        "name": "push",
        "return": {
          "type": "void"
        }
      },
      {
        "params": [],
        "return": {
          "type": "integer"
        },
        "name": "pop"
      },
      {
        "params": [],
        "name": "top",
        "return": {
          "type": "integer"
        }
      },
      {
        "params": [],
        "name": "empty",
        "return": {
          "type": "boolean"
        }
      }
    ],
    "return": {
      "type": "boolean"
    },
    "systemdesign": true
  },
  "discussion_posts": [
    {
      "name": "z3eg",
      "year": 2023,
      "content": "tomorrow problem of the day: implement set using lists. ",
      "voteCount": 102
    },
    {
      "name": "TH0OO",
      "year": 2015,
      "content": "This question is weird.\\nUsing queue to implement stack. What's the point?\\nWhy not just use array?\\nIt's like training a fish to run, training a dog to swim...so awkward.",
      "voteCount": 102
    },
    {
      "name": "stevePerry36",
      "year": 2022,
      "content": "These problems should try to teach and/or exercise useful techniques. This does the neither. If anything, it does the opposite.",
      "voteCount": 66
    },
    {
      "name": "EXLsunshine",
      "year": 2015,
      "content": "I found that almost all solutions are either push time complexity is O(n) every time, or pop time complexity is  O(n) every time.\\n\\nI wunder is there a faster solution that requires less time complexity in average?",
      "voteCount": 43
    },
    {
      "name": "jl4930",
      "year": 2018,
      "content": "Too Simple, A little bit naive.",
      "voteCount": 14
    },
    {
      "name": "Ebad1001",
      "year": 2023,
      "content": "##### This can be done in two ways :\\n- one where `push()` takes O(1) time & `pop()` takes O(N) time\\n- one where `push()` takes O(N) time & `pop()` takes O(1) time",
      "voteCount": 11
    },
    {
      "name": "ALS_Venky",
      "year": 2023,
      "content": "Let this be a Stack week, so that i can revise Stacks.\nBy the way, we can also implement stack with one queue.",
      "voteCount": 11
    },
    {
      "name": "532124670",
      "year": 2023,
      "content": "stupid problem",
      "voteCount": 10
    },
    {
      "name": "anwendeng",
      "year": 2023,
      "content": "Can use priority_queue? or deque?  That's an exercise to practice queue & stack!  Another one\n[232. Implement Queue using Stacks](https://leetcode.com/problems/implement-queue-using-stacks/) ",
      "voteCount": 7
    },
    {
      "name": "LeetCode",
      "year": 2022,
      "content": "This problem is the Daily LeetCoding Challenge for May, Day 5.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **üìå Do you want to learn the problem thoroughly?**\n  Read [**‚≠ê  LeetCode Official Solution‚≠ê**](https://leetcode.com/problems/implement-stack-using-queues/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 3 approaches in the official solution</summary>\n\n  \n**Approach 1:** (Two Queues, push - $$O(1)$$, pop $$O(n)$$ )\n\n  \n**Approach 2:** (Two Queues, push - $$O(n)$$, pop $$O(1)$$ )\n\n  \n**Approach 3:** (One Queue, push - $$O(n)$$, pop $$O(1)$$ )\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
      "voteCount": 6
    }
  ]
}
