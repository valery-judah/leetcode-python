{
  "category": "",
  "id": "1971",
  "name": "Find if Path Exists in Graph",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/find-if-path-exists-in-graph/",
  "slug": "find-if-path-exists-in-graph",
  "isPaidOnly": false,
  "tags": [
    "Depth-First Search",
    "Breadth-First Search",
    "Union Find",
    "Graph"
  ],
  "similar_questions": [
    {
      "title": "Valid Arrangement of Pairs",
      "difficulty": "Hard",
      "slug": "valid-arrangement-of-pairs"
    },
    {
      "title": "Paths in Maze That Lead to Same Room",
      "difficulty": "Medium",
      "slug": "paths-in-maze-that-lead-to-same-room"
    }
  ],
  "questionId": "2121",
  "questionFrontendId": "1971",
  "title": "Find if Path Exists in Graph",
  "titleSlug": "find-if-path-exists-in-graph",
  "content": "<p>There is a <strong>bi-directional</strong> graph with <code>n</code> vertices, where each vertex is labeled from <code>0</code> to <code>n - 1</code> (<strong>inclusive</strong>). The edges in the graph are represented as a 2D integer array <code>edges</code>, where each <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code> denotes a bi-directional edge between vertex <code>u<sub>i</sub></code> and vertex <code>v<sub>i</sub></code>. Every vertex pair is connected by <strong>at most one</strong> edge, and no vertex has an edge to itself.</p>\n\n<p>You want to determine if there is a <strong>valid path</strong> that exists from vertex <code>source</code> to vertex <code>destination</code>.</p>\n\n<p>Given <code>edges</code> and the integers <code>n</code>, <code>source</code>, and <code>destination</code>, return <code>true</code><em> if there is a <strong>valid path</strong> from </em><code>source</code><em> to </em><code>destination</code><em>, or </em><code>false</code><em> otherwise</em><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/14/validpath-ex1.png\" style=\"width: 141px; height: 121px;\" />\n<pre>\n<strong>Input:</strong> n = 3, edges = [[0,1],[1,2],[2,0]], source = 0, destination = 2\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There are two paths from vertex 0 to vertex 2:\n- 0 &rarr; 1 &rarr; 2\n- 0 &rarr; 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/14/validpath-ex2.png\" style=\"width: 281px; height: 141px;\" />\n<pre>\n<strong>Input:</strong> n = 6, edges = [[0,1],[0,2],[3,5],[5,4],[4,3]], source = 0, destination = 5\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no path from vertex 0 to vertex 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= edges.length &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>0 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n - 1</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li><code>0 &lt;= source, destination &lt;= n - 1</code></li>\n\t<li>There are no duplicate edges.</li>\n\t<li>There are no self edges.</li>\n</ul>\n",
  "likes": 4164,
  "dislikes": 242,
  "stats": {
    "totalAccepted": "599.1K",
    "totalSubmission": "1.1M",
    "totalAcceptedRaw": 599061,
    "totalSubmissionRaw": 1103825,
    "acRate": "54.3%"
  },
  "topicTags": [
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Union Find",
      "slug": "union-find"
    },
    {
      "name": "Graph",
      "slug": "graph"
    }
  ],
  "metaData": {
    "name": "validPath",
    "params": [
      {
        "name": "n",
        "type": "integer"
      },
      {
        "type": "integer[][]",
        "name": "edges"
      },
      {
        "type": "integer",
        "name": "source"
      },
      {
        "type": "integer",
        "name": "destination"
      }
    ],
    "return": {
      "type": "boolean"
    }
  },
  "discussion_posts": [
    {
      "name": "durjoyovi76",
      "year": 2022,
      "content": "Every time i come to Discussion tab ,i see some people sharing their solution code ,WHY?\\nThis is not a solution tab.There is a dedicated tab for sharing solution code,\\nPlease stop this,so that we can improve ourselves through discussion.",
      "voteCount": 319
    },
    {
      "name": "YehudisK",
      "year": 2021,
      "content": "This is not an Easy problem. It should be Medium",
      "voteCount": 310
    },
    {
      "name": "julenn",
      "year": 2023,
      "content": "Who else missed the `[]`, `0`, `0` test case?",
      "voteCount": 129
    },
    {
      "name": "kameshkotwani",
      "year": 2022,
      "content": "Can\\'t get over the fact that this question is marked as \"EASY\". ",
      "voteCount": 108
    },
    {
      "name": "jay-dharamshi",
      "year": 2022,
      "content": "For anyone who has studied Graphs recently this would be an easy problem if you understand graph traversal algorithms like DFS and BFS which is the intuitive approach to solve this problem. To take your learnings one step further, see if you can apply the concept of Disjoint Set Union to this problem. Happy Learning!!",
      "voteCount": 82
    },
    {
      "name": "Mukesh_Rawat",
      "year": 2024,
      "content": "if this was easy, then I am Mango. ",
      "voteCount": 39
    },
    {
      "name": "prakhar-singh",
      "year": 2022,
      "content": "nearly spent the whole day in this kind of easy problem",
      "voteCount": 37
    },
    {
      "name": "anwendeng",
      "year": 2024,
      "content": "Why is a graphical theoretical question marked as easy?\\nIt needs time to implement.\\nTry UnionFind\\nHave a nice day!",
      "voteCount": 27
    },
    {
      "name": "disturbedbrown1",
      "year": 2022,
      "content": "Easy? \\uD83E\\uDD14",
      "voteCount": 26
    },
    {
      "name": "StefanelStan",
      "year": 2024,
      "content": "I would say it\\'s a more of a medium than an easy one.\\nThis coming from someone who solved 1500 problems on leetcode.",
      "voteCount": 23
    }
  ]
}
