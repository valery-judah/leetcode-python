{
  "category": "",
  "id": "145",
  "name": "Binary Tree Postorder Traversal",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/binary-tree-postorder-traversal/",
  "slug": "binary-tree-postorder-traversal",
  "isPaidOnly": false,
  "tags": [
    "Stack",
    "Tree",
    "Depth-First Search",
    "Binary Tree"
  ],
  "similar_questions": [
    {
      "title": "Binary Tree Inorder Traversal",
      "difficulty": "Easy",
      "slug": "binary-tree-inorder-traversal"
    },
    {
      "title": "N-ary Tree Postorder Traversal",
      "difficulty": "Easy",
      "slug": "n-ary-tree-postorder-traversal"
    },
    {
      "title": "Minimum Fuel Cost to Report to the Capital",
      "difficulty": "Medium",
      "slug": "minimum-fuel-cost-to-report-to-the-capital"
    }
  ],
  "questionId": "145",
  "questionFrontendId": "145",
  "title": "Binary Tree Postorder Traversal",
  "titleSlug": "binary-tree-postorder-traversal",
  "content": "<p>Given the <code>root</code> of a&nbsp;binary tree, return <em>the postorder traversal of its nodes&#39; values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,null,2,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[3,2,1]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/screenshot-2024-08-29-202743.png\" style=\"width: 200px; height: 264px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,2,3,4,5,null,8,null,null,6,7,9]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[4,6,7,5,2,9,8,3,1]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/tree_2.png\" style=\"width: 350px; height: 286px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = []</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1]</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of the nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?",
  "likes": 7547,
  "dislikes": 222,
  "stats": {
    "totalAccepted": "1.7M",
    "totalSubmission": "2.3M",
    "totalAcceptedRaw": 1745581,
    "totalSubmissionRaw": 2281085,
    "acRate": "76.5%"
  },
  "topicTags": [
    {
      "name": "Stack",
      "slug": "stack"
    },
    {
      "name": "Tree",
      "slug": "tree"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Binary Tree",
      "slug": "binary-tree"
    }
  ],
  "metaData": {
    "name": "postorderTraversal",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "list<integer>",
      "dealloc": true
    }
  },
  "discussion_posts": [
    {
      "name": "lokeshE348",
      "year": 2024,
      "content": "Yeah the problem is easier one, but i am now concerned about month end problems being focused on TREES .\\nLOST IN FOREST AT MONTH END ",
      "voteCount": 46
    },
    {
      "name": "Preksha_1909",
      "year": 2024,
      "content": "The happiness is unexplainable when an already solved question appears in the daily challenge\\uD83E\\uDD17\\uD83E\\uDD17\\uD83E\\uDD17\\uD83E\\uDD17",
      "voteCount": 29
    },
    {
      "name": "jamgb",
      "year": 2024,
      "content": "It would be nice to have some way of identifying what postorder traversal is from the question description, the examples, or at least have a link to a wiki article.  ",
      "voteCount": 23
    },
    {
      "name": "Azuer",
      "year": 2018,
      "content": "Why the level of preorder traversal and inorder traversal are medium but postorder is hard???",
      "voteCount": 20
    },
    {
      "name": "jc-denton",
      "year": 2018,
      "content": "Why is this hard?",
      "voteCount": 16
    },
    {
      "name": "aftabmk",
      "year": 2024,
      "content": "<code style=\"color:yellow;\">2018</code> <code style=\"color:#f8615c;\">Hard</code>\\n<code style=\"color:yellow;\">2024</code> <code style=\"color:#46c6c2;\">Easy</code>",
      "voteCount": 10
    },
    {
      "name": "raees_aamir",
      "year": 2018,
      "content": "Why is this classed as hard?\\n\\nThere are easy questions that are harder than this one.",
      "voteCount": 10
    },
    {
      "name": "LukaszJanisiow",
      "year": 2024,
      "content": "Test cases: \\n`root = [1, 2, 3, 4, 5, 6, 7]`\\n`root = [1, 2, null, 3, null, 4]`\\n `root = [1, null, 2, null, 3, null, 4]`\\n `root = [1, 1, 1, 1, 1, 1, 1]`\\n `root = [-4, -2, -5, -3, 1]`",
      "voteCount": 6
    },
    {
      "name": "monkeykingyan",
      "year": 2017,
      "content": "Here is the link for my detail explanation:\\n->Recursive\\n->Iterative\\n->Morris\\n[LeetCode Solution 145](https://techgeekyan.blogspot.ca/2017/08/leetcode-145-binary-tree-postorder.html)",
      "voteCount": 5
    },
    {
      "name": "wilmol",
      "year": 2018,
      "content": "Hi just curious why this one is hard, while n-ary is easy?\\nAlso same issue with preorder question :).",
      "voteCount": 4
    }
  ]
}
