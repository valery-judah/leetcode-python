{
  "category": "",
  "id": "877",
  "name": "Stone Game",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/stone-game/",
  "slug": "stone-game",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Math",
    "Dynamic Programming",
    "Game Theory"
  ],
  "similar_questions": [
    {
      "title": "Stone Game V",
      "difficulty": "Hard",
      "slug": "stone-game-v"
    },
    {
      "title": "Stone Game VI",
      "difficulty": "Medium",
      "slug": "stone-game-vi"
    },
    {
      "title": "Stone Game VII",
      "difficulty": "Medium",
      "slug": "stone-game-vii"
    },
    {
      "title": "Stone Game VIII",
      "difficulty": "Hard",
      "slug": "stone-game-viii"
    },
    {
      "title": "Stone Game IX",
      "difficulty": "Medium",
      "slug": "stone-game-ix"
    },
    {
      "title": "Strictly Palindromic Number",
      "difficulty": "Medium",
      "slug": "strictly-palindromic-number"
    },
    {
      "title": "Visit Array Positions to Maximize Score",
      "difficulty": "Medium",
      "slug": "visit-array-positions-to-maximize-score"
    }
  ],
  "questionId": "909",
  "questionFrontendId": "877",
  "title": "Stone Game",
  "titleSlug": "stone-game",
  "content": "<p>Alice and Bob play a game with piles of stones. There are an <strong>even</strong> number of piles arranged in a row, and each pile has a <strong>positive</strong> integer number of stones <code>piles[i]</code>.</p>\n\n<p>The objective of the game is to end with the most stones. The <strong>total</strong> number of stones across all the piles is <strong>odd</strong>, so there are no ties.</p>\n\n<p>Alice and Bob take turns, with <strong>Alice starting first</strong>. Each turn, a player takes the entire pile of stones either from the <strong>beginning</strong> or from the <strong>end</strong> of the row. This continues until there are no more piles left, at which point the person with the <strong>most stones wins</strong>.</p>\n\n<p>Assuming Alice and Bob play optimally, return <code>true</code><em> if Alice wins the game, or </em><code>false</code><em> if Bob wins</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [5,3,4,5]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \nAlice starts first, and can only take the first 5 or the last 5.\nSay she takes the first 5, so that the row becomes [3, 4, 5].\nIf Bob takes 3, then the board is [4, 5], and Alice takes 5 to win with 10 points.\nIf Bob takes the last 5, then the board is [3, 4], and Alice takes 4 to win with 9 points.\nThis demonstrated that taking the first 5 was a winning move for Alice, so we return true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [3,7,2,3]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= piles.length &lt;= 500</code></li>\n\t<li><code>piles.length</code> is <strong>even</strong>.</li>\n\t<li><code>1 &lt;= piles[i] &lt;= 500</code></li>\n\t<li><code>sum(piles[i])</code> is <strong>odd</strong>.</li>\n</ul>\n",
  "likes": 3458,
  "dislikes": 2941,
  "stats": {
    "totalAccepted": "299.1K",
    "totalSubmission": "415.3K",
    "totalAcceptedRaw": 299077,
    "totalSubmissionRaw": 415292,
    "acRate": "72.0%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Math",
      "slug": "math"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    },
    {
      "name": "Game Theory",
      "slug": "game-theory"
    }
  ],
  "metaData": {
    "name": "stoneGame",
    "params": [
      {
        "name": "piles",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "boolean"
    }
  },
  "discussion_posts": [
    {
      "name": "surajdesai",
      "year": 2019,
      "content": "just \\n\\nreturn true;\\nridiculous",
      "voteCount": 180
    },
    {
      "name": "Hai_dee",
      "year": 2019,
      "content": "I finally came up with a dynamic programming solution, and was suspicious that I never did find an example of player 1 losing. So I put \"return True\" in and submitted, hoping it\\'d pop up with an example my code was wrong. i.e. where player 2 wins. Yeah, lol.",
      "voteCount": 94
    },
    {
      "name": "Tee-Jay",
      "year": 2020,
      "content": "We are given that :\\n1) the number of piles is always even.\\n2) Alex always moves first\\n3) The total number of stones is odd, therefore, impossiblity of a tie\\n\\ngiven that alex always move first, alex is able to make certain that she always choses iether the odd indices or even indices, for example:\\n\\n\\ta b c d e f (letters represent piles)\\n\\t0 1 2 3 4 5 (indices)\\nalex can chose iether a or f \\nsay alex chooses \\'a\\' \\nlee is left with b c d e f\\ndoesnt matter what lee chooses now , alex will always have the option to choose c or e in the next turn\\n\\nthus by this logic we can make sure that alex is able to choose iether odd or even index piles EVERYTIME\\n\\ntherefore,alex simply makes sure that she chooses whichever indices\\' sum is max (odd idices or even indices).\\n\\nHence proved that when alex plays optimally, she always wins",
      "voteCount": 44
    },
    {
      "name": "_zgsdr",
      "year": 2019,
      "content": "For any case, Alex will win \\nbecause:\\nFirstly, we can divide the stones by their index(odd,even)\\nlike 5,4,5,3\\nso the total value of stones with even index is :  sumEven :5 + 5 = 10\\nthe total value of stones with odd index is : sumOdd: 4 + 3\\n\\nnote\"The total number of stones is odd, so there are no ties.\"\\nso sumEven will not be equal with sumOdd\\nBecase Alex chooses stone first \\nso if sumEven > sumOdd\\nthen he can always choose stones with even index\\nif sumEven < sumOdd\\nthen he can always choose stones with odd index\\nso, Alex will always win this game \\n\\nwe only need to return true.",
      "voteCount": 35
    },
    {
      "name": "qqdipps",
      "year": 2019,
      "content": "Does Alex always go first?\\nCan he count the stones in all the piles before he starts?\\nCan he plan ahead?\\n\\ngiven that there is an odd number of stones and even number of piles and there will always be a winner and players will play optimally and the assumptive answers to the questions above is ALEX WILL ALWAYS WIN so KISS (keep it simple silly) and return true.",
      "voteCount": 30
    },
    {
      "name": "ashish39",
      "year": 2020,
      "content": "I dont know why lee is at all playing this game, is he dumb??",
      "voteCount": 25
    },
    {
      "name": "Hexadecimal",
      "year": 2018,
      "content": "If sum of odd indices is greater, he chooses the last one first, and no matter what the opponent chooses, he always take the next available pile with odd index, and vice versa. Either way he wins.",
      "voteCount": 24
    },
    {
      "name": "AceAceIce",
      "year": 2019,
      "content": "This question should ask you if there is chance Alex loss the game. \\n\\nFor example, [3,7,2,3] Alex pick 3, Lee pick 7, Alex pick 3 then Alex will lost. The question will become medium level???",
      "voteCount": 21
    },
    {
      "name": "shaykhjake",
      "year": 2021,
      "content": "If you just want points, simply return true, because the challenge is making bad assumptions. With as many as 500 piles and 500 stones in each pile, there is simply no way that Alex will know if he should play odd or even. The best that he and Lee can do is compare the first pile with the last pile, and this is the method that is implied in challenge specs. However, this will lead you to wrong answers from time to time.\\n\\nBased on the way the code is set up, Alex will always win (as noted by many others), because apparetnly he\\'s like Rainman and can count all of the stones in all of the piles and know which path to choose. Such a game is incredibly stupid, and nobody would play it in real life.\\n\\nIf you are trying to truly challenge yourself, skip this problem and move on to something else.",
      "voteCount": 15
    },
    {
      "name": "LakshmiPandey",
      "year": 2019,
      "content": "Alex will always win ,,,\\nas the given sum(piles) will always be odd(given in the question)\\nO(1)",
      "voteCount": 9
    }
  ]
}
