{
  "category": "",
  "id": "137",
  "name": "Single Number II",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/single-number-ii/",
  "slug": "single-number-ii",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Bit Manipulation"
  ],
  "similar_questions": [
    {
      "title": "Single Number",
      "difficulty": "Easy",
      "slug": "single-number"
    },
    {
      "title": "Single Number III",
      "difficulty": "Medium",
      "slug": "single-number-iii"
    },
    {
      "title": "Find the XOR of Numbers Which Appear Twice",
      "difficulty": "Easy",
      "slug": "find-the-xor-of-numbers-which-appear-twice"
    }
  ],
  "questionId": "137",
  "questionFrontendId": "137",
  "title": "Single Number II",
  "titleSlug": "single-number-ii",
  "content": "<p>Given an integer array <code>nums</code> where&nbsp;every element appears <strong>three times</strong> except for one, which appears <strong>exactly once</strong>. <em>Find the single element and return it</em>.</p>\n\n<p>You must&nbsp;implement a solution with a linear runtime complexity and use&nbsp;only constant&nbsp;extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,3,2]\n<strong>Output:</strong> 3\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,0,1,0,1,99]\n<strong>Output:</strong> 99\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li>Each element in <code>nums</code> appears exactly <strong>three times</strong> except for one element which appears <strong>once</strong>.</li>\n</ul>\n",
  "likes": 8435,
  "dislikes": 733,
  "stats": {
    "totalAccepted": "785.9K",
    "totalSubmission": "1.2M",
    "totalAcceptedRaw": 785934,
    "totalSubmissionRaw": 1194163,
    "acRate": "65.8%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Bit Manipulation",
      "slug": "bit-manipulation"
    }
  ],
  "metaData": {
    "name": "singleNumber",
    "params": [
      {
        "name": "nums",
        "type": "integer[]"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "aceanojjj",
      "year": 2023,
      "content": "I was like \\'aha a piece of cake\\', until I read the last requirement \\uD83E\\uDD79",
      "voteCount": 269
    },
    {
      "name": "sasukesharma",
      "year": 2023,
      "content": "I HATE BIT-MANIPULATION",
      "voteCount": 219
    },
    {
      "name": "daringcalf",
      "year": 2023,
      "content": "I have a bit that needs to be manipulated.",
      "voteCount": 161
    },
    {
      "name": "saadtaame",
      "year": 2013,
      "content": "Has anybody solved this problem by using constant space? My solution uses a map to keep track of the counts of each element in the array.",
      "voteCount": 103
    },
    {
      "name": "robotqueen",
      "year": 2017,
      "content": "If this is not a hard question, I dont know what is. I don`t think anyone less than an expert on bit manipulations can fully code this solution in a white board interview (talking about solving it at linear time and constant space of course).",
      "voteCount": 86
    },
    {
      "name": "shivamchaurasia2912",
      "year": 2023,
      "content": "My First Approach was counting set bits :-\\nEg :- [2,2,2,3,4,4,4]\\nbinary form :- 010\\n                       010\\n                       010\\n                       011\\n                       100\\n                       100 \\n                       100\\nTotal :-            3 4 1\\nSo, 3 is divisible by 3 hence \"0\" but four is not divisible \"1\" and same with \"1\" . The final answer will be \"011\" = 3.",
      "voteCount": 80
    },
    {
      "name": "MahekSavani",
      "year": 2023,
      "content": "Easier to solve from maths perspective:\nFind all the distinct numbers (set), multiply by 3 (because all the other number repeats 3 time), so the sum of that set will have total of original nums + 2*(number which is repeating only once)",
      "voteCount": 41
    },
    {
      "name": "cecilia5",
      "year": 2023,
      "content": "The reason xor works for the case of every element appear twice and only element appear once is that the xor function is \"bit\"-wise annihilating for when applied to the same element twice, commutative and associative.\\n\\nWhat kind of operator can do \"tri\"-wise, annihilating for when apply to the same element 3 times, commutative and associative? What is \"tri\"-wise anyway?",
      "voteCount": 37
    },
    {
      "name": "Yan-Zhelanov",
      "year": 2023,
      "content": "1. Keep two variables, `ones` and `twos`, to hold the bits that have appeared one time and two times, respectively. Iterate through the array. For each number:\\n- Update twos with bits that have appeared two times now. These are the bits which were in ones earlier and in the current number.\\n- Update ones with bits that have appeared one time. However, you need to remove those bits which are in twos.\\n2. If a bit is present in twos, it means it has already appeared two times, so remove these bits from ones and twos.\\n3. After the end of array traversal, ones will hold the bits of the number that appears exactly once in the array. Other numbers\\' bits will get cancelled out as we remove them when they appear the third time.",
      "voteCount": 21
    },
    {
      "name": "yinjiecheng",
      "year": 2013,
      "content": "From the [best answer][1] i'v known how to solve the problem \"every element appears N times except for one\", but what if the opposite?\\n\\nEvery element appears only one time except for one, how to find the only one element that appears 2(and 3 to N) times? Also requires a linear runtime complexity, and a linear runtime complexity.\\n\\n\\n  [1]: http://oj.leetcode.com/discuss/857/constant-space-solution",
      "voteCount": 14
    }
  ]
}
