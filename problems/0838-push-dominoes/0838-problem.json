{
  "category": "",
  "id": "838",
  "name": "Push Dominoes",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/push-dominoes/",
  "slug": "push-dominoes",
  "isPaidOnly": false,
  "tags": [
    "Two Pointers",
    "String",
    "Dynamic Programming"
  ],
  "similar_questions": [],
  "questionId": "868",
  "questionFrontendId": "838",
  "title": "Push Dominoes",
  "titleSlug": "push-dominoes",
  "content": "<p>There are <code>n</code> dominoes in a line, and we place each domino vertically upright. In the beginning, we simultaneously push some of the dominoes either to the left or to the right.</p>\n\n<p>After each second, each domino that is falling to the left pushes the adjacent domino on the left. Similarly, the dominoes falling to the right push their adjacent dominoes standing on the right.</p>\n\n<p>When a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces.</p>\n\n<p>For the purposes of this question, we will consider that a falling domino expends no additional force to a falling or already fallen domino.</p>\n\n<p>You are given a string <code>dominoes</code> representing the initial state where:</p>\n\n<ul>\n\t<li><code>dominoes[i] = &#39;L&#39;</code>, if the <code>i<sup>th</sup></code> domino has been pushed to the left,</li>\n\t<li><code>dominoes[i] = &#39;R&#39;</code>, if the <code>i<sup>th</sup></code> domino has been pushed to the right, and</li>\n\t<li><code>dominoes[i] = &#39;.&#39;</code>, if the <code>i<sup>th</sup></code> domino has not been pushed.</li>\n</ul>\n\n<p>Return <em>a string representing the final state</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> dominoes = &quot;RR.L&quot;\n<strong>Output:</strong> &quot;RR.L&quot;\n<strong>Explanation:</strong> The first domino expends no additional force on the second domino.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/05/18/domino.png\" style=\"height: 196px; width: 512px;\" />\n<pre>\n<strong>Input:</strong> dominoes = &quot;.L.R...LR..L..&quot;\n<strong>Output:</strong> &quot;LL.RR.LLRRLL..&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == dominoes.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>dominoes[i]</code> is either <code>&#39;L&#39;</code>, <code>&#39;R&#39;</code>, or <code>&#39;.&#39;</code>.</li>\n</ul>\n",
  "likes": 3924,
  "dislikes": 274,
  "stats": {
    "totalAccepted": "222.4K",
    "totalSubmission": "352.9K",
    "totalAcceptedRaw": 222411,
    "totalSubmissionRaw": 352882,
    "acRate": "63.0%"
  },
  "topicTags": [
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "metaData": {
    "name": "pushDominoes",
    "params": [
      {
        "name": "dominoes",
        "type": "string"
      }
    ],
    "return": {
      "type": "string"
    }
  },
  "discussion_posts": [
    {
      "name": "sharqawycs",
      "year": 2025,
      "content": "Who else cannot imagine anything?",
      "voteCount": 271
    },
    {
      "name": "electyrion",
      "year": 2025,
      "content": "Who else had the first intuition to use a stack?",
      "voteCount": 270
    },
    {
      "name": "Edwards310",
      "year": 2025,
      "content": "Dominoes? What ***I only know about Domino\\'s Pizza \\uD83C\\uDF55***",
      "voteCount": 109
    },
    {
      "name": "YadavSaurav64",
      "year": 2025,
      "content": "I think counting month was better \\uD83D\\uDE2D",
      "voteCount": 81
    },
    {
      "name": "shliucsdcogs",
      "year": 2024,
      "content": "first intuition is to do bfs",
      "voteCount": 77
    },
    {
      "name": "sr9x",
      "year": 2025,
      "content": "**Alright, fellow average Leetcoders who are probably solving this while procrastinating on something more important, let me break down this dominoes problem with the unnecessary sarcasm you never asked for:**\\n\\n**1. If you see  `R.L`, that\\'s what I call a \"standoff situation.\"**  \\nTwo forces staring each other down like my credit card bill and my bank account at the end of the month. We need to protect this delicate balance, so we\\'ll disguise it as  `xxx`  \\u2013 not because we\\'re being clever, but because typing three of the same letter is apparently the height of our creativity.\\n\\n**2. Next up, any  `R.`  becomes  `RR`  and any  `.L`  becomes  `LL`.**  \\nWhy? Because dominoes are basically the clingy friends of the physics world \\u2013 they just can\\'t help but influence whoever\\'s standing next to them. Right goes right, left goes left. It\\'s not rocket science, people.\\n\\n**3. Keep repeating this process until nothing changes**  \\u2013 kind of like how I keep telling myself I\\'ll go to the gym tomorrow. Eventually, one of us has to stop lying.\\n\\n**4. Finally, bring back our perfect standoff couples by replacing  `xxx`  with  `R.L`  again.**  \\nAnd there you have it \\u2013 a solution so elegant it almost makes up for the two hours you spent overthinking this problem before finding this comment.\\n\\n**Hint:**  \\nIf you print the string after each step, you can literally watch your productivity fall in slow motion. You\\'re welcome. This approach is simple, readable, and makes you look like you know what you\\'re doing \\u2013 which is all any of us are really aiming for here.\\n\\n_Maximum effort, minimum code. That\\'s how we roll._",
      "voteCount": 63
    },
    {
      "name": "sharqawycs",
      "year": 2025,
      "content": "## Actually good hints \\n\\n<details>\\n  <summary>Hint 1</summary>\\n\\n\\'R\\' pushes right, \\'L\\' pushes left.  \\nIf both hit the same dot, it stays upright.\\n</details>\\n\\n---\\n\\n<details>\\n  <summary>Hint 2</summary>\\n\\nThink of pushes as forces or waves spreading.\\n</details>\\n\\n---\\n\\n<details>\\n  <summary>Hint 3</summary>\\n\\nGo left to right.  \\nTrack how strong the right force is at each position.  \\nForce drops by 1 each step. Reset to 0 if you see \\'L\\'.\\n</details>\\n\\n---\\n\\n<details>\\n  <summary>Hint 4</summary>\\n\\nGo right to left.  \\nTrack left force.  \\nReset to 0 if you see \\'R\\'.\\n</details>\\n\\n---\\n\\n<details>\\n  <summary>Hint 5</summary>\\n\\nCompare forces:\\n- Right > Left \\u2192 \\'R\\'  \\n- Left > Right \\u2192 \\'L\\'  \\n- Equal \\u2192 \\'.\\'\\n</details>",
      "voteCount": 47
    },
    {
      "name": "csmark",
      "year": 2025,
      "content": "```\\n\".\"\\n\"...\"\\n\"L.R.L.R\"\\n\"R.L.R.L\"\\n\"LLLLLLLLLL\"\\n\".......LR...LR.R......L\"\\n\"LL...R.L.......R.LR..L..RL.R..R.L...LRR.LR.L.R...R\"\\n\".R....RLRR......RL...L..L....R.L.......L..R.....L........RL.L..LR......L...L..RL.R...LRL.....R......\"\\n```",
      "voteCount": 29
    },
    {
      "name": "thewizard641",
      "year": 2024,
      "content": "nice question as for two pointer approach it is easier for us to visualise it but implementing it is not a cake walk ",
      "voteCount": 26
    },
    {
      "name": "axisz",
      "year": 2024,
      "content": "making machine learning algorithm but with if else blocks XD",
      "voteCount": 25
    }
  ]
}
