{
  "category": "",
  "id": "265",
  "name": "Paint House II",
  "difficulty": "Hard",
  "leetcode_url": "https://leetcode.com/problems/paint-house-ii/",
  "slug": "paint-house-ii",
  "isPaidOnly": true,
  "tags": [
    "Array",
    "Dynamic Programming"
  ],
  "similar_questions": [
    {
      "title": "Product of Array Except Self",
      "difficulty": "Medium",
      "slug": "product-of-array-except-self"
    },
    {
      "title": "Sliding Window Maximum",
      "difficulty": "Hard",
      "slug": "sliding-window-maximum"
    },
    {
      "title": "Paint House",
      "difficulty": "Medium",
      "slug": "paint-house"
    },
    {
      "title": "Paint Fence",
      "difficulty": "Medium",
      "slug": "paint-fence"
    }
  ],
  "questionId": "265",
  "questionFrontendId": "265",
  "title": "Paint House II",
  "titleSlug": "paint-house-ii",
  "content": "<p>There are a row of <code>n</code> houses, each house can be painted with one of the <code>k</code> colors. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.</p>\n\n<p>The cost of painting each house with a certain color is represented by an <code>n x k</code> cost matrix costs.</p>\n\n<ul>\n\t<li>For example, <code>costs[0][0]</code> is the cost of painting house <code>0</code> with color <code>0</code>; <code>costs[1][2]</code> is the cost of painting house <code>1</code> with color <code>2</code>, and so on...</li>\n</ul>\n\n<p>Return <em>the minimum cost to paint all houses</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> costs = [[1,5,3],[2,9,4]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nPaint house 0 into color 0, paint house 1 into color 2. Minimum cost: 1 + 4 = 5; \nOr paint house 0 into color 2, paint house 1 into color 0. Minimum cost: 3 + 2 = 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> costs = [[1,3],[2,4]]\n<strong>Output:</strong> 5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>costs.length == n</code></li>\n\t<li><code>costs[i].length == k</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>2 &lt;= k &lt;= 20</code></li>\n\t<li><code>1 &lt;= costs[i][j] &lt;= 20</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you solve it in <code>O(nk)</code> runtime?</p>\n",
  "likes": 1338,
  "dislikes": 39,
  "stats": {
    "totalAccepted": "139.3K",
    "totalSubmission": "246.2K",
    "totalAcceptedRaw": 139332,
    "totalSubmissionRaw": 246250,
    "acRate": "56.6%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "metaData": {
    "name": "minCostII",
    "params": [
      {
        "name": "costs",
        "type": "integer[][]"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "1ncu804u",
      "year": 2022,
      "content": "if paint house is like the same why this is a hard ?",
      "voteCount": 12
    },
    {
      "name": "IWantToPass",
      "year": 2016,
      "content": "I feel like the O(nk) time solution is pretty hard to come up with in an interview, but the O(nk^2) solution is easier. Would we actually be expected to get the O(nk) solution in facebook interview? Did anyone pass with giving the O(nk^2) solution?",
      "voteCount": 7
    },
    {
      "name": "leperking0909",
      "year": 2019,
      "content": "One possible follow up in interview: What if all houses are in cycle?\\n\\nAnyone has any idea?",
      "voteCount": 5
    },
    {
      "name": "AlecLC",
      "year": 2023,
      "content": "This is pretty easy for a hard. The better ways to solve it are pretty ridiculous but basic DP does the job just fine",
      "voteCount": 4
    },
    {
      "name": "Lipox",
      "year": 2023,
      "content": "Hard \\xD7\\nEasy one in Medium \\u2714",
      "voteCount": 1
    },
    {
      "name": "daringcalf",
      "year": 2023,
      "content": "This is a decent crazy hard DP problem.",
      "voteCount": 1
    },
    {
      "name": "feketrob",
      "year": 2025,
      "content": "Same problem as [Minimum Falling Path Sum II](https://leetcode.com/problems/minimum-falling-path-sum-ii/description/)",
      "voteCount": 0
    },
    {
      "name": "sdk__",
      "year": 2025,
      "content": "Neat little problem. My thinking went from brute force (K^N time), to DP (NK^2), to DP with priority queue to fetch the 2 lowest costs (NK log K). Then I implemented my solution. It scored slower than I expected, and I realized I didn\\'t need a priority queue at all if I added some ugly manual min-handling (NK time).",
      "voteCount": 0
    },
    {
      "name": "raumanian",
      "year": 2024,
      "content": "just need to store the minimum and second minimum cost after each iterations. ",
      "voteCount": 0
    },
    {
      "name": "jdlyga",
      "year": 2024,
      "content": "Oh go screw, a hard problem",
      "voteCount": 0
    }
  ]
}
