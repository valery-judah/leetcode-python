{
  "category": "",
  "id": "794",
  "name": "Valid Tic-Tac-Toe State",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/valid-tic-tac-toe-state/",
  "slug": "valid-tic-tac-toe-state",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Matrix"
  ],
  "similar_questions": [
    {
      "title": "Design Tic-Tac-Toe",
      "difficulty": "Medium",
      "slug": "design-tic-tac-toe"
    }
  ],
  "questionId": "810",
  "questionFrontendId": "794",
  "title": "Valid Tic-Tac-Toe State",
  "titleSlug": "valid-tic-tac-toe-state",
  "content": "<p>Given a Tic-Tac-Toe board as a string array <code>board</code>, return <code>true</code> if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game.</p>\n\n<p>The board is a <code>3 x 3</code> array that consists of characters <code>&#39; &#39;</code>, <code>&#39;X&#39;</code>, and <code>&#39;O&#39;</code>. The <code>&#39; &#39;</code> character represents an empty square.</p>\n\n<p>Here are the rules of Tic-Tac-Toe:</p>\n\n<ul>\n\t<li>Players take turns placing characters into empty squares <code>&#39; &#39;</code>.</li>\n\t<li>The first player always places <code>&#39;X&#39;</code> characters, while the second player always places <code>&#39;O&#39;</code> characters.</li>\n\t<li><code>&#39;X&#39;</code> and <code>&#39;O&#39;</code> characters are always placed into empty squares, never filled ones.</li>\n\t<li>The game ends when there are three of the same (non-empty) character filling any row, column, or diagonal.</li>\n\t<li>The game also ends if all squares are non-empty.</li>\n\t<li>No more moves can be played if the game is over.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/15/tictactoe1-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> board = [&quot;O  &quot;,&quot;   &quot;,&quot;   &quot;]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The first player always plays &quot;X&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/15/tictactoe2-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> board = [&quot;XOX&quot;,&quot; X &quot;,&quot;   &quot;]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Players take turns making moves.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/15/tictactoe4-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> board = [&quot;XOX&quot;,&quot;O O&quot;,&quot;XOX&quot;]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>board.length == 3</code></li>\n\t<li><code>board[i].length == 3</code></li>\n\t<li><code>board[i][j]</code> is either <code>&#39;X&#39;</code>, <code>&#39;O&#39;</code>, or <code>&#39; &#39;</code>.</li>\n</ul>\n",
  "likes": 578,
  "dislikes": 1165,
  "stats": {
    "totalAccepted": "64.6K",
    "totalSubmission": "186.2K",
    "totalAcceptedRaw": 64551,
    "totalSubmissionRaw": 186215,
    "acRate": "34.7%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Matrix",
      "slug": "matrix"
    }
  ],
  "metaData": {
    "name": "validTicTacToe",
    "params": [
      {
        "name": "board",
        "type": "string[]"
      }
    ],
    "return": {
      "type": "boolean"
    }
  },
  "discussion_posts": [
    {
      "name": "ttaylor27",
      "year": 2024,
      "content": "Types of invalid states:\\n- Number of O > Number of X\\n- Number of X - Number of O > 1\\n- greater than 2 Win states for X or O\\n- Both X and O have a win state\\n- X wins but Number of X == Number of O\\n- O wins but Number of O < Number of X\\n",
      "voteCount": 17
    },
    {
      "name": "mdsalmankhader",
      "year": 2023,
      "content": "from 102 testcase i started doing test case oriented programming lol :)",
      "voteCount": 14
    },
    {
      "name": "dgrand",
      "year": 2019,
      "content": "Why this should return false?\\n[\"XXX\",\"OOX\",\"OOX\"]\\nThink of the last move being X at [0,2] yes, players played not optimally but this may happen.",
      "voteCount": 13
    },
    {
      "name": "stackphish",
      "year": 2020,
      "content": "There is NO serious math here(Atleast NOT required here to solve)...\\nAlso, I would like to see atleast one recursive approach... I couldn\\'t find one from the discussions section. \\nI think Leetcode should seriously consider the correctness and aptness of the related topic since many leetcoders practice problems by filtering the tags. \\n",
      "voteCount": 8
    },
    {
      "name": "kaihua",
      "year": 2018,
      "content": "Question above",
      "voteCount": 5
    },
    {
      "name": "user7671HA",
      "year": 2022,
      "content": "how is the following valid state? there are 2 wins of sort from \\'X\\': left most vertical and bottom most horizontal\\n[\\n\"XOO\",\\n\"XOO\",\\n\"XXX\"]",
      "voteCount": 4
    },
    {
      "name": "naveedn",
      "year": 2019,
      "content": "Input: [\"XXX\",\"XOO\",\"OO \"]\\n\\nX X X\\nX O O \\nO O \\n\\nMy understanding is that this is a valid board configuration / end-state, but the correct answer is False. Can anyone explain why?\\n\\nMoves:\\n\\tX: (0,0)\\n\\tO: (1,1)\\n\\tX:  (1,0)\\n\\tO: (2,0)\\n\\tX: (0,1)\\n\\tO: (2,1)\\n\\tX: (0,2) -> Game Over\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\t\\n\\n\\n",
      "voteCount": 3
    },
    {
      "name": "sarpalmadhav",
      "year": 2024,
      "content": "So I am the only idiot that solved this via recursion/backtracking by simulating actual game, only to realize that something was off if my submission is taking 1000 ms as compared to 1 ms for most others \\uD83D\\uDE03\\n\\n I\\'d say the mental tuning is such that moment I see a board game like Chess board in N queens or Rat in a Maze problem, the mind directly goes to Recursion/Backtracking",
      "voteCount": 2
    },
    {
      "name": "Faheem-maker",
      "year": 2025,
      "content": "My solution exactly:\\n```\\nif\\nelse if\\nelse if\\nelse if\\nelse if\\nelse if\\nelse if\\nelse if\\nelse if\\nelse if\\nelse if\\n\\nreturn true\\n```",
      "voteCount": 1
    },
    {
      "name": "Abrish",
      "year": 2024,
      "content": "why is this input make it true ?   `Input: board = [\"XOX\",\"O O\",\"XOX\"]`  With this input , non of the rows, cols or diagonals has three of the same character unless future input into the center cell\\n",
      "voteCount": 1
    }
  ]
}
