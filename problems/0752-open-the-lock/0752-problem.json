{
  "category": "",
  "id": "752",
  "name": "Open the Lock",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/open-the-lock/",
  "slug": "open-the-lock",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Hash Table",
    "String",
    "Breadth-First Search"
  ],
  "similar_questions": [
    {
      "title": "Reachable Nodes With Restrictions",
      "difficulty": "Medium",
      "slug": "reachable-nodes-with-restrictions"
    }
  ],
  "questionId": "753",
  "questionFrontendId": "752",
  "title": "Open the Lock",
  "titleSlug": "open-the-lock",
  "content": "<p>You have a lock in front of you with 4 circular wheels. Each wheel has 10 slots: <code>&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;</code>. The wheels can rotate freely and wrap around: for example we can turn <code>&#39;9&#39;</code> to be <code>&#39;0&#39;</code>, or <code>&#39;0&#39;</code> to be <code>&#39;9&#39;</code>. Each move consists of turning one wheel one slot.</p>\n\n<p>The lock initially starts at <code>&#39;0000&#39;</code>, a string representing the state of the 4 wheels.</p>\n\n<p>You are given a list of <code>deadends</code> dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.</p>\n\n<p>Given a <code>target</code> representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;0201&quot;,&quot;0101&quot;,&quot;0102&quot;,&quot;1212&quot;,&quot;2002&quot;], target = &quot;0202&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> \nA sequence of valid moves would be &quot;0000&quot; -&gt; &quot;1000&quot; -&gt; &quot;1100&quot; -&gt; &quot;1200&quot; -&gt; &quot;1201&quot; -&gt; &quot;1202&quot; -&gt; &quot;0202&quot;.\nNote that a sequence like &quot;0000&quot; -&gt; &quot;0001&quot; -&gt; &quot;0002&quot; -&gt; &quot;0102&quot; -&gt; &quot;0202&quot; would be invalid,\nbecause the wheels of the lock become stuck after the display becomes the dead end &quot;0102&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;8888&quot;], target = &quot;0009&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> We can turn the last wheel in reverse to move from &quot;0000&quot; -&gt; &quot;0009&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> deadends = [&quot;8887&quot;,&quot;8889&quot;,&quot;8878&quot;,&quot;8898&quot;,&quot;8788&quot;,&quot;8988&quot;,&quot;7888&quot;,&quot;9888&quot;], target = &quot;8888&quot;\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> We cannot reach the target without getting stuck.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= deadends.length &lt;= 500</code></li>\n\t<li><code>deadends[i].length == 4</code></li>\n\t<li><code>target.length == 4</code></li>\n\t<li>target <strong>will not be</strong> in the list <code>deadends</code>.</li>\n\t<li><code>target</code> and <code>deadends[i]</code> consist of digits only.</li>\n</ul>\n",
  "likes": 4998,
  "dislikes": 229,
  "stats": {
    "totalAccepted": "372.4K",
    "totalSubmission": "611.9K",
    "totalAcceptedRaw": 372406,
    "totalSubmissionRaw": 611899,
    "acRate": "60.9%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    }
  ],
  "metaData": {
    "name": "openLock",
    "params": [
      {
        "name": "deadends",
        "type": "string[]"
      },
      {
        "name": "target",
        "type": "string"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "leetcode199",
      "year": 2023,
      "content": "I will blackout if I get this in an interview",
      "voteCount": 472
    },
    {
      "name": "TenzinDelek",
      "year": 2024,
      "content": "double it and give it to the next person",
      "voteCount": 236
    },
    {
      "name": "codebiz",
      "year": 2024,
      "content": "Ain\\'t no way this is a medium problem. ",
      "voteCount": 182
    },
    {
      "name": "Krrabs",
      "year": 2023,
      "content": "Sneaky Sneaky\\n```\\n[\"0000\"]\\n\"8888\"\\n```",
      "voteCount": 80
    },
    {
      "name": "poetic-foool",
      "year": 2020,
      "content": "I thoroughly enjoyed doing this problem. I rate it highest problem in BFS so far! You will gain much more insight in bfs after doing this.",
      "voteCount": 70
    },
    {
      "name": "user7604rV",
      "year": 2024,
      "content": "10% time coming up with algorithm, 90% of time spent trying to handle rotating wheels in a decent way",
      "voteCount": 60
    },
    {
      "name": "vigjadel",
      "year": 2017,
      "content": "Can we apply DFS to this problem ?",
      "voteCount": 46
    },
    {
      "name": "xeniawann",
      "year": 2023,
      "content": "For people looking for similar problem to practice, **#433 Minimum Genetic Mutations** is a good one. I solved it before seeing this one, and it's basically the same idea.",
      "voteCount": 38
    },
    {
      "name": "Qwertypig",
      "year": 2024,
      "content": "Note that the problem only states that **target** won\\'t be in deadends, but says nothing regarding the starting point **\"0000\"**.",
      "voteCount": 28
    },
    {
      "name": "isti",
      "year": 2024,
      "content": "Ewww brother, Ewwww",
      "voteCount": 26
    }
  ]
}
