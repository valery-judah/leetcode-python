{
  "category": "",
  "id": "1871",
  "name": "Jump Game VII",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/jump-game-vii/",
  "slug": "jump-game-vii",
  "isPaidOnly": false,
  "tags": [
    "String",
    "Dynamic Programming",
    "Sliding Window",
    "Prefix Sum"
  ],
  "similar_questions": [
    {
      "title": "Jump Game II",
      "difficulty": "Medium",
      "slug": "jump-game-ii"
    },
    {
      "title": "Jump Game",
      "difficulty": "Medium",
      "slug": "jump-game"
    },
    {
      "title": "Jump Game III",
      "difficulty": "Medium",
      "slug": "jump-game-iii"
    },
    {
      "title": "Jump Game IV",
      "difficulty": "Hard",
      "slug": "jump-game-iv"
    },
    {
      "title": "Jump Game V",
      "difficulty": "Hard",
      "slug": "jump-game-v"
    },
    {
      "title": "Jump Game VI",
      "difficulty": "Medium",
      "slug": "jump-game-vi"
    },
    {
      "title": "Jump Game VII",
      "difficulty": "Medium",
      "slug": "jump-game-vii"
    },
    {
      "title": "Jump Game VIII",
      "difficulty": "Medium",
      "slug": "jump-game-viii"
    },
    {
      "title": "Count Vowel Strings in Ranges",
      "difficulty": "Medium",
      "slug": "count-vowel-strings-in-ranges"
    },
    {
      "title": "Maximum Number of Jumps to Reach the Last Index",
      "difficulty": "Medium",
      "slug": "maximum-number-of-jumps-to-reach-the-last-index"
    }
  ],
  "questionId": "2001",
  "questionFrontendId": "1871",
  "title": "Jump Game VII",
  "titleSlug": "jump-game-vii",
  "content": "<p>You are given a <strong>0-indexed</strong> binary string <code>s</code> and two integers <code>minJump</code> and <code>maxJump</code>. In the beginning, you are standing at index <code>0</code>, which is equal to <code>&#39;0&#39;</code>. You can move from index <code>i</code> to index <code>j</code> if the following conditions are fulfilled:</p>\n\n<ul>\n\t<li><code>i + minJump &lt;= j &lt;= min(i + maxJump, s.length - 1)</code>, and</li>\n\t<li><code>s[j] == &#39;0&#39;</code>.</li>\n</ul>\n\n<p>Return <code>true</code><i> if you can reach index </i><code>s.length - 1</code><i> in </i><code>s</code><em>, or </em><code>false</code><em> otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;<u>0</u>11<u>0</u>1<u>0</u>&quot;, minJump = 2, maxJump = 3\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\nIn the first step, move from index 0 to index 3. \nIn the second step, move from index 3 to index 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;01101110&quot;, minJump = 2, maxJump = 3\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is either <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n\t<li><code>s[0] == &#39;0&#39;</code></li>\n\t<li><code>1 &lt;= minJump &lt;= maxJump &lt; s.length</code></li>\n</ul>\n",
  "likes": 1773,
  "dislikes": 117,
  "stats": {
    "totalAccepted": "60.3K",
    "totalSubmission": "233.2K",
    "totalAcceptedRaw": 60298,
    "totalSubmissionRaw": 233228,
    "acRate": "25.9%"
  },
  "topicTags": [
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    },
    {
      "name": "Sliding Window",
      "slug": "sliding-window"
    },
    {
      "name": "Prefix Sum",
      "slug": "prefix-sum"
    }
  ],
  "metaData": {
    "name": "canReach",
    "params": [
      {
        "name": "s",
        "type": "string"
      },
      {
        "type": "integer",
        "name": "minJump"
      },
      {
        "type": "integer",
        "name": "maxJump"
      }
    ],
    "return": {
      "type": "boolean"
    }
  },
  "discussion_posts": [
    {
      "name": "anubhavanand",
      "year": 2023,
      "content": "was jumping from 6 days continuously, finally reached to Jump Game vii.\\n",
      "voteCount": 37
    },
    {
      "name": "yulezhanghao03",
      "year": 2023,
      "content": "Jump Game is such a bad kind of problem. If you use dp or greedy, they will become harder and harder to solve. But if you use BFS, you will find that you can use the same method to solve all of them brainlessly.",
      "voteCount": 28
    },
    {
      "name": "AttAditya",
      "year": 2024,
      "content": "Definitely not a medium...",
      "voteCount": 11
    },
    {
      "name": "varunshrivastava007",
      "year": 2021,
      "content": "I don\\'t get it. Why the expected is `true` here.\\nNext probable paths from index `0` are `1` or `9`. And they both are `1`. It should return `false`.\\n\\n![image](https://assets.leetcode.com/users/images/a6b29e27-1594-4671-8505-5a2e1ededc4e_1621790026.2058513.png)\\n",
      "voteCount": 10
    },
    {
      "name": "JohnZhou98",
      "year": 2021,
      "content": "\"00111010\"\\n3\\n5\\nExpected: False\\n\\nCan\\'t we just jump to the 5th index, and then make another jump to finish it?",
      "voteCount": 8
    },
    {
      "name": "nazimazhaan17",
      "year": 2023,
      "content": "i am getting TLE on tabulated dp solution :\\'\\'\\')",
      "voteCount": 5
    },
    {
      "name": "MeloWang0308",
      "year": 2023,
      "content": "s =\n\"01\"\nminJump =\n1\nmaxJump =\n1\nWhy does this case expect False? I assume our goal is to reach the last index?",
      "voteCount": 5
    },
    {
      "name": "alpha_numerics",
      "year": 2025,
      "content": "Hint:\\n\\nKeep count of previous reachable index index where s[i]==\\'0\\' and it is in within range using sliding window keep updating it...\\nif number of reachable index s[i] is greater than zero make this index also reachable",
      "voteCount": 2
    },
    {
      "name": "matthewjinmp",
      "year": 2025,
      "content": "this is def a hard ",
      "voteCount": 1
    },
    {
      "name": "KellyBetty",
      "year": 2025,
      "content": "I adore this problem! I think this is definitely the hardest of the Jump Game problems, though. Took me the longest. Shouldn\\'t be a Medium.",
      "voteCount": 1
    }
  ]
}
