{
  "category": "",
  "id": "1076",
  "name": "Project Employees II",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/project-employees-ii/",
  "slug": "project-employees-ii",
  "isPaidOnly": true,
  "tags": [
    "Database"
  ],
  "similar_questions": [
    {
      "title": "Project Employees I",
      "difficulty": "Easy",
      "slug": "project-employees-i"
    },
    {
      "title": "Project Employees III",
      "difficulty": "Medium",
      "slug": "project-employees-iii"
    }
  ],
  "questionId": "1162",
  "questionFrontendId": "1076",
  "title": "Project Employees II",
  "titleSlug": "project-employees-ii",
  "content": "<p>Table: <code>Project</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| project_id  | int     |\n| employee_id | int     |\n+-------------+---------+\n(project_id, employee_id) is the primary key (combination of columns with unique values) of this table.\nemployee_id is a foreign key (reference column) to <code>Employee</code> table.\nEach row of this table indicates that the employee with employee_id is working on the project with project_id.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Employee</code></p>\n\n<pre>\n+------------------+---------+\n| Column Name      | Type    |\n+------------------+---------+\n| employee_id      | int     |\n| name             | varchar |\n| experience_years | int     |\n+------------------+---------+\nemployee_id is the primary key (column with unique values) of this table.\nEach row of this table contains information about one employee.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write a solution to report all the <strong>projects</strong> that have the most employees.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nProject table:\n+-------------+-------------+\n| project_id  | employee_id |\n+-------------+-------------+\n| 1           | 1           |\n| 1           | 2           |\n| 1           | 3           |\n| 2           | 1           |\n| 2           | 4           |\n+-------------+-------------+\nEmployee table:\n+-------------+--------+------------------+\n| employee_id | name   | experience_years |\n+-------------+--------+------------------+\n| 1           | Khaled | 3                |\n| 2           | Ali    | 2                |\n| 3           | John   | 1                |\n| 4           | Doe    | 2                |\n+-------------+--------+------------------+\n<strong>Output:</strong> \n+-------------+\n| project_id  |\n+-------------+\n| 1           |\n+-------------+\n<strong>Explanation:</strong> The first project has 3 employees while the second one has 2.\n</pre>\n",
  "likes": 206,
  "dislikes": 63,
  "stats": {
    "totalAccepted": "64.4K",
    "totalSubmission": "128K",
    "totalAcceptedRaw": 64373,
    "totalSubmissionRaw": 127974,
    "acRate": "50.3%"
  },
  "topicTags": [
    {
      "name": "Database",
      "slug": "database"
    }
  ],
  "metaData": {
    "mysql": [
      "Create table If Not Exists Project (project_id int, employee_id int)",
      "Create table If Not Exists Employee (employee_id int, name varchar(10), experience_years int)"
    ],
    "mssql": [
      "Create table Project (project_id int, employee_id int)",
      "Create table Employee (employee_id int, name varchar(10), experience_years int)"
    ],
    "oraclesql": [
      "Create table Project (project_id int, employee_id int)",
      "Create table Employee (employee_id int, name varchar(10), experience_years int)"
    ],
    "database": true,
    "name": "project_employees_ii",
    "pythondata": [
      "Project = pd.DataFrame([], columns=['project_id', 'employee_id']).astype({'project_id':'Int64', 'employee_id':'Int64'})",
      "Employee = pd.DataFrame([], columns=['employee_id', 'name', 'experience_years']).astype({'employee_id':'Int64', 'name':'object', 'experience_years':'Int64'})"
    ],
    "database_schema": {
      "Project": {
        "project_id": "INT",
        "employee_id": "INT"
      },
      "Employee": {
        "employee_id": "INT",
        "name": "VARCHAR(10)",
        "experience_years": "INT"
      }
    }
  },
  "discussion_posts": [
    {
      "name": "Negmat",
      "year": 2019,
      "content": "\\'\\'\\'\\nSELECT TOP 1 WITH TIES project_id\\nFROM Project\\nGROUP BY project_id\\nORDER BY COUNT(employee_id) DESC\\n\\'\\'\\'",
      "voteCount": 24
    },
    {
      "name": "rams110071",
      "year": 2020,
      "content": "with temp as (\\nselect project_id, count(*) as cnt\\nfrom project\\ngroup by project_id)\\n\\n\\nselect project_id\\nfrom temp\\nwhere cnt= (select max(cnt) from temp)",
      "voteCount": 12
    },
    {
      "name": "mcgaritym",
      "year": 2022,
      "content": "\\'\\'\\'\\nwith count_employees_projects AS\\n(SELECT project_id, count(employee_id) AS count_\\nFROM Project\\nGROUP BY project_id\\nORDER BY count(employee_id) DESC)\\n\\nSELECT project_id \\nFROM count_employees_projects\\nWHERE count_ = \\n(SELECT MAX(count_) FROM count_employees_projects);\\n\\'\\'\\'",
      "voteCount": 2
    },
    {
      "name": "rajashreekumkar",
      "year": 2021,
      "content": "with test as (select a.project_id, count(b.employee_id) as c\\nfrom Project a join Employee b on a.employee_id =b.employee_id \\ngroup by a.project_id  \\norder by count(b.employee_id) desc) \\n\\nselect project_id\\nfrom test\\nwhere c= (select max(c) from test)",
      "voteCount": 2
    },
    {
      "name": "pejato",
      "year": 2024,
      "content": "Can PostgreSQL support be added to this question please?",
      "voteCount": 1
    },
    {
      "name": "vimitw",
      "year": 2022,
      "content": "with cte as \\n(\\nselect \\nproject_id, count(distinct employee_id) as cn\\nfrom project \\ngroup by 1 \\n)\\nselect project_id\\nfrom cte \\nwhere cn= (select max(cn)from cte)",
      "voteCount": 1
    },
    {
      "name": "leetmaboshi",
      "year": 2021,
      "content": "with c as(\\nselect project_id, count(employee_id) as n\\nfrom Project\\ngroup by project_id)\\n\\nselect project_id from (\\nselect project_id, dense_rank() over (order by n desc) as m\\nfrom c) d\\nwhere m=1",
      "voteCount": 1
    },
    {
      "name": "talent2817",
      "year": 2021,
      "content": "with cte as (select p.project_id ,count(distinct (employee_id)) as Counting\\nfrom project p\\ngroup by p.project_id\\norder by counting DESC)\\nselect cte.project_id from cte\\nlimit 1",
      "voteCount": 1
    },
    {
      "name": "asusundevilmsba2020",
      "year": 2020,
      "content": "\\'\\'\\'\\nselect project_id  from  \\n(select project_id, count(*) cnt, dense_rank() over(order by count(*) desc) rnk  from project group by project_id )a where rnk =1 \\n\\'\\'\\'",
      "voteCount": 1
    },
    {
      "name": "ankitgadawe",
      "year": 2020,
      "content": "with t1 as(\\nselect project_id, count(distinct employee_id) cnt\\nfrom project \\ngroup by project_id\\n)\\nselect project_id from t1 where cnt= (select max(cnt) from t1)\\n",
      "voteCount": 1
    }
  ]
}
