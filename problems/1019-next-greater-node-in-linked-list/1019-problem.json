{
  "category": "",
  "id": "1019",
  "name": "Next Greater Node In Linked List",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/next-greater-node-in-linked-list/",
  "slug": "next-greater-node-in-linked-list",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Linked List",
    "Stack",
    "Monotonic Stack"
  ],
  "similar_questions": [],
  "questionId": "1072",
  "questionFrontendId": "1019",
  "title": "Next Greater Node In Linked List",
  "titleSlug": "next-greater-node-in-linked-list",
  "content": "<p>You are given the <code>head</code> of a linked list with <code>n</code> nodes.</p>\n\n<p>For each node in the list, find the value of the <strong>next greater node</strong>. That is, for each node, find the value of the first node that is next to it and has a <strong>strictly larger</strong> value than it.</p>\n\n<p>Return an integer array <code>answer</code> where <code>answer[i]</code> is the value of the next greater node of the <code>i<sup>th</sup></code> node (<strong>1-indexed</strong>). If the <code>i<sup>th</sup></code> node does not have a next greater node, set <code>answer[i] = 0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/05/linkedlistnext1.jpg\" style=\"width: 304px; height: 133px;\" />\n<pre>\n<strong>Input:</strong> head = [2,1,5]\n<strong>Output:</strong> [5,5,0]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/05/linkedlistnext2.jpg\" style=\"width: 500px; height: 113px;\" />\n<pre>\n<strong>Input:</strong> head = [2,7,4,3,5]\n<strong>Output:</strong> [7,0,5,5,0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is <code>n</code>.</li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
  "likes": 3455,
  "dislikes": 124,
  "stats": {
    "totalAccepted": "197.9K",
    "totalSubmission": "315.7K",
    "totalAcceptedRaw": 197918,
    "totalSubmissionRaw": 315717,
    "acRate": "62.7%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Linked List",
      "slug": "linked-list"
    },
    {
      "name": "Stack",
      "slug": "stack"
    },
    {
      "name": "Monotonic Stack",
      "slug": "monotonic-stack"
    }
  ],
  "metaData": {
    "name": "nextLargerNodes",
    "params": [
      {
        "name": "head",
        "type": "ListNode"
      }
    ],
    "return": {
      "type": "integer[]"
    }
  },
  "discussion_posts": [
    {
      "name": "BatMe",
      "year": 2023,
      "content": "Follow Up: Before you attempt this question, first try to solve \"Next greater element in an Array\" It will be helpful. Trust me!",
      "voteCount": 30
    },
    {
      "name": "satwika-55",
      "year": 2024,
      "content": "strange to see there\\'s no \"THIS SHOULD BE A EASY\"  comment for this question.",
      "voteCount": 20
    },
    {
      "name": "HKreporter",
      "year": 2019,
      "content": "Almost all of our methods are using O(n) time, O(n) space with a stack.\\nIs there a better way that we could only use O(1) space?\\nI can only figure out O(1)space with O(n2) time.",
      "voteCount": 9
    },
    {
      "name": "ahamedtariqanwar5",
      "year": 2023,
      "content": "Question topic will be \"The Very Next Greater Node in Linked List\" and the example testcases is also not clearly clarify the question.\\n\\n",
      "voteCount": 8
    },
    {
      "name": "Akash124124",
      "year": 2024,
      "content": "TEST CASES -------------------------------------------->\\n```\\n[2,1,5]\\n[2,7,4,3,5]\\n[1,7,5,1,9,2,5,1]\\n[5]\\n[1,2,3,4,5]\\n[5,4,3,2,1]\\n[3,3,3,3]\\n[1,2,3,4,4,5,6]\\n[1,5,4,7,3,7]\\n[5,4,3,2,9]\\n```\\n:) UPVOTE IF FOUND HELPFUL\\n",
      "voteCount": 5
    },
    {
      "name": "singhpratapvarang",
      "year": 2025,
      "content": "Yoda\\'s Wisdom - \"Like a Jedi scanning the future, we use a stack to remember past nodes. When we find a greater one, we update their destinies. Efficient this method is, with O(n) time and space.\"\\n\\nhttps://leetcode.com/problems/next-greater-node-in-linked-list/solutions/6590302/find-next-greater-nodes-the-stack-way-by-ut8k",
      "voteCount": 3
    },
    {
      "name": "PenumallaSaiKrishna",
      "year": 2024,
      "content": "Reverse the linked list to process nodes in reverse order. Use a stack to find the next greater element for each node while iterating through the reversed list, appending the element at the top of the stack to the resultant array for every iteration. Finally, reverse the result array to match the original list order.\\n~Happy Coding",
      "voteCount": 3
    },
    {
      "name": "contactaditya832126",
      "year": 2023,
      "content": "1. So what we need to do is first convert the linked list into an array by traversing.\\n2. Now create a stack and push the first element of the array into it.\\n3.Traverse the array and check whether the current value of the array be top element w.r.t. the top of stack. If it is, then pop the top value out of stack and set corresponding to top value  equal to current value of array. ( Greater element found)\\nRepeat the process if stack is not empty. Don\\'t forget to add the current value in stack.\\n4.If end of the array is reached then set 0 corresponding to all the remaining values of stack inside the array.(These values have no greater element)\\nFor more clarity here\\'s the python implementation\\n\\nclass Solution:\\n    def nextLargerNodes(self, head: Optional[ListNode]) -> List[int]:\\n        node_arr = []\\n        curr = head\\n        while curr:\\n            node_arr.append(curr.val)\\n            curr = curr.next\\n        stack = []\\n        for index, val in enumerate(node_arr):\\n            while stack and node_arr[stack[-1]] < val:\\n                node_arr[stack.pop()] = val\\n            stack.append(index)\\n        while stack:\\n            node_arr[stack.pop()] = 0\\n        return node_arr",
      "voteCount": 2
    },
    {
      "name": "DhruvSangal95",
      "year": 2025,
      "content": "Step1 :- Copy the element of LinkedList into an Array.\\nStep2 :- Apply the concept of Next greater element in an array using Stack.",
      "voteCount": 1
    }
  ]
}
