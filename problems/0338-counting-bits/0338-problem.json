{
  "category": "",
  "id": "338",
  "name": "Counting Bits",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/counting-bits/",
  "slug": "counting-bits",
  "isPaidOnly": false,
  "tags": [
    "Dynamic Programming",
    "Bit Manipulation"
  ],
  "similar_questions": [
    {
      "title": "Number of 1 Bits",
      "difficulty": "Easy",
      "slug": "number-of-1-bits"
    },
    {
      "title": "Sum of Values at Indices With K Set Bits",
      "difficulty": "Easy",
      "slug": "sum-of-values-at-indices-with-k-set-bits"
    },
    {
      "title": "Find the K-or of an Array",
      "difficulty": "Easy",
      "slug": "find-the-k-or-of-an-array"
    }
  ],
  "questionId": "338",
  "questionFrontendId": "338",
  "title": "Counting Bits",
  "titleSlug": "counting-bits",
  "content": "<p>Given an integer <code>n</code>, return <em>an array </em><code>ans</code><em> of length </em><code>n + 1</code><em> such that for each </em><code>i</code><em> </em>(<code>0 &lt;= i &lt;= n</code>)<em>, </em><code>ans[i]</code><em> is the <strong>number of </strong></em><code>1</code><em><strong>&#39;s</strong> in the binary representation of </em><code>i</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> [0,1,1]\n<strong>Explanation:</strong>\n0 --&gt; 0\n1 --&gt; 1\n2 --&gt; 10\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> [0,1,1,2,1,2]\n<strong>Explanation:</strong>\n0 --&gt; 0\n1 --&gt; 1\n2 --&gt; 10\n3 --&gt; 11\n4 --&gt; 100\n5 --&gt; 101\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>It is very easy to come up with a solution with a runtime of <code>O(n log n)</code>. Can you do it in linear time <code>O(n)</code> and possibly in a single pass?</li>\n\t<li>Can you do it without using any built-in function (i.e., like <code>__builtin_popcount</code> in C++)?</li>\n</ul>\n",
  "likes": 11678,
  "dislikes": 591,
  "stats": {
    "totalAccepted": "1.5M",
    "totalSubmission": "1.8M",
    "totalAcceptedRaw": 1452425,
    "totalSubmissionRaw": 1815752,
    "acRate": "80.0%"
  },
  "topicTags": [
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    },
    {
      "name": "Bit Manipulation",
      "slug": "bit-manipulation"
    }
  ],
  "metaData": {
    "name": "countBits",
    "params": [
      {
        "name": "n",
        "type": "integer"
      }
    ],
    "return": {
      "type": "integer[]"
    }
  },
  "discussion_posts": [
    {
      "name": "user0463au",
      "year": 2023,
      "content": "From hint, we can list and observe numbers as following:\\n```\\n// one bit group\\n 0=   0(0)\\n 1=   1(1)\\n// two bits group\\n 2=  10(1) = 10(higest bit) + 0\\n 3=  11(2) = 10 + 1\\n// three bits group\\n 4= 100(1) = 100(higest bit) + 0\\n 5= 101(2) = 100 + 1\\n 6= 110(2) = 100 + 2\\n 7= 111(3) = 100 + 3\\n// four bits group\\n 8=1000(1)=1000(higest bit) + 0\\n 9=1001(2) = 1000 + 1\\n10=1010(2) = 1000 + 2\\n11=1011(3) = 1000 + 3\\n12=1100(2) = 1000 + 4\\n13=1101(3) = 1000 + 5\\n14=1110(3) = 1000 + 6\\n15=1111(4) = 1000 + 7\\n// five bits group\\n16=10000(1)\\n...and so on\\n```",
      "voteCount": 80
    },
    {
      "name": "mayank17081998",
      "year": 2022,
      "content": "![image](https://assets.leetcode.com/users/images/2be6d79c-dd75-4637-8ebc-8333da5fb6b3_1646104305.9282799.png)\\n![image](https://assets.leetcode.com/users/images/3d48569f-0c2e-48f4-8625-3aa33c888cd5_1646104309.9975052.png)\\n![image](https://assets.leetcode.com/users/images/d893a978-d8aa-446b-9701-bcc34a687ca6_1646104313.262426.png)\\n![image](https://assets.leetcode.com/users/images/d58cda84-d79d-4e64-ac17-ef28e2c92200_1646104317.158017.png)\\n![image](https://assets.leetcode.com/users/images/3608e24c-1396-47b9-9210-11372191bb55_1646104320.662321.png)\\n![image](https://assets.leetcode.com/users/images/f35336ad-a815-4c2f-bc22-46f36a221686_1646104324.9437954.png)\\n",
      "voteCount": 75
    },
    {
      "name": "ALS_Venky",
      "year": 2023,
      "content": "Let\\'s get this septemer Badge :)",
      "voteCount": 44
    },
    {
      "name": "Adrien88",
      "year": 2023,
      "content": "Really admire those who can come up with this question and think of O(n) solutions.",
      "voteCount": 39
    },
    {
      "name": "anwendeng",
      "year": 2023,
      "content": "Done before! Resubmit. Today it is an easy question can be solved with different tricks. But tomorrow?",
      "voteCount": 14
    },
    {
      "name": "valente",
      "year": 2018,
      "content": "The problem is a valid one, but the description is wrong.  It says that you should solve it in `O(n)` time instead of `O(n * sizeof(int))` time.  But `sizeof(int)` is a constant.  `O(n * sizeof(int))`, in fact, *is* `O(n)` time.",
      "voteCount": 14
    },
    {
      "name": "LeetCode",
      "year": 2022,
      "content": "This problem is the Daily LeetCoding Challenge for March, Day 1.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **üìå Do you want to learn the problem thoroughly?**\n  Read [**‚≠ê  LeetCode Official Solution‚≠ê**](https://leetcode.com/problems/counting-bits/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 4 approaches in the official solution</summary>\n\n  \n**Approach 1:** Pop Count\n\n  \n**Approach 2:** DP + Most Significant Bit\n\n  \n**Approach 3:** DP + Least Significant Bit\n\n  \n**Approach 4:** DP + Last Set Bit\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
      "voteCount": 13
    },
    {
      "name": "danieloi",
      "year": 2024,
      "content": "Most intuitive solution in less than 5 minutes:\\nhttps://youtu.be/nNX5Gmnlt88",
      "voteCount": 12
    },
    {
      "name": "jle34",
      "year": 2025,
      "content": "0 (0)      -> 0\\n1 (1)        -> 1\\n2 (10)     -> 1 -> 1\\n3 (11)      -> 2 -> ans[2] + ans[1]\\n4 (100)   -> 1 -> 1\\n5 (101)    -> 2 -> ans[4] + ans[1]\\n6 (110)    -> 2 -> ans[4] + ans[2]\\n7 (111)     -> 3 -> ans[4] + ans[3]\\n8 (1000)  -> 1 -> 1\\n9 (1001)   -> 2 -> ans[8] + ans[1]\\n10 (1010) -> 2 -> ans[8] + ans[2]\\n11 (1011)  -> 3 -> ans[8] + ans[3]\\n12 (1100) -> 2 -> ans[8] + ans[4]\\n...\\ni -> ans[last power of 2] + ans[i - last power of 2]",
      "voteCount": 11
    },
    {
      "name": "rkhemka",
      "year": 2018,
      "content": "Can someone explain output for  this test case\\nInput: 5\\nOutput: [0,1,1,2,1,2]\\n\\nHow does array of output contains [0,1,1,2,1,2]\\nwhat is 2,1,2 for?\\n",
      "voteCount": 10
    }
  ]
}
