{
  "category": "",
  "id": "30",
  "name": "Substring with Concatenation of All Words",
  "difficulty": "Hard",
  "leetcode_url": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/",
  "slug": "substring-with-concatenation-of-all-words",
  "isPaidOnly": false,
  "tags": [
    "Hash Table",
    "String",
    "Sliding Window"
  ],
  "similar_questions": [
    {
      "title": "Minimum Window Substring",
      "difficulty": "Hard",
      "slug": "minimum-window-substring"
    }
  ],
  "questionId": "30",
  "questionFrontendId": "30",
  "title": "Substring with Concatenation of All Words",
  "titleSlug": "substring-with-concatenation-of-all-words",
  "content": "<p>You are given a string <code>s</code> and an array of strings <code>words</code>. All the strings of <code>words</code> are of <strong>the same length</strong>.</p>\n\n<p>A <strong>concatenated string</strong> is a string that exactly contains all the strings of any permutation of <code>words</code> concatenated.</p>\n\n<ul>\n\t<li>For example, if <code>words = [&quot;ab&quot;,&quot;cd&quot;,&quot;ef&quot;]</code>, then <code>&quot;abcdef&quot;</code>, <code>&quot;abefcd&quot;</code>, <code>&quot;cdabef&quot;</code>, <code>&quot;cdefab&quot;</code>, <code>&quot;efabcd&quot;</code>, and <code>&quot;efcdab&quot;</code> are all concatenated strings. <code>&quot;acdbef&quot;</code> is not a concatenated string because it is not the concatenation of any permutation of <code>words</code>.</li>\n</ul>\n\n<p>Return an array of <em>the starting indices</em> of all the concatenated substrings in <code>s</code>. You can return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;barfoothefoobarman&quot;, words = [&quot;foo&quot;,&quot;bar&quot;]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[0,9]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The substring starting at 0 is <code>&quot;barfoo&quot;</code>. It is the concatenation of <code>[&quot;bar&quot;,&quot;foo&quot;]</code> which is a permutation of <code>words</code>.<br />\nThe substring starting at 9 is <code>&quot;foobar&quot;</code>. It is the concatenation of <code>[&quot;foo&quot;,&quot;bar&quot;]</code> which is a permutation of <code>words</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;wordgoodgoodgoodbestword&quot;, words = [&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>There is no concatenated substring.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;barfoofoobarthefoobarman&quot;, words = [&quot;bar&quot;,&quot;foo&quot;,&quot;the&quot;]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[6,9,12]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The substring starting at 6 is <code>&quot;foobarthe&quot;</code>. It is the concatenation of <code>[&quot;foo&quot;,&quot;bar&quot;,&quot;the&quot;]</code>.<br />\nThe substring starting at 9 is <code>&quot;barthefoo&quot;</code>. It is the concatenation of <code>[&quot;bar&quot;,&quot;the&quot;,&quot;foo&quot;]</code>.<br />\nThe substring starting at 12 is <code>&quot;thefoobar&quot;</code>. It is the concatenation of <code>[&quot;the&quot;,&quot;foo&quot;,&quot;bar&quot;]</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= words.length &lt;= 5000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 30</code></li>\n\t<li><code>s</code> and <code>words[i]</code> consist of lowercase English letters.</li>\n</ul>\n",
  "likes": 2378,
  "dislikes": 387,
  "stats": {
    "totalAccepted": "616.3K",
    "totalSubmission": "1.9M",
    "totalAcceptedRaw": 616320,
    "totalSubmissionRaw": 1853026,
    "acRate": "33.3%"
  },
  "topicTags": [
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Sliding Window",
      "slug": "sliding-window"
    }
  ],
  "metaData": {
    "name": "findSubstring",
    "params": [
      {
        "name": "s",
        "type": "string"
      },
      {
        "name": "words",
        "type": "string[]"
      }
    ],
    "return": {
      "type": "list<integer>"
    }
  },
  "discussion_posts": [
    {
      "name": "drdamanraaj",
      "year": 2024,
      "content": "Failing on test case \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\n\nMe: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      "voteCount": 313
    },
    {
      "name": "kraabhi",
      "year": 2021,
      "content": "Description of question is not good , various points are missing",
      "voteCount": 180
    },
    {
      "name": "cornellouis",
      "year": 2018,
      "content": "I thought the question assumed all words were the same length?",
      "voteCount": 131
    },
    {
      "name": "apulatjonov",
      "year": 2023,
      "content": "178 / 179 testcases passed \\uD83E\\uDD23",
      "voteCount": 94
    },
    {
      "name": "zwright8",
      "year": 2022,
      "content": "Can LeetCode start adding the efficiency requirements to all the Description sections? It would make problem solving much less tedious",
      "voteCount": 87
    },
    {
      "name": "Dany__Guty",
      "year": 2023,
      "content": "This will save you: you need to increment the window one by one, there\\'s no way to pass the testcases in increments in the window of n = words[0].size()",
      "voteCount": 54
    },
    {
      "name": "UnitedIngvar",
      "year": 2023,
      "content": "Additional description point:\nThe words can overlap, like in this example from the test cases:\ns =\n\"lingmindraboofooowingdingbarrwingmonkeypoundcake\"\nwords =\n[\"fooo\",\"barr\",\"wing\",\"ding\",\"wing\"]\n\nPlease, add this to the description, it is not clear",
      "voteCount": 46
    },
    {
      "name": "leolin479",
      "year": 2021,
      "content": "For the example case\\n\\nInput: s = \"wordgoodgoodgoodbestword\", words = [\"word\",\"good\",\"best\",\"word\"]\\nOutput: []\\n\\nThe standard answer was \"output: [8]\", which preventing my code to be submitted.",
      "voteCount": 40
    },
    {
      "name": "darcylmx",
      "year": 2019,
      "content": "Ignoring the key information(all the words are the SAME length) will cause exponential time complexity.\\n\\nOtherwise, it is just linear time to check a match.",
      "voteCount": 33
    },
    {
      "name": "Jerrysuu",
      "year": 2018,
      "content": "This example waste me lots of time until I saw others\\' answer.",
      "voteCount": 29
    }
  ]
}
