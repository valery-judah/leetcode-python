{
  "category": "",
  "id": "63",
  "name": "Unique Paths II",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/unique-paths-ii/",
  "slug": "unique-paths-ii",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Dynamic Programming",
    "Matrix"
  ],
  "similar_questions": [
    {
      "title": "Unique Paths",
      "difficulty": "Medium",
      "slug": "unique-paths"
    },
    {
      "title": "Unique Paths III",
      "difficulty": "Hard",
      "slug": "unique-paths-iii"
    },
    {
      "title": "Minimum Path Cost in a Grid",
      "difficulty": "Medium",
      "slug": "minimum-path-cost-in-a-grid"
    },
    {
      "title": "Paths in Matrix Whose Sum Is Divisible by K",
      "difficulty": "Hard",
      "slug": "paths-in-matrix-whose-sum-is-divisible-by-k"
    }
  ],
  "questionId": "63",
  "questionFrontendId": "63",
  "title": "Unique Paths II",
  "titleSlug": "unique-paths-ii",
  "content": "<p>You are given an <code>m x n</code> integer array <code>grid</code>. There is a robot initially located at the <b>top-left corner</b> (i.e., <code>grid[0][0]</code>). The robot tries to move to the <strong>bottom-right corner</strong> (i.e., <code>grid[m - 1][n - 1]</code>). The robot can only move either down or right at any point in time.</p>\n\n<p>An obstacle and space are marked as <code>1</code> or <code>0</code> respectively in <code>grid</code>. A path that the robot takes cannot include <strong>any</strong> square that is an obstacle.</p>\n\n<p>Return <em>the number of possible unique paths that the robot can take to reach the bottom-right corner</em>.</p>\n\n<p>The testcases are generated so that the answer will be less than or equal to <code>2 * 10<sup>9</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/robot1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -&gt; Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right -&gt; Right\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/robot2.jpg\" style=\"width: 162px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> obstacleGrid = [[0,1],[0,0]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == obstacleGrid.length</code></li>\n\t<li><code>n == obstacleGrid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 100</code></li>\n\t<li><code>obstacleGrid[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n</ul>\n",
  "likes": 9407,
  "dislikes": 550,
  "stats": {
    "totalAccepted": "1.3M",
    "totalSubmission": "3M",
    "totalAcceptedRaw": 1302266,
    "totalSubmissionRaw": 2991908,
    "acRate": "43.5%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    },
    {
      "name": "Matrix",
      "slug": "matrix"
    }
  ],
  "metaData": {
    "name": "uniquePathsWithObstacles",
    "params": [
      {
        "name": "obstacleGrid",
        "type": "integer[][]"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "wangshuoyuan2",
      "year": 2023,
      "content": "Dude, u cannot put an obstacle at the entrance...",
      "voteCount": 304
    },
    {
      "name": "sttony",
      "year": 2019,
      "content": "robot start from (0, 0), but  (0, 0) is a obstacle.",
      "voteCount": 113
    },
    {
      "name": "21stCenturyLegend",
      "year": 2019,
      "content": "This is for C++ audience.\\nPlease note return type is mentioned int but if you are maintaining dp of int type you will always get Runtime error because of int range overflow.\\n\\nSo maintain dp of long long type.\\n\\nFinal position ( Bottom right ) will always have answer fit in integer type.\\n\\nThen you may have question why we have to maintain dp of long long type. \\n\\nReason: Consider the case when your answer at any position may overflow integer range but that position answer is not contributing to final answer because of obstacle.",
      "voteCount": 83
    },
    {
      "name": "Prajju22",
      "year": 2023,
      "content": "completed 300 days streak........",
      "voteCount": 55
    },
    {
      "name": "JustinAdams",
      "year": 2023,
      "content": "Examples could probably be a little more complex. The [[1,0]] test case was nasty.",
      "voteCount": 44
    },
    {
      "name": "mingrui",
      "year": 2019,
      "content": "Current test recognizes \"0\" as \"right\" output.\\nI think it should either be:\\n1. \"[[1]]\" is invalid input, since the robot can\\'t start in obstacles.\\n2. \"1\" as right output, since the robot is already there at start.",
      "voteCount": 25
    },
    {
      "name": "iamsuteerth",
      "year": 2023,
      "content": "Finally! I got a DP question right in a single go without taking any help!! \\nFeeling a lot more confident to tackle more difficult problems all by myself!",
      "voteCount": 22
    },
    {
      "name": "anwendeng",
      "year": 2023,
      "content": "done before. Resubmit!\nthis is a DP problem! One more hint:\n```\ndp[i][j]=0 if obstacleGrid[i][j]==1\n```",
      "voteCount": 16
    },
    {
      "name": "scaupz2013",
      "year": 2019,
      "content": "i tried the solution(c++) in disscuss,but got same error( *runtime error: signed integer overflow: 1053165744 + 1579748616 cannot be represented in type \\'int\\' (solution.cpp)*) \\nall the time **with below test case**(\\n[[0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0],[1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,1],[0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0],[1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0],[0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0],[0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1],[1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1],[0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1],[1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1],[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0]])\\n\\nanybody catch the similiar situation?please help me fix it",
      "voteCount": 14
    },
    {
      "name": "LeetCode",
      "year": 2022,
      "content": "This problem is the Daily LeetCoding Challenge for May, Day 20.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **\ud83d\udccc Do you want to learn the problem thoroughly?**\n  Read [**\u2b50  LeetCode Official Solution\u2b50**](https://leetcode.com/problems/unique-paths-ii/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain this 1 approach in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
      "voteCount": 10
    }
  ]
}
