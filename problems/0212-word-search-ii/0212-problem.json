{
  "category": "",
  "id": "212",
  "name": "Word Search II",
  "difficulty": "Hard",
  "leetcode_url": "https://leetcode.com/problems/word-search-ii/",
  "slug": "word-search-ii",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "String",
    "Backtracking",
    "Trie",
    "Matrix"
  ],
  "similar_questions": [
    {
      "title": "Word Search",
      "difficulty": "Medium",
      "slug": "word-search"
    },
    {
      "title": "Unique Paths III",
      "difficulty": "Hard",
      "slug": "unique-paths-iii"
    },
    {
      "title": "Encrypt and Decrypt Strings",
      "difficulty": "Hard",
      "slug": "encrypt-and-decrypt-strings"
    }
  ],
  "questionId": "212",
  "questionFrontendId": "212",
  "title": "Word Search II",
  "titleSlug": "word-search-ii",
  "content": "<p>Given an <code>m x n</code> <code>board</code>&nbsp;of characters and a list of strings <code>words</code>, return <em>all words on the board</em>.</p>\n\n<p>Each word must be constructed from letters of sequentially adjacent cells, where <strong>adjacent cells</strong> are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/07/search1.jpg\" style=\"width: 322px; height: 322px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;o&quot;,&quot;a&quot;,&quot;a&quot;,&quot;n&quot;],[&quot;e&quot;,&quot;t&quot;,&quot;a&quot;,&quot;e&quot;],[&quot;i&quot;,&quot;h&quot;,&quot;k&quot;,&quot;r&quot;],[&quot;i&quot;,&quot;f&quot;,&quot;l&quot;,&quot;v&quot;]], words = [&quot;oath&quot;,&quot;pea&quot;,&quot;eat&quot;,&quot;rain&quot;]\n<strong>Output:</strong> [&quot;eat&quot;,&quot;oath&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/07/search2.jpg\" style=\"width: 162px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> board = [[&quot;a&quot;,&quot;b&quot;],[&quot;c&quot;,&quot;d&quot;]], words = [&quot;abcb&quot;]\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == board.length</code></li>\n\t<li><code>n == board[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 12</code></li>\n\t<li><code>board[i][j]</code> is a lowercase English letter.</li>\n\t<li><code>1 &lt;= words.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 10</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n\t<li>All the strings of <code>words</code> are unique.</li>\n</ul>\n",
  "likes": 9960,
  "dislikes": 500,
  "stats": {
    "totalAccepted": "825.8K",
    "totalSubmission": "2.2M",
    "totalAcceptedRaw": 825849,
    "totalSubmissionRaw": 2197217,
    "acRate": "37.6%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Backtracking",
      "slug": "backtracking"
    },
    {
      "name": "Trie",
      "slug": "trie"
    },
    {
      "name": "Matrix",
      "slug": "matrix"
    }
  ],
  "metaData": {
    "name": "findWords",
    "params": [
      {
        "name": "board",
        "type": "character[][]"
      },
      {
        "name": "words",
        "type": "string[]"
      }
    ],
    "return": {
      "type": "list<string>"
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": false,
        "name": "Amazon",
        "slug": "amazon",
        "timesEncountered": 14
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "okinawa",
      "year": 2021,
      "content": "This question is the reason I lost Uber interview.\\nRead the solution well guys and don\\'t be in my position \\uD83D\\uDE13",
      "voteCount": 300
    },
    {
      "name": "keidakira1412",
      "year": 2022,
      "content": "After solving this problem, I can\\n- Build a crossword puzzle app\\n- Add it to my resume\\n- Hope to get a job",
      "voteCount": 185
    },
    {
      "name": "palakons",
      "year": 2022,
      "content": "finally avoid TLE with Trie (with capability to remove)\\nthe last eight hours has been fun",
      "voteCount": 141
    },
    {
      "name": "ahmdsolmn",
      "year": 2022,
      "content": "I believe the description of this problem should be changed to clearly explain that the output should not contain duplicate words.",
      "voteCount": 121
    },
    {
      "name": "alpharomeo99",
      "year": 2022,
      "content": "I guess can\\'t avoid Trie anymore.",
      "voteCount": 79
    },
    {
      "name": "ak_3101",
      "year": 2023,
      "content": "After 2.5 hours of debugging and struggle, I officially hate this question. ",
      "voteCount": 72
    },
    {
      "name": "disturbedbrown1",
      "year": 2022,
      "content": "I feel like the question description can be more explicit instead of making us discover certain requirements (no duplicates etc) on our own.",
      "voteCount": 49
    },
    {
      "name": "mickey3d",
      "year": 2020,
      "content": "The problem statement implies that you have to put words into a Trie and run DFS on the adjacent letters on board, with checking if given DFS iteration backtracked solution is included in a Trie, built with words.\\n\\nI was trying to do vise versa and ended up with time-exceeded error, cos if you try to build a Trie with all combinations of adjacent letter on the board, you end up with really big Trie and instant search. The majority of time is spent building Trie and few last leetcode tests time out during this stage.\\n\\nThere is tradeoff b/w search time of dfs based on the board info (leetcode accepted)  and time spent on building Trie based on board letters (leetcode does not accept this solution).",
      "voteCount": 33
    },
    {
      "name": "mayursonowal7",
      "year": 2023,
      "content": "This is ridiculous. How am I supposed to solve this in an interview if I\\'ve never seen it before lol",
      "voteCount": 32
    },
    {
      "name": "JorgeLDB",
      "year": 2022,
      "content": "![image](https://i.ibb.co/FHXHs0d/leet.jpg)\\n\\nHmm... at least I\\'m almost there. ",
      "voteCount": 20
    }
  ]
}
