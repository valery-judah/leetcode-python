{
  "category": "",
  "id": "144",
  "name": "Binary Tree Preorder Traversal",
  "difficulty": "Easy",
  "leetcode_url": "https://leetcode.com/problems/binary-tree-preorder-traversal/",
  "slug": "binary-tree-preorder-traversal",
  "isPaidOnly": false,
  "tags": [
    "Stack",
    "Tree",
    "Depth-First Search",
    "Binary Tree"
  ],
  "similar_questions": [
    {
      "title": "Binary Tree Inorder Traversal",
      "difficulty": "Easy",
      "slug": "binary-tree-inorder-traversal"
    },
    {
      "title": "Verify Preorder Sequence in Binary Search Tree",
      "difficulty": "Medium",
      "slug": "verify-preorder-sequence-in-binary-search-tree"
    },
    {
      "title": "N-ary Tree Preorder Traversal",
      "difficulty": "Easy",
      "slug": "n-ary-tree-preorder-traversal"
    },
    {
      "title": "Kth Largest Sum in a Binary Tree",
      "difficulty": "Medium",
      "slug": "kth-largest-sum-in-a-binary-tree"
    }
  ],
  "questionId": "144",
  "questionFrontendId": "144",
  "title": "Binary Tree Preorder Traversal",
  "titleSlug": "binary-tree-preorder-traversal",
  "content": "<p>Given the <code>root</code> of a binary tree, return <em>the preorder traversal of its nodes&#39; values</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,null,2,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1,2,3]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/screenshot-2024-08-29-202743.png\" style=\"width: 200px; height: 264px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,2,3,4,5,null,8,null,null,6,7,9]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1,2,4,5,6,7,3,8,9]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/08/29/tree_2.png\" style=\"width: 350px; height: 286px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = []</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1]</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>\n",
  "likes": 8582,
  "dislikes": 227,
  "stats": {
    "totalAccepted": "2.2M",
    "totalSubmission": "2.9M",
    "totalAcceptedRaw": 2169273,
    "totalSubmissionRaw": 2929835,
    "acRate": "74.0%"
  },
  "topicTags": [
    {
      "name": "Stack",
      "slug": "stack"
    },
    {
      "name": "Tree",
      "slug": "tree"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Binary Tree",
      "slug": "binary-tree"
    }
  ],
  "metaData": {
    "name": "preorderTraversal",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "list<integer>",
      "dealloc": true
    }
  },
  "discussion_posts": [
    {
      "name": "chris-k",
      "year": 2023,
      "content": "I remember the days when I couldn\\'t solve this. Look how far we\\'ve come.",
      "voteCount": 317
    },
    {
      "name": "rushi_4123",
      "year": 2023,
      "content": "Remember : \\nPreorder Traversal : Root | Left | Right",
      "voteCount": 120
    },
    {
      "name": "kenzoengineer",
      "year": 2023,
      "content": "thank you daddy leetcode for giving us this question after \"Max Points on a Line\"",
      "voteCount": 75
    },
    {
      "name": "neopraveen",
      "year": 2023,
      "content": "Just a little addition for whom tree is new :\\nPreOrder Traversal -> In preorder traversal, the root node is visited first, then left subtree and then right subtree.\\nIt\\'s required simple recursive solution. You just need to add your current node in the List (it may be a class level variable) and traverse left and right node with same recursive function. That\\'s it, no more line of code is required, the same function will take care of whole tree traversal. Maybe the solution is looking very easy, but believe me it\\'s more easier than you think.\\nPS - Please don\\'t forget to check if current node is null or not, in example you can see a node with null value.\\n\\nIf I am helpful, you know how you can motivate me :)\\nHappy coding.",
      "voteCount": 63
    },
    {
      "name": "space_invader",
      "year": 2023,
      "content": "![2023-01-09 15.32.48.jpg](https://assets.leetcode.com/users/images/2323c791-f48e-431d-a064-499d1a314186_1673260399.4520557.jpeg)",
      "voteCount": 26
    },
    {
      "name": "ritteh",
      "year": 2021,
      "content": "The problem statement indicates the recurrsive version is trivial. How can it be trivial for anyone who has never done trees before? There is exactly zero guidance on how to do it. What terrible training. Fortunately there is Google and I was able to solve it.",
      "voteCount": 26
    },
    {
      "name": "Mr_Fish",
      "year": 2019,
      "content": "Just out of curiosity. I am perfectly capable of coming up with BFS or DFS of traversing a tree as well as just recursion. \\n\\nWill knowing Morris Traversal help you in an interview? I mean while it has O(1) space, it actually has O(2*n) time complexity and time complexity is more significant in an interview.",
      "voteCount": 20
    },
    {
      "name": "rushi_4123",
      "year": 2023,
      "content": "Recursive approach is quite trivial, can you code it iteravtively!!",
      "voteCount": 11
    },
    {
      "name": "tjin94",
      "year": 2019,
      "content": "as the title suggests, my code fails for this:\\n\\n[3,5,1,4,2]\\n\\ntest case(testcase66) and i have no idea how they visualize this input tree \\xA0 as the example is too short..",
      "voteCount": 9
    },
    {
      "name": "llufan",
      "year": 2019,
      "content": "`const preorderTraversal = (root) => root ? [root.val, ...preorderTraversal(root.left), ...preorderTraversal(root.right)] : []`",
      "voteCount": 6
    }
  ]
}
