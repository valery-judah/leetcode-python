{
  "category": "",
  "id": "130",
  "name": "Surrounded Regions",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/surrounded-regions/",
  "slug": "surrounded-regions",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Depth-First Search",
    "Breadth-First Search",
    "Union Find",
    "Matrix"
  ],
  "similar_questions": [
    {
      "title": "Number of Islands",
      "difficulty": "Medium",
      "slug": "number-of-islands"
    },
    {
      "title": "Walls and Gates",
      "difficulty": "Medium",
      "slug": "walls-and-gates"
    }
  ],
  "questionId": "130",
  "questionFrontendId": "130",
  "title": "Surrounded Regions",
  "titleSlug": "surrounded-regions",
  "content": "<p>You are given an <code>m x n</code> matrix <code>board</code> containing <strong>letters</strong> <code>&#39;X&#39;</code> and <code>&#39;O&#39;</code>, <strong>capture regions</strong> that are <strong>surrounded</strong>:</p>\n\n<ul>\n\t<li><strong>Connect</strong>: A cell is connected to adjacent cells horizontally or vertically.</li>\n\t<li><strong>Region</strong>: To form a region <strong>connect every</strong> <code>&#39;O&#39;</code> cell.</li>\n\t<li><strong>Surround</strong>: The region is surrounded with <code>&#39;X&#39;</code> cells if you can <strong>connect the region </strong>with <code>&#39;X&#39;</code> cells and none of the region cells are on the edge of the <code>board</code>.</li>\n</ul>\n\n<p>To capture a <strong>surrounded region</strong>, replace all <code>&#39;O&#39;</code>s with <code>&#39;X&#39;</code>s <strong>in-place</strong> within the original board. You do not need to return anything.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">board = [[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;O&quot;,&quot;O&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;X&quot;,&quot;O&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;O&quot;,&quot;X&quot;,&quot;X&quot;]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;O&quot;,&quot;X&quot;,&quot;X&quot;]]</span></p>\n\n<p><strong>Explanation:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/xogrid.jpg\" style=\"width: 367px; height: 158px;\" />\n<p>In the above diagram, the bottom region is not captured because it is on the edge of the board and cannot be surrounded.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">board = [[&quot;X&quot;]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[[&quot;X&quot;]]</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == board.length</code></li>\n\t<li><code>n == board[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>board[i][j]</code> is <code>&#39;X&#39;</code> or <code>&#39;O&#39;</code>.</li>\n</ul>\n",
  "likes": 9505,
  "dislikes": 2139,
  "stats": {
    "totalAccepted": "1M",
    "totalSubmission": "2.4M",
    "totalAcceptedRaw": 1034635,
    "totalSubmissionRaw": 2371964,
    "acRate": "43.6%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Union Find",
      "slug": "union-find"
    },
    {
      "name": "Matrix",
      "slug": "matrix"
    }
  ],
  "metaData": {
    "name": "solve",
    "params": [
      {
        "name": "board",
        "type": "character[][]"
      }
    ],
    "return": {
      "type": "void"
    },
    "output": {
      "paramindex": 0
    }
  },
  "discussion_posts": [
    {
      "name": "butterman1986",
      "year": 2016,
      "content": "I felt that the problem statement was difficult to understand as it and the associated example don't clearly indicate what surrounded means. An 'O' is surrounded if there is **NO** path from it to the boundary of the matrix (ie. row index 0, column index 0, row index matrix.length-1, column index matrix[0].length-1) when moving in a North, South, East, or West direction :). Hope this helps anyone else who was unclear.",
      "voteCount": 958
    },
    {
      "name": "__anu__",
      "year": 2023,
      "content": "Just to save you some time, it\\'s alphabet \\'O\\' and not number \\'0\\'",
      "voteCount": 473
    },
    {
      "name": "dsapelnikov",
      "year": 2023,
      "content": "One of the worst-formulated porblems I have ever seen on leetcode. No explanation of rules, one poor example, but a pretty strict runtime limit. The author is a horrible person.",
      "voteCount": 438
    },
    {
      "name": "mrigankshekhar27",
      "year": 2019,
      "content": "Leetcode should give more examples. I had to wast so much time running and testing different test cases. \\n And, after all of this, I learned nothing.",
      "voteCount": 183
    },
    {
      "name": "piyushsharmaleetcode",
      "year": 2021,
      "content": "1) All the \"O\" that are not directly/indirectly connected to the \"O\" on the boundary line, will be captured and converted into \"X\"\\n2) Just traverse the matrix once, and as soon as your enounter a boundary line that has a \"O\" in it, run DFS on this \"O\" and \"Save\" all the nehgbours of this \"O\" from being captured by calling them \"S\"\\n3) Now traverse the matrix again and capture all the \"O\" that you can inside the matrix except the boundary line\\n4) Rename the \"Save\" O back to \"O\"\\n5) Done!",
      "voteCount": 139
    },
    {
      "name": "LeetCode",
      "year": 2021,
      "content": "This problem is the Daily LeetCoding Challenge for November, Day 1.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **\ud83d\udccc Do you want to learn the problem thoroughly?**\n  Read [**\u2b50  LeetCode Official Solution\u2b50**](https://leetcode.com/problems/surrounded-regions/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** DFS (Depth-First Search)\n\n  \n**Approach 2:** BFS (Breadth-First Search)\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
      "voteCount": 88
    },
    {
      "name": "user196",
      "year": 2016,
      "content": "130. Surrounded Regions needs either 1-2 more example or clear definition of \"Surrounded\"",
      "voteCount": 58
    },
    {
      "name": "shx",
      "year": 2015,
      "content": "for example:\\n\\nx x x x\\n\\nx o o x\\n\\nx x o x\\n\\nx o x x\\n\\nwhy the above three 'o' are surrounded regions? I mean, the 'o' in the third row has another 'o' neighbored to it,so why it is still surrounded region?",
      "voteCount": 26
    },
    {
      "name": "qhan",
      "year": 2024,
      "content": "Some useful testcases\\n```\\n[[\"O\",\"X\",\"X\",\"O\",\"X\"],\\n[\"X\",\"O\",\"O\",\"X\",\"O\"],\\n[\"X\",\"O\",\"X\",\"O\",\"X\"],\\n[\"O\",\"X\",\"O\",\"O\",\"O\"],\\n[\"X\",\"X\",\"O\",\"X\",\"O\"]]\\n```\\n```\\n[[\"O\",\"O\",\"O\",\"O\",\"X\",\"X\"],\\n[\"O\",\"O\",\"O\",\"O\",\"O\",\"O\"],\\n[\"O\",\"X\",\"O\",\"X\",\"O\",\"O\"],\\n[\"O\",\"X\",\"O\",\"O\",\"X\",\"O\"],\\n[\"O\",\"X\",\"O\",\"X\",\"O\",\"O\"],\\n[\"O\",\"X\",\"O\",\"O\",\"O\",\"O\"]]\\n```\\n```\\n[[\"X\",\"O\",\"X\",\"O\",\"X\",\"O\",\"O\",\"O\",\"X\",\"O\"],\\n[\"X\",\"O\",\"O\",\"X\",\"X\",\"X\",\"O\",\"O\",\"O\",\"X\"],\\n[\"O\",\"O\",\"O\",\"O\",\"O\",\"O\",\"O\",\"O\",\"X\",\"X\"],\\n[\"O\",\"O\",\"O\",\"O\",\"O\",\"O\",\"X\",\"O\",\"O\",\"X\"],\\n[\"O\",\"O\",\"X\",\"X\",\"O\",\"X\",\"X\",\"O\",\"O\",\"O\"],\\n[\"X\",\"O\",\"O\",\"X\",\"X\",\"X\",\"O\",\"X\",\"X\",\"O\"],\\n[\"X\",\"O\",\"X\",\"O\",\"O\",\"X\",\"X\",\"O\",\"X\",\"O\"],\\n[\"X\",\"X\",\"O\",\"X\",\"X\",\"O\",\"X\",\"O\",\"O\",\"X\"],\\n[\"O\",\"O\",\"O\",\"O\",\"X\",\"O\",\"X\",\"O\",\"X\",\"O\"],\\n[\"X\",\"X\",\"O\",\"X\",\"X\",\"X\",\"X\",\"O\",\"O\",\"O\"]]\\n```",
      "voteCount": 25
    },
    {
      "name": "Yumi_C",
      "year": 2019,
      "content": "input=\\n[[\"O\",\"X\",\"X\",\"O\",\"X\"],   \\n [\"X\",\"O\",\"O\",\"X\",\"O\"],\\n [\"X\",\"O\",\"X\",\"O\",\"X\"],\\n [\"O\",\"X\",\"O\",\"O\",\"O\"],\\n [\"X\",\"X\",\"O\",\"X\",\"O\"]]\\n\\nexpect =\\n[[\"O\",\"X\",\"X\",\"O\",\"X\"],\\n  [\"X\",\"X\",\"X\",\"X\",\"O\"],\\n  [\"X\",\"X\",\"X\",\"O\",\"X\"],\\n  [\"O\",\"X\",\"O\",\"O\",\"O\"],\\n  [\"X\",\"X\",\"O\",\"X\",\"O\"]]\\n  \\n   since  board[2][3] does not on the boarder and does not connect to anything on the boder, it suppose to flip to \"X\" ,right? why it stay the same?",
      "voteCount": 23
    }
  ]
}
