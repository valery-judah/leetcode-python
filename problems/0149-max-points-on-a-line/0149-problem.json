{
  "category": "",
  "id": "149",
  "name": "Max Points on a Line",
  "difficulty": "Hard",
  "leetcode_url": "https://leetcode.com/problems/max-points-on-a-line/",
  "slug": "max-points-on-a-line",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Hash Table",
    "Math",
    "Geometry"
  ],
  "similar_questions": [
    {
      "title": "Line Reflection",
      "difficulty": "Medium",
      "slug": "line-reflection"
    },
    {
      "title": "Minimum Number of Lines to Cover Points",
      "difficulty": "Medium",
      "slug": "minimum-number-of-lines-to-cover-points"
    },
    {
      "title": "Minimum Lines to Represent a Line Chart",
      "difficulty": "Medium",
      "slug": "minimum-lines-to-represent-a-line-chart"
    },
    {
      "title": "Count Special Subsequences",
      "difficulty": "Medium",
      "slug": "count-special-subsequences"
    }
  ],
  "questionId": "149",
  "questionFrontendId": "149",
  "title": "Max Points on a Line",
  "titleSlug": "max-points-on-a-line",
  "content": "<p>Given an array of <code>points</code> where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> represents a point on the <strong>X-Y</strong> plane, return <em>the maximum number of points that lie on the same straight line</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/25/plane1.jpg\" style=\"width: 300px; height: 294px;\" />\n<pre>\n<strong>Input:</strong> points = [[1,1],[2,2],[3,3]]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/25/plane2.jpg\" style=\"width: 300px; height: 294px;\" />\n<pre>\n<strong>Input:</strong> points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= points.length &lt;= 300</code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n\t<li>All the <code>points</code> are <strong>unique</strong>.</li>\n</ul>\n",
  "likes": 4409,
  "dislikes": 564,
  "stats": {
    "totalAccepted": "481.3K",
    "totalSubmission": "1.6M",
    "totalAcceptedRaw": 481261,
    "totalSubmissionRaw": 1638173,
    "acRate": "29.4%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "Math",
      "slug": "math"
    },
    {
      "name": "Geometry",
      "slug": "geometry"
    }
  ],
  "metaData": {
    "name": "maxPoints",
    "params": [
      {
        "name": "points",
        "type": "integer[][]"
      }
    ],
    "return": {
      "type": "integer"
    }
  },
  "discussion_posts": [
    {
      "name": "pieceofpie",
      "year": 2023,
      "content": "One week of easy problems, then one week of extremely hard brain damage problems, starting with this one. Prepare for the worst guys.",
      "voteCount": 188
    },
    {
      "name": "yliu8949",
      "year": 2020,
      "content": "whoever put in the test case that contains points of the same coordinates is pure evil. It\\'s making the problem unnessarily complicated",
      "voteCount": 100
    },
    {
      "name": "neunzehn",
      "year": 2019,
      "content": "Input: [[0,0]]\\nOutput: 0\\nExpected: 1\\nThe questions asks \"Given n points on a 2D plane, find the maximum number of points that lie on the same straight line\". Now one can maybe make a case that a single point does lie on the same straight line IF AND ONLY IF ONE PROVIDES SUCH A LINE.",
      "voteCount": 63
    },
    {
      "name": "yjiang01",
      "year": 2016,
      "content": "obviously, two parallel lines have the same slope but they are DIFFERENT straight lines.I don't understand. any help? thanks.",
      "voteCount": 43
    },
    {
      "name": "amanchandna",
      "year": 2023,
      "content": "Points on a same line means I need to find out the slope.\\nslope for any two points = `slope= y2-y1/x2-x1`\\nfor every `x[i],y[i]` I need to find out the slope, if the same slope exists I\\'ll increment the count.\\n**NOTE** : the result of slope will be a double, so for ease lets take `x = x2-x1, y =y2-y1`\\nand we can store this slope as a String  `key = x + \"-\" + y`\\n**Edge Case 1 for Storing Values** = 12/6 == 2/1 to resolve this issue I will :\\n`x /= gcd(x,y), y /= gcd(x,y)`\\n**Edge Case 2 for storing values** = negative values \\nif `both x and y are negative, store as +ve values`\\nelse : if one of them is negative for ease `make x as negative and y positive` to get same slope of all points\\n**Edge Case 3 for repeated points** = if `x2 == x1 and y2==y1` handle a `count` for repeated values and add into your answer\\n**Don\\'t jump to solution directly** : [solution](https://leetcode.com/problems/max-points-on-a-line/solutions/3016695/easy-java-solution//)",
      "voteCount": 37
    },
    {
      "name": "MrZydeco",
      "year": 2020,
      "content": "It\\'s **INFURIATING** how imprecise computer scientists are at stating problems.\\nWho is to know that [0,0] at index 0 in the list points is a DIFFERENT point from [0, 0] in the list points with index 1. unless they submit their code and get \"Wrong Answer\".\\n\\nThe reason that I\\'m objecting so vehemenly is that this materially affects the approach to the problem.  Yopu shouldn\\'t have to discover the requirements by submitting your code and getting it marked wrong.\\n\\nA better way to word this problem is:\\n\\nGiven a sequence of points of 2D lattice* points, find the maximum length of a subsequence all of whose points lie on the same straight line.\\n\\nThis allows for duplicates in the sequence -- the problem as stated really does not.\\n(A lattice point is one whose coordinates are integers)",
      "voteCount": 28
    },
    {
      "name": "zeroand1only",
      "year": 2023,
      "content": "This is supposed to be testing someone\\'s coding ability, not their math/geometry knowledge - so it would be more considerate to provide more relevant context information, which is how to determine if 3 points are co-linear.",
      "voteCount": 23
    },
    {
      "name": "EtherWei",
      "year": 2019,
      "content": "Now I understand why there are so many downvotes on this problem.",
      "voteCount": 22
    },
    {
      "name": "kylinzhuo",
      "year": 2017,
      "content": "![0_1501735549057_2aac80da-23ca-49d9-85f1-f934c1908e5d-image.png](/assets/uploads/files/1501735549965-2aac80da-23ca-49d9-85f1-f934c1908e5d-image-resized.png) \\n\\nI've tried calculating the slopes and count them using map, but was failing a test case all the time. No matter how many digits I set for the float it just seemed that 94911150/94911151 equals 94911151/94911152. \\n\\n???!\\n\\n![0_1501735572971_119030a3-7f7e-40fb-99e0-0307d01bd99b-image.png](/assets/uploads/files/1501735573552-119030a3-7f7e-40fb-99e0-0307d01bd99b-image-resized.png) \\n\\nIt was crazy. Anyone could help me?",
      "voteCount": 15
    },
    {
      "name": "zzzdevil",
      "year": 2014,
      "content": "I have checked all the posts and found there are two ways to represent a line:\\n\\n 1. ax + by = c, which can cover all cases but requires a gcd\\n    function for normalization. \\n 2. y = kx + d, which is simple but cannot cover the lines parallel to x-axis.\\n\\nI think it is hard to say which is better. However, I prefer the latter...Anybody knows a better way?\\n\\nIn my submission code, I take the dynamic programming idea and use the y=kx+d representation. Due to the divide-and-conquer, we only need the slope k (d is not necessary any more) as the unique key for each line. This approach is much clear and only one value as hash key. The time complexity is still O(n^2) but the average time cost should be better.\\n\\nYou can also review my code in my blog: http://www.cnblogs.com/zzzdevil/p/3513294.html\\n\\nIt is a blog hosting in Chinese, but the post is in English...\\n\\nSorry for the ugly English...",
      "voteCount": 14
    }
  ]
}
