{
  "category": "",
  "id": "841",
  "name": "Keys and Rooms",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/keys-and-rooms/",
  "slug": "keys-and-rooms",
  "isPaidOnly": false,
  "tags": [
    "Depth-First Search",
    "Breadth-First Search",
    "Graph"
  ],
  "similar_questions": [
    {
      "title": "Graph Valid Tree",
      "difficulty": "Medium",
      "slug": "graph-valid-tree"
    }
  ],
  "questionId": "871",
  "questionFrontendId": "841",
  "title": "Keys and Rooms",
  "titleSlug": "keys-and-rooms",
  "content": "<p>There are <code>n</code> rooms labeled from <code>0</code> to <code>n - 1</code>&nbsp;and all the rooms are locked except for room <code>0</code>. Your goal is to visit all the rooms. However, you cannot enter a locked room without having its key.</p>\n\n<p>When you visit a room, you may find a set of <strong>distinct keys</strong> in it. Each key has a number on it, denoting which room it unlocks, and you can take all of them with you to unlock the other rooms.</p>\n\n<p>Given an array <code>rooms</code> where <code>rooms[i]</code> is the set of keys that you can obtain if you visited room <code>i</code>, return <code>true</code> <em>if you can visit <strong>all</strong> the rooms, or</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> rooms = [[1],[2],[3],[]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \nWe visit room 0 and pick up key 1.\nWe then visit room 1 and pick up key 2.\nWe then visit room 2 and pick up key 3.\nWe then visit room 3.\nSince we were able to visit every room, we return true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> rooms = [[1,3],[3,0,1],[2],[0]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> We can not enter room number 2 since the only key that unlocks it is in that room.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == rooms.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 1000</code></li>\n\t<li><code>0 &lt;= rooms[i].length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= sum(rooms[i].length) &lt;= 3000</code></li>\n\t<li><code>0 &lt;= rooms[i][j] &lt; n</code></li>\n\t<li>All the values of <code>rooms[i]</code> are <strong>unique</strong>.</li>\n</ul>\n",
  "likes": 6514,
  "dislikes": 296,
  "stats": {
    "totalAccepted": "614.9K",
    "totalSubmission": "819.8K",
    "totalAcceptedRaw": 614852,
    "totalSubmissionRaw": 819827,
    "acRate": "75.0%"
  },
  "topicTags": [
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Graph",
      "slug": "graph"
    }
  ],
  "metaData": {
    "name": "canVisitAllRooms",
    "params": [
      {
        "name": "rooms",
        "type": "list<list<integer>>"
      }
    ],
    "return": {
      "type": "boolean"
    }
  },
  "discussion_posts": [
    {
      "name": "benb127",
      "year": 2022,
      "content": "Everyone on here saying this should be an easy one can really discourage those who don\\'t already know the algorithms used and are studying on their own (cough me cough). I don\\'t think raising your hand and saying \\'hey teach that was mislabeled\\' is helping as much as it is hurting",
      "voteCount": 199
    },
    {
      "name": "dev_mooie",
      "year": 2022,
      "content": "This question should be labeled easy.",
      "voteCount": 34
    },
    {
      "name": "topswe",
      "year": 2022,
      "content": "Use dfs. Maintain a visited set of rooms. Return len(visited) == len(rooms).",
      "voteCount": 28
    },
    {
      "name": "sabraham296",
      "year": 2020,
      "content": "Input:\\n[[2],[],[1]]\\nOutput:\\nfalse\\nExpected:\\ntrue\\n\\nHello fello Leetcoders,\\n\\nI am implementing a hashtable dictionary to solve this and it works well but I can\\'t understand why it can\\'t pass this test case. According to the description, you need key 1 in order to go to room one. There is no key 1 in room 0 so how can expected answer be true?? If someone can explain if I am not understanding the description or if this is a faulty test case (doubt it). \\n\\nThank you in advance.",
      "voteCount": 28
    },
    {
      "name": "defood",
      "year": 2018,
      "content": "There is no constraint on only visiting the rooms in order",
      "voteCount": 26
    },
    {
      "name": "hulponot",
      "year": 2022,
      "content": "is it me, or yesterday\\' easy was much harder? :)",
      "voteCount": 23
    },
    {
      "name": "alexey0206",
      "year": 2022,
      "content": "There is no reference that i can visit the room in any order, and according to provided test cases I made a suspection than I should, but it is a mistake. It would be better to mention it in discription...",
      "voteCount": 16
    },
    {
      "name": "himanshu_309",
      "year": 2024,
      "content": "TestCase: \\n[[1],[2],[3],[]]\\n[[1,3],[3,0,1],[2],[0]]\\n[[2],[],[1]]\\n[ [1, 3] , [1, 4] , [2, 3, 4, 1] , [ ] , [4, 3, 2] ]\\n[[1], [ ], [ 0,3 ], [ 1 ]]\\n[[],[1,15,18],[16],[2,3,9,11,17,5],[15,19,8,12,14],[10,1,6],[12,9,11],[],[7],[13],[3],[16,2],[4],[18,13],[7,17],[6],[14,4],[5],[8,19],[10]]\\n[[1],[],[0,3],[1]]\\n[[1,3],[1,4],[2,3,4,1],[],[4,3,2]]",
      "voteCount": 12
    },
    {
      "name": "asieber",
      "year": 2019,
      "content": "The following sentence:\\n\\n\"You can walk back and forth between rooms freely.\"\\n\\nshould be changed to:\\n\\n\"You can walk back and forth between **unlocked** rooms freely.\"\\n\\nI thought this was a backtracking question and didn\\'t realize I didn\\'t have to unlock these rooms in a single sequence of N unlocks. Rather, I could unlock a room, go there, walk right back to the previous room and unlock another room all in the same sequence. The following example might help clarify this as well:\\n\\nExample:\\n\\nInput: [[1,2,3],[],[],[]]\\nOutput: true\\nExplanation:  \\nWe start in room 0, and pick up key 1.\\nWe then go to room 1.\\nWe then return to room 0, and pick up key 2.\\nWe then go to room 2.\\nWe then return to room 0, and pick up key 3.\\nWe then go to room 3.\\nSince we were able to go to every room, we return true.",
      "voteCount": 10
    },
    {
      "name": "itsvenkis",
      "year": 2024,
      "content": "The example in the question may lead to a misunderstanding, as it implies that rooms are visited sequentially. However, upon submitting your answer, you realize that rooms can actually be visited in any order.",
      "voteCount": 7
    }
  ]
}
