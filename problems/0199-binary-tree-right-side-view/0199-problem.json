{
  "category": "",
  "id": "199",
  "name": "Binary Tree Right Side View",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/binary-tree-right-side-view/",
  "slug": "binary-tree-right-side-view",
  "isPaidOnly": false,
  "tags": [
    "Tree",
    "Depth-First Search",
    "Breadth-First Search",
    "Binary Tree"
  ],
  "similar_questions": [
    {
      "title": "Populating Next Right Pointers in Each Node",
      "difficulty": "Medium",
      "slug": "populating-next-right-pointers-in-each-node"
    },
    {
      "title": "Boundary of Binary Tree",
      "difficulty": "Medium",
      "slug": "boundary-of-binary-tree"
    }
  ],
  "questionId": "199",
  "questionFrontendId": "199",
  "title": "Binary Tree Right Side View",
  "titleSlug": "binary-tree-right-side-view",
  "content": "<p>Given the <code>root</code> of a binary tree, imagine yourself standing on the <strong>right side</strong> of it, return <em>the values of the nodes you can see ordered from top to bottom</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,2,3,null,5,null,4]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1,3,4]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/11/24/tmpd5jn43fs-1.png\" style=\"width: 400px; height: 207px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,2,3,4,null,null,null,5]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1,3,4,5]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/11/24/tmpkpe40xeh-1.png\" style=\"width: 400px; height: 214px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = [1,null,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1,3]</span></p>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">root = []</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
  "likes": 12998,
  "dislikes": 1064,
  "stats": {
    "totalAccepted": "2M",
    "totalSubmission": "2.9M",
    "totalAcceptedRaw": 1957988,
    "totalSubmissionRaw": 2877736,
    "acRate": "68.0%"
  },
  "topicTags": [
    {
      "name": "Tree",
      "slug": "tree"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Binary Tree",
      "slug": "binary-tree"
    }
  ],
  "metaData": {
    "name": "rightSideView",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "list<integer>",
      "dealloc": true
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": false,
        "name": "Meta",
        "slug": "facebook",
        "timesEncountered": 130
      },
      {
        "taggedByAdmin": true,
        "name": "Amazon",
        "slug": "amazon",
        "timesEncountered": 13
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "trannguyen",
      "year": 2021,
      "content": "Give the `root` of the binary tree, return the values of the right most node at each level of the tree from top to bottom.\\n\\nA useful test case for this problem would be:\\n**Input**: root = [1,2,3,null,5,6,null,4]\\n\\nTree visualizer: \\n\\n<img src=\"https://assets.leetcode.com/users/images/cef92daf-88dd-46b5-a329-b179916c6482_1618278364.1240458.png\" alt=\"closed_paren\" title=\"Closed Parenthesis\" width=\"350\" height=\"250\"/>\\n\\nThe output would be: [1,3,6,4]\\n\\n",
      "voteCount": 662
    },
    {
      "name": "OweMillionNeedFANG",
      "year": 2023,
      "content": "Horrible examples again :) thought the problem was easy  and traverse right. ",
      "voteCount": 604
    },
    {
      "name": "mayursonowal7",
      "year": 2023,
      "content": "Cmon leetcode. For once, could you give me a useful testcase and not the bullshit sample case that you have given above?",
      "voteCount": 369
    },
    {
      "name": "ahmedsamara",
      "year": 2023,
      "content": "Ambiguous description.",
      "voteCount": 189
    },
    {
      "name": "chrisportka",
      "year": 2023,
      "content": "Poor wording and example in this one.  I believe what you're saying is that we want rightmost node on every level of the tree.  Otherwise it reads (and the example shows) we just want the rightmost all the time - like a DFS that is always going right.",
      "voteCount": 102
    },
    {
      "name": "asish_cse",
      "year": 2019,
      "content": "For input [1,2], output should be 1 only but they accept output as [1,2]. how this happened? Can anyone explain it?",
      "voteCount": 91
    },
    {
      "name": "vickydas",
      "year": 2023,
      "content": "Solve this problem => 102. Binary Tree Level Order Traversal to easily solve this problem.",
      "voteCount": 73
    },
    {
      "name": "mddrill",
      "year": 2020,
      "content": "What does \"the right side of the tree\" mean? That could be enterpreted many ways.",
      "voteCount": 33
    },
    {
      "name": "AcerPacemaker",
      "year": 2020,
      "content": "There is only one example. What do they mean when they say right side? One of the test cases is [1,2,3,4] and the answer is [1,3,4]. I thought the answer would be [1,3] because that is the right side of the tree. But obviously that\\'s not what they mean. Can someone explain the prompt a bit more?",
      "voteCount": 33
    },
    {
      "name": "69Code",
      "year": 2024,
      "content": "A LOT of people are confused with the test cases and how a left node is being counter as answer in right view of tree. \\nTo understand this, firstly understand that the problem is not asking about the right most node of RIGHT part of the tree.. INSTEAD it\\'s asking that if you look at the tree from the right side, which nodes will you see. \\nSo understandably, if at a particular level there are no nodes on the right side of the tree than you\\'ll be able to see the node from the left side of tree through that blank area window at right side.\\nI hope this helps understand the problem and cases better.",
      "voteCount": 30
    }
  ]
}
