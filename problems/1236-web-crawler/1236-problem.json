{
  "category": "",
  "id": "1236",
  "name": "Web Crawler",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/web-crawler/",
  "slug": "web-crawler",
  "isPaidOnly": true,
  "tags": [
    "String",
    "Depth-First Search",
    "Breadth-First Search",
    "Interactive"
  ],
  "similar_questions": [
    {
      "title": "Web Crawler Multithreaded",
      "difficulty": "Medium",
      "slug": "web-crawler-multithreaded"
    }
  ],
  "questionId": "1271",
  "questionFrontendId": "1236",
  "title": "Web Crawler",
  "titleSlug": "web-crawler",
  "content": "<p>Given a url <code>startUrl</code> and an interface <code>HtmlParser</code>, implement a web&nbsp;crawler to crawl all links that are under the&nbsp;<strong>same hostname</strong> as&nbsp;<code>startUrl</code>.&nbsp;</p>\n\n<p>Return&nbsp;all urls obtained by your web crawler in <strong>any</strong> order.</p>\n\n<p>Your crawler should:</p>\n\n<ul>\n\t<li>Start from the page: <code>startUrl</code></li>\n\t<li>Call <code>HtmlParser.getUrls(url)</code> to get all urls from a webpage of given url.</li>\n\t<li>Do not crawl the same link twice.</li>\n\t<li>Explore only the links that are under the <strong>same hostname</strong> as <code>startUrl</code>.</li>\n</ul>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/08/13/urlhostname.png\" style=\"width: 600px; height: 164px;\" /></p>\n\n<p>As shown in the example url above, the hostname is <code>example.org</code>. For simplicity sake, you may assume all&nbsp;urls use <strong>http protocol</strong> without any&nbsp;<strong>port</strong> specified. For example, the urls&nbsp;<code>http://leetcode.com/problems</code> and&nbsp;<code>http://leetcode.com/contest</code> are under the same hostname, while urls <code>http://example.org/test</code> and <code>http://example.com/abc</code> are not under the same hostname.</p>\n\n<p>The <code>HtmlParser</code> interface is defined as such:&nbsp;</p>\n\n<pre>\ninterface HtmlParser {\n  // Return a list of all urls from a webpage of given <em>url</em>.\n  public List&lt;String&gt; getUrls(String url);\n}</pre>\n\n<p>Below&nbsp;are two examples explaining the functionality of the problem, for custom testing purposes you&#39;ll have three&nbsp;variables&nbsp;<code data-stringify-type=\"code\">urls</code>,&nbsp;<code data-stringify-type=\"code\">edges</code>&nbsp;and&nbsp;<code data-stringify-type=\"code\">startUrl</code>. Notice that you will only have access to&nbsp;<code data-stringify-type=\"code\">startUrl</code>&nbsp;in your code, while&nbsp;<code data-stringify-type=\"code\">urls</code>&nbsp;and&nbsp;<code data-stringify-type=\"code\">edges</code>&nbsp;are not directly accessible to you in code.</p>\n\n<p>Note: Consider the same URL with the trailing slash &quot;/&quot; as a different URL. For example, &quot;http://news.yahoo.com&quot;, and &quot;http://news.yahoo.com/&quot; are different urls.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/23/sample_2_1497.png\" style=\"width: 610px; height: 300px;\" /></p>\n\n<pre>\n<strong>Input:\n</strong>urls = [\n&nbsp; &quot;http://news.yahoo.com&quot;,\n&nbsp; &quot;http://news.yahoo.com/news&quot;,\n&nbsp; &quot;http://news.yahoo.com/news/topics/&quot;,\n&nbsp; &quot;http://news.google.com&quot;,\n&nbsp; &quot;http://news.yahoo.com/us&quot;\n]\nedges = [[2,0],[2,1],[3,2],[3,1],[0,4]]\nstartUrl = &quot;http://news.yahoo.com/news/topics/&quot;\n<strong>Output:</strong> [\n&nbsp; &quot;http://news.yahoo.com&quot;,\n&nbsp; &quot;http://news.yahoo.com/news&quot;,\n&nbsp; &quot;http://news.yahoo.com/news/topics/&quot;,\n&nbsp; &quot;http://news.yahoo.com/us&quot;\n]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/23/sample_3_1497.png\" style=\"width: 540px; height: 270px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> \nurls = [\n&nbsp; &quot;http://news.yahoo.com&quot;,\n&nbsp; &quot;http://news.yahoo.com/news&quot;,\n&nbsp; &quot;http://news.yahoo.com/news/topics/&quot;,\n&nbsp; &quot;http://news.google.com&quot;\n]\nedges = [[0,2],[2,1],[3,2],[3,1],[3,0]]\nstartUrl = &quot;http://news.google.com&quot;\n<strong>Output:</strong> [&quot;http://news.google.com&quot;]\n<strong>Explanation: </strong>The startUrl links to all other pages that do not share the same hostname.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= urls.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= urls[i].length &lt;= 300</code></li>\n\t<li><code>startUrl</code>&nbsp;is one of the <code>urls</code>.</li>\n\t<li>Hostname label must be from 1 to 63 characters long, including the dots, may contain only the ASCII letters from &#39;a&#39; to&nbsp;&#39;z&#39;, digits&nbsp; from &#39;0&#39; to &#39;9&#39; and the&nbsp;hyphen-minus&nbsp;character (&#39;-&#39;).</li>\n\t<li>The hostname may not start or end with&nbsp;the hyphen-minus character (&#39;-&#39;).&nbsp;</li>\n\t<li>See:&nbsp;&nbsp;<a href=\"https://en.wikipedia.org/wiki/Hostname#Restrictions_on_valid_hostnames\">https://en.wikipedia.org/wiki/Hostname#Restrictions_on_valid_hostnames</a></li>\n\t<li>You may assume there&#39;re&nbsp;no duplicates in url library.</li>\n</ul>\n",
  "likes": 299,
  "dislikes": 332,
  "stats": {
    "totalAccepted": "47.5K",
    "totalSubmission": "69.1K",
    "totalAcceptedRaw": 47529,
    "totalSubmissionRaw": 69104,
    "acRate": "68.8%"
  },
  "topicTags": [
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Interactive",
      "slug": "interactive"
    }
  ],
  "metaData": {
    "name": "crawl",
    "params": [
      {
        "name": "urls",
        "type": "string[]"
      },
      {
        "type": "integer[][]",
        "name": "edges"
      },
      {
        "type": "string",
        "name": "startUrl"
      }
    ],
    "return": {
      "type": "list<string>"
    },
    "manual": true,
    "languages": [
      "cpp",
      "java",
      "python",
      "csharp",
      "python3",
      "javascript",
      "kotlin",
      "ruby",
      "scala",
      "swift",
      "php",
      "golang",
      "typescript"
    ],
    "typescriptCustomType": "class HtmlParser {\n    maps: Map<string, number>;\n    urls: string[];\n    a: Map<number, number[]>;\n    \n    constructor(urlLib: string[], edges: number[][]) {\n        this.maps = new Map<string, number>();\n        this.urls = urlLib;\n        this.a = new Map<number, number[]>()\n        for (let i = 0; i < urlLib.length; i++) {\n            this.maps.set(urlLib[i], i)\n        }\n        \n        for (let i = 0; i < edges.length; i++) {\n            if(this.a.get(edges[i][0]) == null ){\n                var t: number[] = [];\n                t.push(edges[i][1]);\n                this.a.set(edges[i][0],t) ;\n            }\n            else{\n                var t = this.a.get(edges[i][0])!;\n                t.push(edges[i][1]);\n                this.a.set(edges[i][0],t);\n            }\n        }\n    }\n\n    getUrls(url: string): string[] {\n        var ans: string[] = []\n        if(this.maps.get(url) == undefined) return ans;\n        var cur = this.maps.get(url)!;\n\n        if(this.a.get(cur) == undefined) return ans;\n        var urlList = this.a.get(cur)!;\n\n        for(let i=0; i < urlList.length; i++){\n            ans.push(this.urls[urlList[i]]);\n        }\n\n        return ans;\n    }\n};\n"
  },
  "discussion_posts": [
    {
      "name": "beginner_7",
      "year": 2020,
      "content": "Hello, I was wondering, what do the edges meain in the test input? Thank you!!!",
      "voteCount": 18
    },
    {
      "name": "shabri87",
      "year": 2020,
      "content": "For input:\\n[\"http://psn.wlyby.edu/wvoz\",\"http://psn.wlyby.edu/shez\",\"http://psn.wlyby.edu/upkr\",\"http://psn.wlyby.edu/ubmr\",\"http://psn.wlyby.edu/apgb\",\"http://psn.wlyby.edu/sbin\",\"http://psn.wlyby.edu/inmj\",\"http://cpq.jkvox.tech/mjkb\",\"http://lqr.shmtu.tech/rsvw\",\"http://ylk.fubmn.com/ypyh\"]\\n[[0,8],[1,6],[1,7],[1,4],[3,3],[3,4],[3,7],[4,1],[4,0],[4,3],[5,5],[5,8],[5,5],[5,0],[6,8],[7,2],[7,7],[7,4],[10,7],[10,4],[10,3],[10,4]]\\n\"http://psn.wlyby.edu/ubmr\"\\n\\n\\nExpected is:[\"http://psn.wlyby.edu/ubmr\",\"http://psn.wlyby.edu/apgb\",\"http://psn.wlyby.edu/shez\",\"http://psn.wlyby.edu/wvoz\",\"http://psn.wlyby.edu/upkr\",\"http://psn.wlyby.edu/inmj\"]\\nWhile expected assumed by leetcode is: [\"http://psn.wlyby.edu/apgb\",\"http://psn.wlyby.edu/inmj\",\"http://psn.wlyby.edu/shez\",\"http://psn.wlyby.edu/ubmr\",\"http://psn.wlyby.edu/wvoz\"] \\nshould have had one more URL \"http://psn.wlyby.edu/upkr\" which is missing.\\n\\n![image](https://assets.leetcode.com/users/shabri87/image_1590087078.png)\\n",
      "voteCount": 11
    },
    {
      "name": "daringcalf",
      "year": 2023,
      "content": "Lol, my turn to say it. \"This is easy, anyone?\"",
      "voteCount": 9
    },
    {
      "name": "mstaricka",
      "year": 2023,
      "content": "In order to get the solution to run in Kotlin I needed to add an import to my solution:\\n```\\nimport java.util.Random\\n```\\n\\nApparently they are instantiating ```Random()``` behind the scenes which is not working as ```kotlin.random.Random()``` requires a seed parameter. Adding the import forces the Java version of Random to be used.",
      "voteCount": 5
    },
    {
      "name": "kaichamp101",
      "year": 2023,
      "content": "How to make simple BFS/DFS question interesting? Here is how.",
      "voteCount": 5
    },
    {
      "name": "matthewjinmp",
      "year": 2025,
      "content": "easy to code + hard to understand = medium problem ",
      "voteCount": 1
    },
    {
      "name": "Congee",
      "year": 2023,
      "content": "The question description left out an important detail - trailing slash.",
      "voteCount": 1
    },
    {
      "name": "Manukyanq",
      "year": 2025,
      "content": "IMHO this is too easy for anyone who ever used DFS/BFS at least one time. \\n\\ntip for JS/TS coders use JS built in URL class to get hostname without any extra logic: \\n\\n ```js\\n  const { hostname } = new URL(startUrl)\\n```",
      "voteCount": 0
    },
    {
      "name": "sculd",
      "year": 2025,
      "content": "I think the test case has a bug. It should excludes the urls whose host ITSELF does not belong to the start url. But instead it excludes those whose intermediate path is not part of the same host even though the url itself has the same host as the start.",
      "voteCount": 0
    },
    {
      "name": "pengchengchen",
      "year": 2025,
      "content": "can you create tests for JS/TS?",
      "voteCount": 0
    }
  ]
}
