{
  "category": "",
  "id": "366",
  "name": "Find Leaves of Binary Tree",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/find-leaves-of-binary-tree/",
  "slug": "find-leaves-of-binary-tree",
  "isPaidOnly": true,
  "tags": [
    "Tree",
    "Depth-First Search",
    "Binary Tree"
  ],
  "similar_questions": [],
  "questionId": "366",
  "questionFrontendId": "366",
  "title": "Find Leaves of Binary Tree",
  "titleSlug": "find-leaves-of-binary-tree",
  "content": "<p>Given the <code>root</code> of a binary tree, collect a tree&#39;s nodes as if you were doing this:</p>\n\n<ul>\n\t<li>Collect all the leaf nodes.</li>\n\t<li>Remove all the leaf&nbsp;nodes.</li>\n\t<li>Repeat until the tree is empty.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/16/remleaves-tree.jpg\" style=\"width: 500px; height: 215px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5]\n<strong>Output:</strong> [[4,5,3],[2],[1]]\nExplanation:\n[[3,5,4],[2],[1]] and [[3,4,5],[2],[1]] are also considered correct answers since per each level it does not matter the order on which elements are returned.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 100]</code>.</li>\n\t<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n",
  "likes": 3285,
  "dislikes": 63,
  "stats": {
    "totalAccepted": "279.6K",
    "totalSubmission": "344.6K",
    "totalAcceptedRaw": 279579,
    "totalSubmissionRaw": 344638,
    "acRate": "81.1%"
  },
  "topicTags": [
    {
      "name": "Tree",
      "slug": "tree"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Binary Tree",
      "slug": "binary-tree"
    }
  ],
  "metaData": {
    "name": "findLeaves",
    "params": [
      {
        "name": "root",
        "type": "TreeNode"
      }
    ],
    "return": {
      "type": "list<list<integer>>",
      "dealloc": true
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": true,
        "name": "LinkedIn",
        "slug": "linkedin",
        "timesEncountered": 13
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "kaaustubh",
      "year": 2021,
      "content": "I was asked the same question in the interview at Google, I think I came up with a good solution to return the leaves on the same level. But somehow the inteviewer was very keen not only to get the sequence but also to remove the leaves from the tree. I struggled a bit with that. And he really wanted the leaves to be remove from the root. But when I checked Leetcode later, I found none of the solutions are actually removing leaves.",
      "voteCount": 19
    },
    {
      "name": "StefanPochmann",
      "year": 2016,
      "content": "I know how to remove children - set the parent's `left` or `right` to `null`. But how can I remove the root?",
      "voteCount": 9
    },
    {
      "name": "tin_le",
      "year": 2024,
      "content": "Hint : the index in the vector is the height of max(left, right) subtree",
      "voteCount": 7
    },
    {
      "name": "andrejs",
      "year": 2024,
      "content": "O(n) is possible here",
      "voteCount": 2
    },
    {
      "name": "Derek_S",
      "year": 2023,
      "content": "For anyone who is passing all but one test cases:\\nMake sure you are not relying on node values being unique. ",
      "voteCount": 2
    },
    {
      "name": "laichbr",
      "year": 2023,
      "content": "If you think of it as repeated DFS for the leaves and the trimming at the occurrence of a leaf node per repeated attempt with the node value added to the current iterations list values, you will get the list for this dfs removal. If you add the resulting list to the final list each time and go until you\\'ve nulled the root, you get it! ",
      "voteCount": 1
    },
    {
      "name": "ZenCoding78",
      "year": 2025,
      "content": "Is the problem asking to remove leaf nodes in the tree\\'s initial state or in addition, nodes that become leaf nodes after the initial leaf nodes are removed?",
      "voteCount": 0
    },
    {
      "name": "gauthamnambi",
      "year": 2025,
      "content": "Do a topological sort. Challange for topological sorting is to create a map for finding the parent nodes for each node.",
      "voteCount": 0
    },
    {
      "name": "ronnyvega",
      "year": 2025,
      "content": "Collect all the leaf nodes.\\nRemove all the leaf nodes.\\nRepeat until the tree is empty.\\n\\nThis is very misguiding.",
      "voteCount": 0
    }
  ]
}
