{
  "category": "",
  "id": "721",
  "name": "Accounts Merge",
  "difficulty": "Medium",
  "leetcode_url": "https://leetcode.com/problems/accounts-merge/",
  "slug": "accounts-merge",
  "isPaidOnly": false,
  "tags": [
    "Array",
    "Hash Table",
    "String",
    "Depth-First Search",
    "Breadth-First Search",
    "Union Find",
    "Sorting"
  ],
  "similar_questions": [
    {
      "title": "Redundant Connection",
      "difficulty": "Medium",
      "slug": "redundant-connection"
    },
    {
      "title": "Sentence Similarity",
      "difficulty": "Easy",
      "slug": "sentence-similarity"
    },
    {
      "title": "Sentence Similarity II",
      "difficulty": "Medium",
      "slug": "sentence-similarity-ii"
    }
  ],
  "questionId": "721",
  "questionFrontendId": "721",
  "title": "Accounts Merge",
  "titleSlug": "accounts-merge",
  "content": "<p>Given a list of <code>accounts</code> where each element <code>accounts[i]</code> is a list of strings, where the first element <code>accounts[i][0]</code> is a name, and the rest of the elements are <strong>emails</strong> representing emails of the account.</p>\n\n<p>Now, we would like to merge these accounts. Two accounts definitely belong to the same person if there is some common email to both accounts. Note that even if two accounts have the same name, they may belong to different people as people could have the same name. A person can have any number of accounts initially, but all of their accounts definitely have the same name.</p>\n\n<p>After merging the accounts, return the accounts in the following format: the first element of each account is the name, and the rest of the elements are emails <strong>in sorted order</strong>. The accounts themselves can be returned in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> accounts = [[&quot;John&quot;,&quot;johnsmith@mail.com&quot;,&quot;john_newyork@mail.com&quot;],[&quot;John&quot;,&quot;johnsmith@mail.com&quot;,&quot;john00@mail.com&quot;],[&quot;Mary&quot;,&quot;mary@mail.com&quot;],[&quot;John&quot;,&quot;johnnybravo@mail.com&quot;]]\n<strong>Output:</strong> [[&quot;John&quot;,&quot;john00@mail.com&quot;,&quot;john_newyork@mail.com&quot;,&quot;johnsmith@mail.com&quot;],[&quot;Mary&quot;,&quot;mary@mail.com&quot;],[&quot;John&quot;,&quot;johnnybravo@mail.com&quot;]]\n<strong>Explanation:</strong>\nThe first and second John&#39;s are the same person as they have the common email &quot;johnsmith@mail.com&quot;.\nThe third John and Mary are different people as none of their email addresses are used by other accounts.\nWe could return these lists in any order, for example the answer [[&#39;Mary&#39;, &#39;mary@mail.com&#39;], [&#39;John&#39;, &#39;johnnybravo@mail.com&#39;], \n[&#39;John&#39;, &#39;john00@mail.com&#39;, &#39;john_newyork@mail.com&#39;, &#39;johnsmith@mail.com&#39;]] would still be accepted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> accounts = [[&quot;Gabe&quot;,&quot;Gabe0@m.co&quot;,&quot;Gabe3@m.co&quot;,&quot;Gabe1@m.co&quot;],[&quot;Kevin&quot;,&quot;Kevin3@m.co&quot;,&quot;Kevin5@m.co&quot;,&quot;Kevin0@m.co&quot;],[&quot;Ethan&quot;,&quot;Ethan5@m.co&quot;,&quot;Ethan4@m.co&quot;,&quot;Ethan0@m.co&quot;],[&quot;Hanzo&quot;,&quot;Hanzo3@m.co&quot;,&quot;Hanzo1@m.co&quot;,&quot;Hanzo0@m.co&quot;],[&quot;Fern&quot;,&quot;Fern5@m.co&quot;,&quot;Fern1@m.co&quot;,&quot;Fern0@m.co&quot;]]\n<strong>Output:</strong> [[&quot;Ethan&quot;,&quot;Ethan0@m.co&quot;,&quot;Ethan4@m.co&quot;,&quot;Ethan5@m.co&quot;],[&quot;Gabe&quot;,&quot;Gabe0@m.co&quot;,&quot;Gabe1@m.co&quot;,&quot;Gabe3@m.co&quot;],[&quot;Hanzo&quot;,&quot;Hanzo0@m.co&quot;,&quot;Hanzo1@m.co&quot;,&quot;Hanzo3@m.co&quot;],[&quot;Kevin&quot;,&quot;Kevin0@m.co&quot;,&quot;Kevin3@m.co&quot;,&quot;Kevin5@m.co&quot;],[&quot;Fern&quot;,&quot;Fern0@m.co&quot;,&quot;Fern1@m.co&quot;,&quot;Fern5@m.co&quot;]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= accounts.length &lt;= 1000</code></li>\n\t<li><code>2 &lt;= accounts[i].length &lt;= 10</code></li>\n\t<li><code>1 &lt;= accounts[i][j].length &lt;= 30</code></li>\n\t<li><code>accounts[i][0]</code> consists of English letters.</li>\n\t<li><code>accounts[i][j] (for j &gt; 0)</code> is a valid email.</li>\n</ul>\n",
  "likes": 7430,
  "dislikes": 1274,
  "stats": {
    "totalAccepted": "557.1K",
    "totalSubmission": "925.9K",
    "totalAcceptedRaw": 557100,
    "totalSubmissionRaw": 925891,
    "acRate": "60.2%"
  },
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Union Find",
      "slug": "union-find"
    },
    {
      "name": "Sorting",
      "slug": "sorting"
    }
  ],
  "metaData": {
    "name": "accountsMerge",
    "params": [
      {
        "name": "accounts",
        "type": "list<list<string>>"
      }
    ],
    "return": {
      "type": "list<list<string>>"
    }
  },
  "company_tag_stats": {
    "1": [
      {
        "taggedByAdmin": true,
        "name": "Meta",
        "slug": "facebook",
        "timesEncountered": 26
      }
    ]
  },
  "discussion_posts": [
    {
      "name": "crazysamurai",
      "year": 2022,
      "content": "I\\'m sorry, i\\'ll use only one email from now on.",
      "voteCount": 1073
    },
    {
      "name": "trocadilho",
      "year": 2024,
      "content": "Solution using SQL:\n```\nDROP TABLE accounts;\n```",
      "voteCount": 676
    },
    {
      "name": "xuxuxudaren",
      "year": 2019,
      "content": "My heart has broken.",
      "voteCount": 545
    },
    {
      "name": "harkeshbirman",
      "year": 2022,
      "content": "NOT A MEDIUM. IT\\'S HARD",
      "voteCount": 373
    },
    {
      "name": "zzznotsomuch",
      "year": 2019,
      "content": "I disagree with this problem being termed as medium. Even if one know DSU, it\\'s hard to arrive to the solution.",
      "voteCount": 222
    },
    {
      "name": "coder42032",
      "year": 2023,
      "content": "Move this problem into hard section.",
      "voteCount": 150
    },
    {
      "name": "techno_phile",
      "year": 2023,
      "content": "Leetcode should add a new difficulty label called \"VERY HARD\" and this as one of the first problems to be labeled as that.",
      "voteCount": 110
    },
    {
      "name": "marcello834",
      "year": 2020,
      "content": "Alright, this is truly out of context... It turns out that I have 2 leetcode accounts, how do I merge one into the other? :)",
      "voteCount": 103
    },
    {
      "name": "kamun",
      "year": 2022,
      "content": "This is definitely a hard problem. I saw many hards simpler than this one and not because it require knowledge of DSU or DFS, but because it is really hard to implement a clean version. ",
      "voteCount": 60
    },
    {
      "name": "MinhUchiha",
      "year": 2022,
      "content": "This should be marked as hard...",
      "voteCount": 50
    }
  ]
}
